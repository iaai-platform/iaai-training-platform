<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Online Live Training - Luxury Medical Training</title>
  <link rel="stylesheet" href="/css/online-course-details.css">
  <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Montserrat:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  
  <style>
    /* Reset and Base Styles */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: 'Montserrat', sans-serif;
      background-color: #f9f9f9;
      color: #333;
    }
    
    /* Breadcrumb Styling */
    .breadcrumb {
      margin: 0;
      padding: 20px 5%;
      background: linear-gradient(to right, rgba(0, 33, 71, 0.05), rgba(184, 134, 11, 0.05));
      font-size: 14px;
      backdrop-filter: blur(10px);
    }
    
    .breadcrumb a {
      color: #002147;
      text-decoration: none;
      font-weight: 500;
      transition: all 0.3s ease;
      position: relative;
    }
    
    .breadcrumb a::after {
      content: '';
      position: absolute;
      bottom: -2px;
      left: 0;
      width: 0;
      height: 2px;
      background-color: #b8860b;
      transition: width 0.3s ease;
    }
    
    .breadcrumb a:hover::after {
      width: 100%;
    }
    
    .breadcrumb span {
      color: #b8860b;
      font-weight: 600;
    }
    
    /* Hero Section */
    #hero {
      background: linear-gradient(135deg, #002147 0%, #001633 100%);
      position: relative;
      overflow: hidden;
      padding: 80px 0;
    }
    
    #hero::before {
      content: '';
      position: absolute;
      top: -50%;
      right: -10%;
      width: 600px;
      height: 600px;
      background: radial-gradient(circle, rgba(184, 134, 11, 0.1) 0%, transparent 70%);
      border-radius: 50%;
    }
    
    #hero::after {
      content: '';
      position: absolute;
      bottom: -30%;
      left: -5%;
      width: 400px;
      height: 400px;
      background: radial-gradient(circle, rgba(184, 134, 11, 0.08) 0%, transparent 70%);
      border-radius: 50%;
    }
    
    .hero-content {
      position: relative;
      z-index: 2;
      text-align: center;
      max-width: 1000px;
      margin: 0 auto;
      padding: 0 20px;
    }
    
    .hero-content h1 {
      font-family: 'Montserrat', sans-serif;
      font-size: 48px;
      font-weight: 700;
      color: white;
      margin-bottom: 20px;
      animation: fadeInUp 0.8s ease-out;
    }
    
    .hero-content p {
      font-size: 18px;
      color: rgba(255, 255, 255, 0.9);
      line-height: 1.8;
      max-width: 800px;
      margin: 0 auto;
      animation: fadeInUp 0.8s ease-out 0.2s both;
    }
    
    /* Search and Filter Bar */
    .filter-bar {
      background: white;
      padding: 25px;
      margin: -40px auto 40px;
      max-width: 1200px;
      border-radius: 10px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      position: relative;
      z-index: 10;
      display: flex;
      gap: 20px;
      flex-wrap: wrap;
      align-items: center;
    }
    
    .search-box {
      flex: 1;
      min-width: 250px;
      position: relative;
    }
    
    .search-box input {
      width: 100%;
      padding: 12px 45px 12px 20px;
      border: 2px solid #e0e0e0;
      border-radius: 50px;
      font-size: 14px;
      transition: all 0.3s ease;
    }
    
    .search-box input:focus {
      outline: none;
      border-color: #b8860b;
    }
    
    .search-box i {
      position: absolute;
      right: 20px;
      top: 50%;
      transform: translateY(-50%);
      color: #999;
    }
    
    .filter-dropdown {
      min-width: 180px;
    }
    
    .filter-dropdown select {
      width: 100%;
      padding: 12px 20px;
      border: 2px solid #e0e0e0;
      border-radius: 50px;
      font-size: 14px;
      background: white;
      cursor: pointer;
      transition: all 0.3s ease;
    }
    
    .filter-dropdown select:focus {
      outline: none;
      border-color: #b8860b;
    }
    
    /* View Toggle Buttons */
    .view-toggle {
      max-width: 1400px;
      margin: 20px auto;
      padding: 0 20px;
      display: flex;
      justify-content: center;
      gap: 10px;
    }
    
    .view-btn {
      padding: 12px 30px;
      background: white;
      border: 2px solid #e0e0e0;
      border-radius: 50px;
      font-size: 15px;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      gap: 10px;
      color: #666;
    }
    
    .view-btn:hover {
      border-color: #b8860b;
      color: #b8860b;
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }
    
    .view-btn.active {
      background: linear-gradient(135deg, #b8860b 0%, #9a7209 100%);
      color: white;
      border-color: #b8860b;
    }

    /* User Instructions */
    .user-instructions {
      max-width: 1400px;
      margin: 0 auto 30px;
      padding: 0 20px;
    }

    .instructions-content {
      background: linear-gradient(135deg, #e8f4ff 0%, #f0f7ff 100%);
      padding: 20px 25px;
      border-radius: 10px;
      border-left: 5px solid #b8860b;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

    .instructions-content h3 {
      color: #002147;
      font-size: 18px;
      margin-bottom: 10px;
      font-weight: 600;
    }

    .instructions-content p {
      color: #333;
      font-size: 14px;
      line-height: 1.6;
      margin: 0;
    }

    .highlight {
      color: #b8860b;
      font-weight: 600;
    }

    /* Table Section Styling */
    .table-view-container {
      display: block;
    }

    .table-section {
      max-width: 1400px;
      margin: 0 auto 60px;
      padding: 0 20px;
    }

    .section-header {
      text-align: center;
      margin-bottom: 30px;
      padding: 20px 0;
    }

    .section-header h2 {
      font-size: 32px;
      font-weight: 700;
      color: #002147;
      margin-bottom: 10px;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 15px;
    }

    .section-header h2 i {
      color: #b8860b;
    }

    .section-header p {
      font-size: 16px;
      color: #666;
      max-width: 600px;
      margin: 0 auto;
    }
    
    /* Table Container */
    .table-container {
      overflow-x: auto;
      border-radius: 12px;
      box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
      background: white;
    }
    
    /* Modern Table Styling with Sticky Header */
    .courses-table {
      width: 100%;
      border-collapse: collapse;
      background: white;
      border-radius: 12px;
      overflow: hidden;
    }
    
    .courses-table thead {
      background: linear-gradient(135deg, #002147 0%, #003366 100%);
      position: sticky;
      top: 0;
      z-index: 100;
    }

    .sticky-header {
      position: sticky;
      top: 0;
      z-index: 100;
    }
    
    .courses-table th {
      padding: 20px 15px;
      text-align: left;
      color: white;
      font-weight: 600;
      font-size: 14px;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      white-space: nowrap;
      position: relative;
    }
    
    .courses-table th::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      height: 3px;
      background: linear-gradient(to right, transparent, #b8860b, transparent);
    }
    
    .courses-table tbody tr {
      transition: all 0.3s ease;
      border-bottom: 1px solid #f0f0f0;
    }
    
    .courses-table tbody tr:hover {
      background-color: #fefdfb;
      transform: scale(1.01);
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
    }
    
    .courses-table td {
      padding: 20px 15px;
      font-size: 14px;
    }
    
    /* Course Title Cell */
    .course-title {
      font-weight: 600;
      color: #002147;
    }
    
    /* Date Badge */
    .date-badge {
      display: inline-block;
      padding: 6px 12px;
      background: #f0f7ff;
      color: #002147;
      border-radius: 20px;
      font-size: 13px;
      font-weight: 500;
    }

    /* Completed course styling */
    .date-badge.expired {
      background: #f8f9fa;
      color: #6c757d;
    }
    
    /* Price Badge */
    .price-badge {
      font-weight: 700;
      color: #b8860b;
      font-size: 16px;
    }

    .price-badge.expired {
      color: #6c757d;
    }
    
    /* Status Badges */
    .status-badge {
      padding: 6px 16px;
      border-radius: 20px;
      font-size: 12px;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      display: inline-block;
    }
    
    .status-open {
      background: #d4f4dd;
      color: #2e7d3e;
    }
    
    .status-limited {
      background: #fff3cd;
      color: #856404;
    }
    
    .status-closed {
      background: #f8d7da;
      color: #721c24;
    }

    /* Completed status */
    .status-completed {
      background: #e9ecef;
      color: #495057;
    }
    
    /* Platform Badge */
    .platform-badge {
      display: inline-flex;
      align-items: center;
      gap: 6px;
      padding: 4px 12px;
      background: #e8f4ff;
      color: #002147;
      border-radius: 15px;
      font-size: 13px;
    }
    
    /* Seats Count Badge */
    .seats-count {
      font-weight: 600;
      padding: 4px 8px;
      border-radius: 12px;
      font-size: 14px;
    }
    
    .seats-good {
      color: #2e7d3e;
      background: #d4f4dd;
    }
    
    .seats-warning {
      color: #856404;
      background: #fff3cd;
    }
    
    .seats-danger {
      color: #721c24;
      background: #f8d7da;
    }

    /* Expired seats styling */
    .seats-count.expired {
      color: #6c757d;
      background: #f8f9fa;
    }
    
    /* Certificate Interest Column Styles */
    .certificate-interest {
      text-align: center;
      padding: 10px;
    }
    
    .certificate-select {
      background: white;
      border: 2px solid #e0e0e0;
      border-radius: 8px;
      padding: 6px 12px;
      font-size: 13px;
      cursor: pointer;
      transition: all 0.3s ease;
      min-width: 80px;
    }
    
    .certificate-select:focus {
      outline: none;
      border-color: #b8860b;
    }
    
    .certificate-badge {
      padding: 4px 8px;
      border-radius: 12px;
      font-size: 12px;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }
    
    .certificate-included {
      background: #d4f4dd;
      color: #2e7d3e;
    }
    
    .certificate-not-available {
      background: #f8d7da;
      color: #721c24;
    }
    
    /* Action Buttons */
    .action-buttons {
      display: flex;
      gap: 8px;
      align-items: center;
    }
    
    .btn-icon {
      width: 38px;
      height: 38px;
      border: none;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
    }
    
    .btn-icon::before {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 0;
      height: 0;
      border-radius: 50%;
      background: rgba(255, 255, 255, 0.3);
      transform: translate(-50%, -50%);
      transition: width 0.6s, height 0.6s;
    }
    
    .btn-icon:hover::before {
      width: 50px;
      height: 50px;
    }
    
    .btn-details {
      background: #002147;
      color: white;
    }
    
    .btn-details:hover {
      background: #003366;
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(0, 33, 71, 0.3);
    }
    
    .btn-wishlist {
      background: #fff;
      color: #e74c3c;
      border: 2px solid #e74c3c;
    }
    
    .btn-wishlist:hover {
      background: #e74c3c;
      color: white;
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(231, 76, 60, 0.3);
    }
    
    .btn-cart {
      background: #b8860b;
      color: white;
    }
    
    .btn-cart:hover {
      background: #9a7209;
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(184, 134, 11, 0.3);
    }

    /* Info and Archive buttons for completed courses */
    .btn-info {
      background: #17a2b8;
      color: white;
    }

    .btn-info:hover {
      background: #138496;
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(23, 162, 184, 0.3);
    }

    .btn-archive {
      background: #6c757d;
      color: white;
    }

    .btn-archive:hover {
      background: #5a6268;
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(108, 117, 125, 0.3);
    }
    
    /* Tooltips */
    .tooltip {
      position: relative;
    }
    
    .tooltip::after {
      content: attr(data-tooltip);
      position: absolute;
      bottom: 100%;
      left: 50%;
      transform: translateX(-50%);
      background: #333;
      color: white;
      padding: 5px 10px;
      border-radius: 4px;
      font-size: 12px;
      white-space: nowrap;
      opacity: 0;
      pointer-events: none;
      transition: opacity 0.3s ease;
      margin-bottom: 5px;
    }
    
    .tooltip:hover::after {
      opacity: 1;
    }

    /* No courses message styling */
    .no-courses {
      text-align: center;
      padding: 60px 20px;
    }

    .no-courses-message {
      color: #6c757d;
    }

    .no-courses-message i {
      font-size: 60px;
      color: #dee2e6;
      margin-bottom: 20px;
    }

    .no-courses-message h3 {
      font-size: 24px;
      margin-bottom: 10px;
      color: #495057;
    }

    .no-courses-message p {
      font-size: 16px;
      color: #6c757d;
    }

    /* Expired course row styling */
    .expired-course {
      opacity: 0.8;
    }

    .expired-course:hover {
      opacity: 1;
    }
    
    /* Grid View (keep existing styles but hidden by default) */
    .grid-container {
      max-width: 1400px;
      margin: 0 auto 60px;
      padding: 0 20px;
      display: none;
    }

    .courses-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
      gap: 30px;
    }

    .course-card {
      background: white;
      border-radius: 12px;
      overflow: hidden;
      box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
      transition: all 0.3s ease;
      position: relative;
    }

    .course-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
    }

    .course-image {
      width: 100%;
      height: 200px;
      background: linear-gradient(135deg, #002147 0%, #003366 100%);
      position: relative;
      overflow: hidden;
    }

    .course-image img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }

    .course-image-placeholder {
      width: 100%;
      height: 200px;
      background: linear-gradient(135deg, #002147 0%, #003366 100%);
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-size: 48px;
    }

    .course-badge-overlay {
      position: absolute;
      top: 15px;
      right: 15px;
      display: flex;
      flex-direction: column;
      gap: 8px;
    }

    .live-indicator {
      background: #dc3545;
      color: white;
      padding: 5px 15px;
      border-radius: 20px;
      font-size: 12px;
      font-weight: 600;
      display: flex;
      align-items: center;
      gap: 5px;
      animation: pulse 2s infinite;
    }

    @keyframes pulse {
      0% { opacity: 1; }
      50% { opacity: 0.7; }
      100% { opacity: 1; }
    }

    .course-card-body {
      padding: 25px;
    }

    .course-card-title {
      font-size: 18px;
      font-weight: 600;
      color: #002147;
      margin-bottom: 10px;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }

    .course-card-instructor {
      color: #666;
      font-size: 14px;
      margin-bottom: 15px;
      display: flex;
      align-items: center;
      gap: 5px;
    }

    .course-card-meta {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
      flex-wrap: wrap;
      gap: 10px;
    }

    .course-card-date {
      display: flex;
      align-items: center;
      gap: 5px;
      color: #666;
      font-size: 14px;
    }

    .course-card-platform {
      display: flex;
      align-items: center;
      gap: 5px;
      padding: 4px 12px;
      background: #f0f7ff;
      color: #002147;
      border-radius: 15px;
      font-size: 13px;
    }

    .course-card-certificate {
      margin: 10px 0;
      padding: 15px;
      background: #f8f9fa;
      border-radius: 8px;
      border: 1px solid #e9ecef;
    }

    .certificate-option {
      display: flex;
      align-items: center;
      gap: 10px;
      margin-bottom: 10px;
    }

    .certificate-option label {
      font-size: 14px;
      font-weight: 500;
      color: #333;
    }

    .certificate-price-update {
      font-size: 12px;
      color: #666;
      font-style: italic;
    }

    .course-card-footer {
      border-top: 1px solid #f0f0f0;
      padding-top: 20px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .course-card-price {
      font-size: 24px;
      font-weight: 700;
      color: #b8860b;
    }

    .course-card-actions {
      display: flex;
      gap: 8px;
    }
    
    /* Modal Styles */
    .course-modal {
      display: none;
      position: fixed;
      z-index: 1000;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
      animation: fadeIn 0.3s ease;
    }

    .course-modal.show {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .modal-content {
      background: white;
      margin: auto;
      padding: 0;
      border-radius: 12px;
      max-width: 600px;
      width: 90%;
      max-height: 80vh;
      overflow: hidden;
      position: relative;
      animation: slideIn 0.3s ease;
    }

    .modal-header {
      background: linear-gradient(135deg, #002147 0%, #003366 100%);
      color: white;
      padding: 20px 25px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      border-radius: 12px 12px 0 0;
    }

    .modal-header.archive-header {
      background: linear-gradient(135deg, #6c757d 0%, #495057 100%);
    }

    .modal-header h3 {
      margin: 0;
      font-size: 20px;
      font-weight: 600;
    }

    .modal-close {
      background: none;
      border: none;
      font-size: 24px;
      cursor: pointer;
      padding: 5px;
      border-radius: 50%;
      width: 40px;
      height: 40px;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: all 0.3s ease;
    }

    .modal-close:hover {
      background: rgba(255, 255, 255, 0.2);
    }

    .modal-body {
      padding: 25px;
      max-height: 60vh;
      overflow-y: auto;
    }

    .archive-badge {
      display: inline-flex;
      align-items: center;
      gap: 8px;
      padding: 8px 16px;
      background: #e9ecef;
      color: #495057;
      border-radius: 20px;
      font-size: 14px;
      font-weight: 600;
      margin-bottom: 20px;
    }

    .modal-course-info {
      margin-bottom: 25px;
    }

    .modal-info-row {
      display: grid;
      grid-template-columns: 1fr 2fr;
      gap: 15px;
      padding: 12px 0;
      border-bottom: 1px solid #f0f0f0;
    }

    .modal-info-row:last-child {
      border-bottom: none;
    }

    .modal-label {
      font-weight: 600;
      color: #002147;
    }

    .modal-actions {
      display: flex;
      gap: 12px;
      justify-content: flex-end;
      padding-top: 20px;
      border-top: 1px solid #f0f0f0;
    }

    .modal-btn {
      padding: 12px 24px;
      border: none;
      border-radius: 8px;
      font-size: 14px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .modal-btn-primary {
      background: #002147;
      color: white;
    }

    .modal-btn-primary:hover {
      background: #003366;
    }

    .modal-btn-secondary {
      background: #6c757d;
      color: white;
    }

    .modal-btn-secondary:hover {
      background: #5a6268;
    }
    
    /* Notification Styles */
    .notification {
      position: fixed;
      top: 20px;
      right: -400px;
      max-width: 400px;
      padding: 20px 25px;
      background: white;
      border-radius: 8px;
      box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15);
      display: flex;
      align-items: center;
      gap: 15px;
      transition: right 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
      z-index: 1000;
    }
    
    .notification.show {
      right: 20px;
    }
    
    .notification-icon {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-shrink: 0;
    }
    
    .notification.success .notification-icon {
      background: #d4f4dd;
      color: #2e7d3e;
    }
    
    .notification.error .notification-icon {
      background: #f8d7da;
      color: #721c24;
    }
    
    .notification.warning .notification-icon {
      background: #fff3cd;
      color: #856404;
    }
    
    .notification-content h4 {
      margin: 0 0 5px;
      font-size: 16px;
      font-weight: 600;
    }
    
    .notification-content p {
      margin: 0;
      font-size: 14px;
      color: #666;
    }
    
    /* Loading State */
    .btn-loading {
      pointer-events: none;
      opacity: 0.7;
    }
    
    .btn-loading i {
      animation: spin 1s linear infinite;
    }
    
    /* Animations */
    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
    
    @keyframes spin {
      from { transform: rotate(0deg); }
      to { transform: rotate(360deg); }
    }

    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }

    @keyframes slideIn {
      from { 
        opacity: 0;
        transform: translateY(-50px);
      }
      to { 
        opacity: 1;
        transform: translateY(0);
      }
    }
    
    /* Empty State */
    .empty-state {
      text-align: center;
      padding: 60px 20px;
      background: white;
      border-radius: 12px;
      margin: 40px auto;
      max-width: 600px;
    }
    
    .empty-state i {
      font-size: 60px;
      color: #ddd;
      margin-bottom: 20px;
    }
    
    .empty-state h3 {
      font-size: 24px;
      color: #333;
      margin-bottom: 10px;
    }
    
    .empty-state p {
      color: #666;
      font-size: 16px;
    }
    
    /* Responsive Design */
    @media (max-width: 768px) {
      .hero-content h1 {
        font-size: 32px;
      }
      
      .filter-bar {
        flex-direction: column;
        gap: 15px;
      }
      
      .search-box, .filter-dropdown {
        width: 100%;
      }
      
      .table-container {
        padding: 0;
      }
      
      .courses-table {
        font-size: 12px;
      }
      
      .courses-table th,
      .courses-table td {
        padding: 12px 8px;
      }
      
      .action-buttons {
        flex-direction: column;
        gap: 5px;
      }
      
      .btn-icon {
        width: 32px;
        height: 32px;
      }

      .courses-grid {
        grid-template-columns: 1fr;
      }
      
      .notification {
        left: 10px;
        right: 10px;
        max-width: none;
      }
      
      .notification.show {
        right: 10px;
      }

      .modal-content {
        width: 95%;
        max-height: 90vh;
      }

      .modal-info-row {
        grid-template-columns: 1fr;
        gap: 8px;
      }

      .modal-actions {
        flex-direction: column;
      }

      .modal-btn {
        width: 100%;
        justify-content: center;
      }
    }
  </style>
</head>

<body>
  <%- include('partials/header') %>

  <!-- Enhanced Breadcrumb -->
  <nav class="breadcrumb">
    <a href="/"><i class="fas fa-home"></i> Home</a> 
    <i class="fas fa-chevron-right" style="margin: 0 10px; color: #999; font-size: 12px;"></i>
    <a href="/training-programs">Training Programs</a> 
    <i class="fas fa-chevron-right" style="margin: 0 10px; color: #999; font-size: 12px;"></i>
    <span>Online Live Training</span>
  </nav>

  <!-- Enhanced Hero Section -->
  <section id="hero">
    <div class="hero-content">
      <h1>Interactive Online Live Training</h1>
      <p>Join our expert-led live sessions from anywhere in the world. Experience real-time interaction, hands-on demonstrations, and immediate feedback in our premium virtual classroom environment.</p>
    </div>
  </section>

  <!-- Search and Filter Bar -->
  <div class="filter-bar">
    <div class="search-box">
      <input type="text" id="courseSearch" placeholder="Search courses by name, instructor, or topic...">
      <i class="fas fa-search"></i>
    </div>
    <div class="filter-dropdown">
      <select id="statusFilter">
        <option value="">All Status</option>
        <option value="Open to Register">Open</option>
        <option value="Full">Full</option>
        <option value="In Progress">In Progress</option>
      </select>
    </div>
    <div class="filter-dropdown">
      <select id="dateFilter">
        <option value="">All Dates</option>
        <option value="upcoming">Upcoming</option>
        <option value="this-week">This Week</option>
        <option value="this-month">This Month</option>
        <option value="next-month">Next Month</option>
      </select>
    </div>
    <div class="filter-dropdown">
      <select id="platformFilter">
        <option value="">All Platforms</option>
        <option value="zoom">Zoom</option>
        <option value="teams">Microsoft Teams</option>
        <option value="webex">Webex</option>
        <option value="custom">Custom Platform</option>
      </select>
    </div>
    <div class="filter-dropdown">
      <select id="sortBy">
        <option value="">Sort By</option>
        <option value="date-asc">Date (Earliest First)</option>
        <option value="date-desc">Date (Latest First)</option>
        <option value="price-asc">Price (Low to High)</option>
        <option value="price-desc">Price (High to Low)</option>
      </select>
    </div>
  </div>

  <!-- View Toggle Buttons -->
  <div class="view-toggle">
    <button class="view-btn active" id="tableViewBtn">
      <i class="fas fa-list"></i> List View
    </button>
    <button class="view-btn" id="gridViewBtn">
      <i class="fas fa-th"></i> Grid View
    </button>
  </div>

  <!-- User Instructions -->
  <div class="user-instructions" id="userInstructions">
    <div class="instructions-content">
      <h3><i class="fas fa-info-circle"></i> How to Register</h3>
      <p>
        <strong>Quick Actions:</strong> 
        Use the action buttons to <span class="highlight">view details</span>, 
        add to <span class="highlight">wishlist <i class="fas fa-heart"></i></span>, 
        or <span class="highlight">add to cart <i class="fas fa-shopping-cart"></i></span>. 
        Adding to cart will redirect you to the order page automatically.
      </p>
    </div>
  </div>

  <!-- Two-Table Structure -->
  <div class="table-view-container" id="tableView">
    
    <!-- Upcoming Courses Section -->
    <div class="table-section" id="upcomingSection">
      <div class="section-header">
        <h2><i class="fas fa-calendar-check"></i> Upcoming Live Sessions</h2>
        <p>Current and future online training opportunities</p>
      </div>
      
      <div class="table-container" id="upcomingTableContainer">
        <% if (typeof upcomingCourses !== 'undefined' && upcomingCourses.length > 0) { %>
        <table class="courses-table" id="upcomingCoursesTable">
          <thead class="sticky-header">
            <tr>
              <th style="width: 5%">#</th>
              <th style="width: 10%">Code</th>
              <th style="width: 20%">Course Title</th>
              <th style="width: 12%">Start Date</th>
              <th style="width: 10%">Duration</th>
              <th style="width: 10%">Platform</th>
              <th style="width: 8%">Certificate</th>
              <th style="width: 8%">Price</th>
              <th style="width: 8%">Seats</th>
              <th style="width: 8%">Status</th>
              <th style="width: 12%">Actions</th>
            </tr>
          </thead>
          <tbody>
            <% upcomingCourses.forEach((course, index) => { %>
              <tr data-course-id="<%= course._id %>" 
                  data-status="<%= course.displayStatus || course.status %>"
                  data-date="<%= course.startDate %>"
                  data-price="<%= course.price || 0 %>"
                  data-platform="<%= course.platform?.toLowerCase() || 'zoom' %>">
                <td><%= index + 1 %></td>
                <td><strong><%= course.courseCode || 'N/A' %></strong></td>
                <td class="course-title">
                  <%= course.title || 'Untitled Course' %>
                  <% if (course.instructor) { %>
                    <br><small style="color: #666;">
                      <i class="fas fa-user-tie"></i> <%= course.instructor %>
                      <% if (course.coInstructors && course.coInstructors.length > 0) { %>
                        & <%= course.coInstructors.length %> more
                      <% } %>
                    </small>
                  <% } %>
                </td>
                <td>
                  <span class="date-badge">
                    <i class="far fa-calendar"></i> 
                    <%= course.startDate ? new Date(course.startDate).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' }) : 'TBD' %>
                  </span>
                  <% if (course.timeUntilStart && course.daysUntilStart > 0) { %>
                    <br><small style="color: #666;">in <%= course.timeUntilStart %></small>
                  <% } %>
                </td>
                <td>
                  <%= course.duration || 'TBD' %>
                  <% if (course.isMultiDay) { %>
                    <br><small style="color: #666;">Multi-session</small>
                  <% } %>
                </td>
                <td>
                  <span class="platform-badge">
                    <i class="fas <%= course.platformIcon || 'fa-video' %>"></i>
                    <%= course.platform || 'Zoom' %>
                  </span>
                </td>
                <td class="certificate-interest">
                  <% if ((course.price || 0) === 0) { %>
                    <!-- Free course: Show certificate selection dropdown -->
                    <select class="certificate-select" data-course-id="<%= course._id %>">
                      <option value="no">No</option>
                      <option value="yes">Yes (+€10)</option>
                    </select>
                  <% } else { %>
                    <!-- Paid course: Show certificate availability status -->
                    <% if (course.certificateProvided !== false) { %>
                      <span class="certificate-badge certificate-included">Included</span>
                    <% } else { %>
                      <span class="certificate-badge certificate-not-available">Not Available</span>
                    <% } %>
                  <% } %>
                </td>
                <td class="price-badge" data-original-price="<%= course.price || 0 %>">
                  <span class="price-display">
                    <%= course.currency === 'EUR' ? '€' : (course.currency || '€') %><%= course.price || 0 %>
                  </span>
                  <% if (course.hasEarlyBird && course.earlyBirdPrice) { %>
                    <br>
                    <small style="color: #28a745;">
                      Early: <%= course.currency === 'EUR' ? '€' : (course.currency || '€') %><%= course.earlyBirdPrice %>
                    </small>
                  <% } %>
                </td>
                <td>
                <span class="seats-count <%= course.availableSeats > 5 ? 'seats-good' : course.availableSeats > 0 ? 'seats-warning' : 'seats-danger' %>">
                    <%= course.availableSeats || 0 %>/<%= course.seatsAvailable || 20 %>
                  </span>
                </td>
                <td>
                  <% 
                    let statusClass = 'status-closed';
                    let statusText = course.displayStatus || course.status || 'Closed';
                    
                    if (statusText === 'Open to Register') {
                      statusClass = 'status-open';
                    } else if (statusText === 'Full' || course.availableSeats <= 0) {
                      statusClass = 'status-closed';
                      statusText = 'Full';
                    } else if (statusText === 'In Progress') {
                      statusClass = 'status-limited';
                    }
                  %>
                  <span class="status-badge <%= statusClass %>"><%= statusText %></span>
                </td>
                <td>
                  <div class="action-buttons">
                    <button class="btn-icon btn-details tooltip" data-tooltip="View Details" 
                            onclick="window.location.href='/online-live-training/courses/<%= course._id %>'">
                      <i class="fas fa-info-circle"></i>
                    </button>
                    
                    <% if (user) { %>
                      <button class="btn-icon btn-wishlist tooltip add-to-wishlist-btn" 
                              data-tooltip="Add to Wishlist"
                              data-course-id="<%= course._id %>" 
                              data-course-type="OnlineLiveTraining"
                              data-price="<%= course.price || 0 %>"
                              data-course-code="<%= course.courseCode || 'N/A' %>"
                              data-course-title="<%= course.title || 'Untitled Course' %>"
                              data-wants-certificate="no">
                        <i class="fas fa-heart"></i>
                      </button>
                      
                      <button class="btn-icon btn-cart tooltip add-to-cart-btn" 
                              data-tooltip="Add to Cart"
                              data-course-id="<%= course._id %>" 
                              data-course-type="OnlineLiveTraining"
                              data-price="<%= course.price || 0 %>"
                              data-course-code="<%= course.courseCode || 'N/A' %>"
                              data-course-title="<%= course.title || 'Untitled Course' %>"
                              data-wants-certificate="no"
                              <%= (course.availableSeats <= 0 || statusText !== 'Open to Register') ? 'disabled style="opacity: 0.5; cursor: not-allowed;"' : '' %>>
                        <i class="fas fa-shopping-cart"></i>
                      </button>
                    <% } else { %>
                      <button class="btn-icon btn-wishlist tooltip" 
                              data-tooltip="Login to add to wishlist"
                              onclick="showLoginRequired()">
                        <i class="fas fa-heart"></i>
                      </button>
                      
                      <button class="btn-icon btn-cart tooltip" 
                              data-tooltip="Login to add to cart"
                              onclick="showLoginRequired()">
                        <i class="fas fa-shopping-cart"></i>
                      </button>
                    <% } %>
                  </div>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
        <% } else { %>
        <div class="table-container">
          <table class="courses-table">
            <tbody>
              <tr>
                <td colspan="11" class="no-courses">
                  <div class="no-courses-message">
                    <i class="fas fa-calendar-times"></i>
                    <h3>No Upcoming Live Sessions Available</h3>
                    <p>Check back later for new training opportunities or browse our completed courses below.</p>
                  </div>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
        <% } %>
      </div>
    </div>

    <!-- Completed/Historical Courses Section -->
    <div class="table-section" id="historySection">
      <div class="section-header">
        <h2><i class="fas fa-history"></i> Course History & Recordings</h2>
        <p>Previously completed sessions and available recordings</p>
      </div>
      
      <div class="table-container" id="historyTableContainer">
        <% if (typeof completedCourses !== 'undefined' && completedCourses.length > 0) { %>
        <table class="courses-table" id="completedCoursesTable">
          <thead class="sticky-header">
            <tr>
              <th style="width: 5%">#</th>
              <th style="width: 10%">Code</th>
              <th style="width: 20%">Course Title</th>
              <th style="width: 12%">Completion Date</th>
              <th style="width: 10%">Duration</th>
              <th style="width: 10%">Platform</th>
              <th style="width: 8%">Certificate</th>
              <th style="width: 8%">Price</th>
              <th style="width: 8%">Participants</th>
              <th style="width: 8%">Status</th>
              <th style="width: 12%">Info</th>
            </tr>
          </thead>
          <tbody>
            <% completedCourses.forEach((course, index) => { %>
              <tr data-course-id="<%= course._id %>" class="expired-course">
                <td><%= index + 1 %></td>
                <td><strong><%= course.courseCode || 'N/A' %></strong></td>
                <td class="course-title">
                  <%= course.title || 'Untitled Course' %>
                  <% if (course.instructor) { %>
                    <br><small style="color: #666;">Instructor: <%= course.instructor %></small>
                  <% } %>
                </td>
                <td>
                  <span class="date-badge expired">
                    <i class="far fa-calendar"></i> 
                    <%= course.endDate ? new Date(course.endDate).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' }) : (course.startDate ? new Date(course.startDate).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' }) : 'N/A') %>
                  </span>
                </td>
                <td><%= course.duration || 'TBD' %></td>
                <td>
                  <span class="platform-badge">
                    <i class="fas <%= course.platformIcon || 'fa-video' %>"></i>
                    <%= course.platform || 'Zoom' %>
                  </span>
                </td>
                <td class="certificate-interest">
                  <% if (course.certificateProvided !== false) { %>
                    <span class="certificate-badge certificate-included">Available</span>
                  <% } else { %>
                    <span class="certificate-badge certificate-not-available">Not Available</span>
                  <% } %>
                </td>
                <td class="price-badge expired">
                  <%= course.currency === 'EUR' ? '€' : (course.currency || '€') %><%= course.price || 0 %>
                </td>
                <td>
                  <span class="seats-count expired">
                    <%= course.enrolledStudents || 0 %>
                  </span>
                </td>
                <td>
                  <span class="status-badge status-completed">Completed</span>
                </td>
                <td>
                  <div class="action-buttons">
                    <button class="btn-icon btn-info tooltip" data-tooltip="Course Information" 
                            onclick="showCourseInfo('<%= course._id %>')">
                      <i class="fas fa-info-circle"></i>
                    </button>
                    <button class="btn-icon btn-archive tooltip" data-tooltip="View Recordings" 
                            onclick="window.location.href='/online-live-training/courses/<%= course._id %>/recordings'">
                      <i class="fas fa-play"></i>
                    </button>
                  </div>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
        <% } else { %>
        <div class="table-container">
          <table class="courses-table">
            <tbody>
              <tr>
                <td colspan="11" class="no-courses">
                  <div class="no-courses-message">
                    <i class="fas fa-archive"></i>
                    <h3>No Completed Courses Found</h3>
                    <p>This institution is building its online training portfolio.</p>
                  </div>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
        <% } %>
      </div>
    </div>
  </div>

  <!-- Grid View (Hidden by default, keep for backward compatibility) -->
  <div class="grid-container" id="gridView">
    <% if (courses && courses.length > 0) { %>
    <div class="courses-grid">
      <% courses.forEach((course) => { %>
      <div class="course-card" data-course-id="<%= course._id %>">
        <div class="course-image">
          <% if (course.mainImageUrl && !course.mainImageUrl.includes('default-online-course.jpg')) { %>
            <img src="<%= course.mainImageUrl %>" 
                 alt="<%= course.title %>" 
                 class="course-img"
                 onerror="this.classList.add('error'); this.nextElementSibling.style.display='flex';">
            <div class="course-image-placeholder" style="display:none;">
              <i class="fas fa-video"></i>
            </div>
          <% } else { %>
            <div class="course-image-placeholder">
              <i class="fas fa-video"></i>
            </div>
          <% } %>
          <div class="course-badge-overlay">
            <span class="live-indicator">
              <i class="fas fa-circle"></i> LIVE
            </span>
            <% if (course.availableSeats <= 5 && course.availableSeats > 0) { %>
            <span class="status-badge status-limited">Limited Seats</span>
            <% } %>
          </div>
        </div>
        
        <div class="course-card-body">
          <h3 class="course-card-title"><%= course.title %></h3>
          
          <% if (course.instructor) { %>
          <div class="course-card-instructor">
            <i class="fas fa-user-tie"></i>
            <%= course.instructor %>
          </div>
          <% } %>
          
          <div class="course-card-meta">
            <div class="course-card-date">
              <i class="far fa-calendar"></i>
              <%= course.startDate ? new Date(course.startDate).toLocaleDateString('en-US', { month: 'short', day: 'numeric' }) : 'TBD' %>
            </div>
            <div class="course-card-platform">
              <i class="fas <%= course.platformIcon || 'fa-video' %>"></i>
              <%= course.platform || 'Zoom' %>
            </div>
          </div>
          
          <!-- Certificate Option for Free Courses in Grid View -->
          <% if ((course.price || 0) === 0) { %>
          <div class="course-card-certificate">
            <div class="certificate-option">
              <label>Certificate Interest:</label>
              <select class="certificate-select" data-course-id="<%= course._id %>">
                <option value="no">No</option>
                <option value="yes">Yes (+€10)</option>
              </select>
            </div>
            <div class="certificate-price-update">
              Selecting certificate will add €10 to course price
            </div>
          </div>
          <% } %>
          
          <div class="course-card-footer">
            <div class="course-card-price" data-original-price="<%= course.price || 0 %>">
              <span class="price-display">
                <%= course.currency || '€' %><%= course.price || 0 %>
              </span>
            </div>
            <div class="course-card-actions">
              <button class="btn-icon btn-details tooltip" data-tooltip="View Details" 
                      onclick="window.location.href='/online-live-training/courses/<%= course._id %>'">
                <i class="fas fa-info-circle"></i>
              </button>
              
              <% if (user) { %>
                <button class="btn-icon btn-wishlist tooltip add-to-wishlist-btn" 
                        data-tooltip="Add to Wishlist"
                        data-course-id="<%= course._id %>" 
                        data-course-type="OnlineLiveTraining"
                        data-price="<%= course.price || 0 %>"
                        data-course-code="<%= course.courseCode || 'N/A' %>"
                        data-course-title="<%= course.title || 'Untitled Course' %>"
                        data-wants-certificate="no">
                  <i class="fas fa-heart"></i>
                </button>
                
                <button class="btn-icon btn-cart tooltip add-to-cart-btn" 
                        data-tooltip="Add to Cart"
                        data-course-id="<%= course._id %>" 
                        data-course-type="OnlineLiveTraining"
                        data-price="<%= course.price || 0 %>"
                        data-course-code="<%= course.courseCode || 'N/A' %>"
                        data-course-title="<%= course.title || 'Untitled Course' %>"
                        data-wants-certificate="no"
                        <%= (course.availableSeats <= 0) ? 'disabled style="opacity: 0.5; cursor: not-allowed;"' : '' %>>
                  <i class="fas fa-shopping-cart"></i>
                </button>
              <% } else { %>
                <button class="btn-icon btn-wishlist tooltip" 
                        data-tooltip="Login to add to wishlist"
                        onclick="showLoginRequired()">
                  <i class="fas fa-heart"></i>
                </button>
                
                <button class="btn-icon btn-cart tooltip" 
                        data-tooltip="Login to add to cart"
                        onclick="showLoginRequired()">
                  <i class="fas fa-shopping-cart"></i>
                </button>
              <% } %>
            </div>
          </div>
        </div>
      </div>
      <% }) %>
    </div>
    <% } else { %>
    <div class="empty-state">
      <i class="fas fa-video-slash"></i>
      <h3>No Online Live Courses Available</h3>
      <p>Check back soon for upcoming live training sessions!</p>
    </div>
    <% } %>
  </div>

  <!-- Course Info Modal for Completed Courses -->
  <div class="course-modal" id="courseInfoModal">
    <div class="modal-content">
      <div class="modal-header archive-header">
        <h3 id="infoModalCourseTitle">Course Information</h3>
        <button class="modal-close" onclick="closeCourseInfoModal()">
          <i class="fas fa-times" style="color: white;"></i>
        </button>
      </div>
      <div class="modal-body">
        <div class="archive-badge">
          <i class="fas fa-archive"></i> Completed Course
        </div>
        <div class="modal-course-info" id="infoModalCourseInfo">
          <!-- Course info will be populated by JavaScript -->
        </div>
        <div class="modal-actions">
          <button class="modal-btn modal-btn-secondary" onclick="closeCourseInfoModal()">
            <i class="fas fa-times"></i> Close
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Notification Container -->
  <div id="notificationContainer"></div>

  <script>
    // ========================================
    // GLOBAL VARIABLES
    // ========================================
    const upcomingCoursesData = <%- JSON.stringify(upcomingCourses || []) %>;
    const completedCoursesData = <%- JSON.stringify(completedCourses || []) %>;

    // ========================================
    // NOTIFICATION SYSTEM
    // ========================================
    function showNotification(title, message, type = 'success') {
      console.log(`📢 Notification: ${type.toUpperCase()} - ${title}: ${message}`);
      
      const container = document.getElementById('notificationContainer');
      if (!container) {
        console.error('❌ Notification container not found');
        return;
      }
      
      const notification = document.createElement('div');
      notification.className = `notification ${type}`;
      
      const iconMap = {
        success: 'fa-check-circle',
        error: 'fa-times-circle',
        warning: 'fa-exclamation-triangle'
      };
      
      notification.innerHTML = `
        <div class="notification-icon">
          <i class="fas ${iconMap[type]}"></i>
        </div>
        <div class="notification-content">
          <h4>${title}</h4>
          <p>${message}</p>
        </div>
      `;
      
      container.appendChild(notification);
      
      setTimeout(() => notification.classList.add('show'), 10);
      
      setTimeout(() => {
        notification.classList.remove('show');
        setTimeout(() => {
          if (notification.parentNode) {
            notification.remove();
          }
        }, 500);
      }, 5000);
    }

    // ========================================
    // LOGIN REQUIRED HANDLER
    // ========================================
    function showLoginRequired() {
      console.log('🔐 Login required - redirecting to login page');
      showNotification('Authentication Required', 'Please log in to continue', 'warning');
      setTimeout(() => {
        window.location.href = '/login';
      }, 2000);
    }

    // ========================================
    // BUTTON LOADING STATE
    // ========================================
    function setButtonLoading(button, loading) {
      if (loading) {
        button.classList.add('btn-loading');
        button.disabled = true;
        
        const icon = button.querySelector('i');
        if (icon) {
          button.setAttribute('data-original-icon', icon.className);
          icon.className = 'fas fa-spinner fa-spin';
        }
      } else {
        button.classList.remove('btn-loading');
        button.disabled = false;
        
        const icon = button.querySelector('i');
        const originalIcon = button.getAttribute('data-original-icon');
        if (icon && originalIcon) {
          icon.className = originalIcon;
        }
      }
    }

    // ========================================
    // SEARCH AND FILTER FUNCTIONALITY
    // ========================================
    function filterCourses() {
      const searchInput = document.getElementById('courseSearch');
      const statusFilter = document.getElementById('statusFilter');
      const dateFilter = document.getElementById('dateFilter');
      const platformFilter = document.getElementById('platformFilter');
      
      const searchTerm = searchInput ? searchInput.value.toLowerCase() : '';
      const statusFilterValue = statusFilter ? statusFilter.value : '';
      const dateFilterValue = dateFilter ? dateFilter.value : '';
      const platformFilterValue = platformFilter ? platformFilter.value : '';
      
      // Filter upcoming courses
      const upcomingRows = document.querySelectorAll('#upcomingCoursesTable tbody tr:not(.no-courses)');
      filterTableRows(upcomingRows, searchTerm, statusFilterValue, dateFilterValue, platformFilterValue);
      
      // Update row numbers for upcoming courses
      updateRowNumbers('#upcomingCoursesTable');
    }

    function filterTableRows(rows, searchTerm, statusFilterValue, dateFilterValue, platformFilterValue) {
      rows.forEach(row => {
        const text = row.textContent.toLowerCase();
        const status = row.querySelector('.status-badge')?.textContent.trim();
        const courseDate = new Date(row.getAttribute('data-date'));
        const platform = row.getAttribute('data-platform');
        const today = new Date();
        
        let showRow = true;
        
        // Search filter
        if (searchTerm && !text.includes(searchTerm)) {
          showRow = false;
        }
        
        // Status filter
        if (statusFilterValue) {
          if (statusFilterValue === 'Open to Register' && status !== 'Open to Register') {
            showRow = false;
          } else if (statusFilterValue === 'Full' && status !== 'Full') {
            showRow = false;
          } else if (statusFilterValue === 'In Progress' && status !== 'In Progress') {
            showRow = false;
          }
        }
        
        // Platform filter
        if (platformFilterValue && platform !== platformFilterValue) {
          showRow = false;
        }
        
        // Date filter
        if (dateFilterValue && !isNaN(courseDate)) {
          const monthStart = new Date(today.getFullYear(), today.getMonth(), 1);
          const monthEnd = new Date(today.getFullYear(), today.getMonth() + 1, 0);
          const nextMonthStart = new Date(today.getFullYear(), today.getMonth() + 1, 1);
          const nextMonthEnd = new Date(today.getFullYear(), today.getMonth() + 2, 0);
          
          switch(dateFilterValue) {
            case 'upcoming':
              if (courseDate < today) showRow = false;
              break;
            case 'this-week':
              const weekEnd = new Date(today);
              weekEnd.setDate(today.getDate() + 7);
              if (courseDate < today || courseDate > weekEnd) showRow = false;
              break;
            case 'this-month':
              if (courseDate < monthStart || courseDate > monthEnd) showRow = false;
              break;
            case 'next-month':
              if (courseDate < nextMonthStart || courseDate > nextMonthEnd) showRow = false;
              break;
          }
        }
        
        row.style.display = showRow ? '' : 'none';
      });
    }

    function updateRowNumbers(tableSelector) {
      const visibleRows = document.querySelectorAll(`${tableSelector} tbody tr:not([style*="display: none"]):not(.no-courses)`);
      visibleRows.forEach((row, index) => {
        const firstCell = row.querySelector('td:first-child');
        if (firstCell) {
          firstCell.textContent = index + 1;
        }
      });
    }

    function sortCourses() {
      const sortBy = document.getElementById('sortBy');
      const sortByValue = sortBy ? sortBy.value : '';
      
      if (!sortByValue) return;
      
      // Sort upcoming courses
      sortTable('#upcomingCoursesTable', sortByValue);
    }

    function sortTable(tableSelector, sortByValue) {
      const tbody = document.querySelector(`${tableSelector} tbody`);
      if (!tbody) return;
      
      const rows = Array.from(tbody.querySelectorAll('tr:not(.no-courses)'));
      
      rows.sort((a, b) => {
        switch(sortByValue) {
          case 'date-asc':
            return new Date(a.getAttribute('data-date')) - new Date(b.getAttribute('data-date'));
          case 'date-desc':
            return new Date(b.getAttribute('data-date')) - new Date(a.getAttribute('data-date'));
          case 'price-asc':
            return parseFloat(a.getAttribute('data-price')) - parseFloat(b.getAttribute('data-price'));
          case 'price-desc':
            return parseFloat(b.getAttribute('data-price')) - parseFloat(a.getAttribute('data-price'));
          default:
            return 0;
        }
      });
      
      rows.forEach(row => tbody.appendChild(row));
      updateRowNumbers(tableSelector);
    }

    // ========================================
    // COURSE INFO MODAL FOR COMPLETED COURSES
    // ========================================
    function showCourseInfo(courseId) {
      const course = [...upcomingCoursesData, ...completedCoursesData].find(c => c._id === courseId);
      if (!course) return;
      
      const modal = document.getElementById('courseInfoModal');
      const modalTitle = document.getElementById('infoModalCourseTitle');
      const courseInfo = document.getElementById('infoModalCourseInfo');
      
      if (modalTitle) {
        modalTitle.textContent = course.title || 'Course Information';
      }
      
      if (courseInfo) {
        const startDate = new Date(course.startDate);
        const endDate = course.endDate ? new Date(course.endDate) : null;
        
        courseInfo.innerHTML = `
          <div class="modal-info-row">
            <div class="modal-label">Course Code</div>
            <div>${course.courseCode || 'N/A'}</div>
          </div>
          <div class="modal-info-row">
            <div class="modal-label">Description</div>
            <div>${course.description || 'No description available'}</div>
          </div>
          <div class="modal-info-row">
            <div class="modal-label">Completion Date</div>
            <div>${endDate ? endDate.toLocaleDateString('en-US', { 
              weekday: 'long', 
              year: 'numeric', 
              month: 'long', 
              day: 'numeric' 
            }) : startDate.toLocaleDateString('en-US', { 
              weekday: 'long', 
              year: 'numeric', 
              month: 'long', 
              day: 'numeric' 
            })}</div>
          </div>
          <div class="modal-info-row">
            <div class="modal-label">Duration</div>
            <div>${course.duration || 'TBD'}</div>
          </div>
          <div class="modal-info-row">
            <div class="modal-label">Platform</div>
            <div>${course.platform || 'Zoom'}</div>
          </div>
          <div class="modal-info-row">
            <div class="modal-label">Instructor(s)</div>
            <div>${course.instructor || 'Expert Instructors'}</div>
          </div>
          <div class="modal-info-row">
            <div class="modal-label">Participants</div>
            <div>${course.enrolledStudents || 0} attendees</div>
          </div>
        `;
      }
      
      if (modal) {
        modal.classList.add('show');
      }
    }

    function closeCourseInfoModal() {
      const modal = document.getElementById('courseInfoModal');
      if (modal) {
        modal.classList.remove('show');
      }
    }

    // ========================================
    // CERTIFICATE SELECTION HANDLING
    // ========================================
    document.addEventListener('DOMContentLoaded', function() {
      // Handle certificate selection changes
      document.querySelectorAll('.certificate-select').forEach(select => {
        select.addEventListener('change', function() {
          const courseId = this.getAttribute('data-course-id');
          const wantsCertificate = this.value === 'yes';
          const row = this.closest('tr') || this.closest('.course-card');
          
          // Update price display
          const priceElement = row.querySelector('.price-display');
          const originalPrice = parseFloat(row.querySelector('[data-original-price]').getAttribute('data-original-price')) || 0;
          
          if (wantsCertificate && originalPrice === 0) {
            priceElement.textContent = '€10';
          } else {
            priceElement.textContent = '€' + originalPrice;
          }
          
          // Update all action buttons in this row/card
          const actionButtons = row.querySelectorAll('.add-to-cart-btn, .add-to-wishlist-btn');
          actionButtons.forEach(button => {
            button.setAttribute('data-wants-certificate', this.value);
            const newPrice = wantsCertificate && originalPrice === 0 ? 10 : originalPrice;
            button.setAttribute('data-price', newPrice);
          });
        });
      });
    });

    // ========================================
    // CART AND WISHLIST FUNCTIONALITY
    // ========================================
    function initializeCartWishlist() {
      // Add to Cart functionality
      document.querySelectorAll('.add-to-cart-btn').forEach(button => {
        button.addEventListener('click', async function(e) {
          e.preventDefault();
          e.stopPropagation();
          
          if (this.disabled) {
            console.log('⚠️ Button is disabled, ignoring click');
            return;
          }
          
          const courseId = this.getAttribute('data-course-id');
          const courseType = this.getAttribute('data-course-type');
          const courseTitle = this.getAttribute('data-course-title');
          const wantsCertificate = this.getAttribute('data-wants-certificate') === 'yes';
          
          console.log('🛒 Adding to cart:', { courseId, courseType, courseTitle });
          
          if (!courseId || !courseType) {
            console.error('❌ Missing course data');
            showNotification('Error', 'Missing course information', 'error');
            return;
          }
          
          setButtonLoading(this, true);
          
          try {
            const response = await fetch('/add-to-cart', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ 
                courseId, 
                courseType,
                wantsCertificate: wantsCertificate
              })
            });
            
            const result = await response.json();
            
            if (result.success) {
              showNotification('Added to Cart', `"${courseTitle}" has been added to your cart`, 'success');
              setTimeout(() => window.location.href = '/orders', 3000);
            } else {
              showNotification('Error', result.message, 'error');
            }
          } catch (error) {
            console.error('Error:', error);
            showNotification('Error', 'Failed to add to cart', 'error');
          } finally {
            setButtonLoading(this, false);
          }
        });
      });

      // Add to Wishlist functionality
      document.querySelectorAll('.add-to-wishlist-btn').forEach(button => {
        button.addEventListener('click', async function(e) {
          e.preventDefault();
          e.stopPropagation();
          
          const courseId = this.getAttribute('data-course-id');
          const courseType = this.getAttribute('data-course-type');
          const courseTitle = this.getAttribute('data-course-title');
          const wantsCertificate = this.getAttribute('data-wants-certificate') === 'yes';
          
          console.log('❤️ Adding to wishlist:', { courseId, courseType, courseTitle });
          
          if (!courseId || !courseType) {
            console.error('❌ Missing course data');
            showNotification('Error', 'Missing course information', 'error');
            return;
          }
          
          setButtonLoading(this, true);
          
          try {
            const response = await fetch('/add-to-wishlist', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ 
                courseId, 
                courseType,
                wantsCertificate: wantsCertificate
              })
            });
            
            const result = await response.json();
            
            if (result.success) {
              showNotification('Added to Wishlist', `"${courseTitle}" has been saved to your wishlist`, 'success');
              
              // Update button appearance
              this.style.color = '#e74c3c';
              this.querySelector('i').classList.add('fas');
              this.querySelector('i').classList.remove('far');
            } else {
              showNotification('Error', result.message, 'error');
            }
          } catch (error) {
            console.error('Error:', error);
            showNotification('Error', 'Failed to add to wishlist', 'error');
          } finally {
            setButtonLoading(this, false);
          }
        });
      });
    }

    // ========================================
    // INITIALIZATION
    // ========================================
    document.addEventListener('DOMContentLoaded', function() {
      console.log('🚀 Initializing enhanced online live training page...');
      
      // Initialize cart and wishlist
      initializeCartWishlist();
      
      // Initialize search and filter event listeners
      const searchInput = document.getElementById('courseSearch');
      const statusFilter = document.getElementById('statusFilter');
      const dateFilter = document.getElementById('dateFilter');
      const platformFilter = document.getElementById('platformFilter');
      const sortBy = document.getElementById('sortBy');
      
      if (searchInput) searchInput.addEventListener('input', filterCourses);
      if (statusFilter) statusFilter.addEventListener('change', filterCourses);
      if (dateFilter) dateFilter.addEventListener('change', filterCourses);
      if (platformFilter) platformFilter.addEventListener('change', filterCourses);
      if (sortBy) sortBy.addEventListener('change', sortCourses);
      
      // Initialize view toggle functionality
      const tableViewBtn = document.getElementById('tableViewBtn');
      const gridViewBtn = document.getElementById('gridViewBtn');
      const tableView = document.getElementById('tableView');
      const gridView = document.getElementById('gridView');
      
      if (tableViewBtn) {
        tableViewBtn.addEventListener('click', function() {
          if (tableView) tableView.style.display = 'block';
          if (gridView) gridView.style.display = 'none';
          this.classList.add('active');
          if (gridViewBtn) gridViewBtn.classList.remove('active');
        });
      }
      
      if (gridViewBtn) {
        gridViewBtn.addEventListener('click', function() {
          if (tableView) tableView.style.display = 'none';
          if (gridView) gridView.style.display = 'block';
          this.classList.add('active');
          if (tableViewBtn) tableViewBtn.classList.remove('active');
        });
      }
      
      // Initialize modal close functionality
      const courseInfoModal = document.getElementById('courseInfoModal');
      
      if (courseInfoModal) {
        courseInfoModal.addEventListener('click', function(e) {
          if (e.target === this) {
            closeCourseInfoModal();
          }
        });
      }
      
      // Debug information
      console.log('📊 Page loaded with courses:');
      console.log('📅 Upcoming courses:', upcomingCoursesData.length);
      console.log('📚 Completed courses:', completedCoursesData.length);
      console.log('👤 User logged in:', <%= user ? 'true' : 'false' %>);
      console.log('🛒 Cart buttons found:', document.querySelectorAll('.add-to-cart-btn').length);
      console.log('❤️ Wishlist buttons found:', document.querySelectorAll('.add-to-wishlist-btn').length);
    });
  </script>

  <%- include('partials/footer') %>
</body>
</html>