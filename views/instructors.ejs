<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Montserrat', sans-serif;
            background-color: #f4f4f4;
            line-height: 1.6;
            overflow-x: hidden;
        }

        /* Breadcrumb */
        .breadcrumb {
            background: linear-gradient(135deg, #f8f9fa, #ffffff);
            padding: 20px 0;
            border-bottom: 1px solid #e0e0e0;
        }

        .breadcrumb-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .breadcrumb a {
            color: #002147;
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s ease;
        }

        .breadcrumb a:hover {
            color: #ffcc00;
        }

        .breadcrumb span {
            color: #666;
        }

        /* Hero Section */
        .hero {
            background: linear-gradient(135deg, #002147 0%, #003366 100%);
            padding: 120px 0;
            position: relative;
            overflow: hidden;
        }

        .hero::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Ccircle cx='30' cy='30' r='2'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
            opacity: 0.3;
        }

        .hero-content {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
            text-align: center;
            position: relative;
            z-index: 2;
        }

        .hero h1 {
            font-size: 48px;
            font-weight: 800;
            color: #ffffff;
            margin-bottom: 20px;
            line-height: 1.2;
        }

        .hero p {
            font-size: 20px;
            color: #e0e0e0;
            font-weight: 400;
            max-width: 800px;
            margin: 0 auto 40px;
        }

        .hero-stats {
            display: flex;
            justify-content: center;
            gap: 60px;
            margin-top: 40px;
            flex-wrap: wrap;
        }

        .hero-stat {
            text-align: center;
        }

        .hero-stat .number {
            font-size: 36px;
            font-weight: 700;
            color: #ffcc00;
            display: block;
        }

        .hero-stat .label {
            font-size: 14px;
            color: #e0e0e0;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        /* Main Content */
        .main-content {
            max-width: 1400px;
            margin: 0 auto;
            padding: 80px 20px;
        }

        /* Search and Filters */
        .search-filters {
            background: #ffffff;
            border-radius: 25px;
            box-shadow: 0 25px 80px rgba(0, 0, 0, 0.1);
            padding: 40px;
            margin-bottom: 60px;
            position: relative;
            overflow: hidden;
        }

        .search-filters::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 6px;
            background: linear-gradient(90deg, #ffcc00, #b8860b, #002147);
        }

        .search-header {
            text-align: center;
            margin-bottom: 40px;
        }

        .search-header h2 {
            font-size: 32px;
            font-weight: 700;
            color: #002147;
            margin-bottom: 15px;
        }

        .search-header p {
            font-size: 16px;
            color: #666;
        }

        .filters-grid {
            display: grid;
            grid-template-columns: 2fr 1fr 1fr 1fr 1fr;
            gap: 20px;
            margin-bottom: 30px;
        }

        .filter-group {
            position: relative;
        }

        .filter-group label {
            display: block;
            font-size: 14px;
            font-weight: 600;
            color: #002147;
            margin-bottom: 8px;
        }

        .filter-group input,
        .filter-group select {
            width: 100%;
            padding: 15px 20px;
            border: 2px solid #e0e0e0;
            border-radius: 10px;
            font-size: 16px;
            font-family: 'Montserrat', sans-serif;
            transition: all 0.3s ease;
            background: #f8f9fa;
        }

        .filter-group input:focus,
        .filter-group select:focus {
            outline: none;
            border-color: #ffcc00;
            background: #ffffff;
            box-shadow: 0 0 20px rgba(255, 204, 0, 0.2);
        }

        .search-actions {
            display: flex;
            gap: 15px;
            justify-content: center;
        }

        .btn {
            padding: 15px 30px;
            border: none;
            border-radius: 50px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 10px;
        }

        .btn-primary {
            background: linear-gradient(135deg, #ffcc00, #b8860b);
            color: #002147;
            box-shadow: 0 8px 25px rgba(255, 204, 0, 0.3);
        }

        .btn-primary:hover {
            transform: translateY(-3px);
            box-shadow: 0 12px 35px rgba(255, 204, 0, 0.5);
        }

        .btn-secondary {
            background: #ffffff;
            color: #002147;
            border: 2px solid #e0e0e0;
        }

        .btn-secondary:hover {
            border-color: #ffcc00;
            background: #f8f9fa;
        }

        /* Results Header */
        .results-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 40px;
            padding: 0 20px;
        }

        .results-count {
            font-size: 18px;
            color: #002147;
            font-weight: 600;
        }

        .view-toggle {
            display: flex;
            background: #ffffff;
            border-radius: 10px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        .view-btn {
            padding: 12px 20px;
            border: none;
            background: transparent;
            color: #666;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .view-btn.active {
            background: #ffcc00;
            color: #002147;
        }

        /* Instructors Grid */
        .instructors-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));
            gap: 30px;
            margin-bottom: 60px;
        }

        .instructor-card {
            background: #ffffff;
            border-radius: 25px;
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            transition: all 0.3s ease;
            position: relative;
        }

        .instructor-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 25px 60px rgba(0, 0, 0, 0.15);
        }

        .instructor-image {
            position: relative;
            height: 280px;
            overflow: hidden;
        }

        .instructor-image img {
    width: 100%;
    height: 100%;
    object-fit: contain;            /* ✅ SHOWS ENTIRE IMAGE */
    object-position: center;
    background-color: #f8f9fa;      /* ✅ Light background for empty space */
    transition: transform 0.3s ease;
}
        .instructor-card:hover .instructor-image img {
            transform: scale(0.95);
        }

        .instructor-status {
            position: absolute;
            top: 20px;
            right: 20px;
            background: rgba(255, 255, 255, 0.95);
            color: #28a745;
            padding: 8px 15px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
            backdrop-filter: blur(10px);
        }

        .instructor-rating {
            position: absolute;
            bottom: 20px;
            left: 20px;
            background: rgba(0, 33, 71, 0.9);
            color: #ffcc00;
            padding: 8px 15px;
            border-radius: 20px;
            font-size: 14px;
            font-weight: 600;
            backdrop-filter: blur(10px);
        }

        .instructor-content {
            padding: 30px;
        }

        .instructor-header {
            margin-bottom: 20px;
        }

        .instructor-name {
            font-size: 24px;
            font-weight: 700;
            color: #002147;
            margin-bottom: 8px;
        }

        .instructor-title {
            font-size: 16px;
            color: #ffcc00;
            font-weight: 600;
            margin-bottom: 5px;
        }

        .instructor-designation {
            font-size: 14px;
            color: #666;
            margin-bottom: 15px;
        }

        .instructor-expertise {
            margin-bottom: 20px;
        }

        .expertise-tags {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
        }

        .expertise-tag {
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            color: #002147;
            padding: 6px 12px;
            border-radius: 15px;
            font-size: 12px;
            font-weight: 500;
            border: 1px solid #e0e0e0;
        }

        .instructor-stats {
            display: grid;
            grid-template-columns: 1fr 1fr 1fr;
            gap: 15px;
            margin-bottom: 25px;
        }

        .stat-item {
            text-align: center;
            padding: 15px 10px;
            background: #f8f9fa;
            border-radius: 15px;
        }

        .stat-number {
            font-size: 20px;
            font-weight: 700;
            color: #002147;
            display: block;
        }

        .stat-label {
            font-size: 11px;
            color: #666;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .instructor-actions {
            display: flex;
            gap: 15px;
        }

        .btn-view {
            flex: 1;
            padding: 12px 20px;
            background: linear-gradient(135deg, #002147, #003366);
            color: #ffffff;
            border: none;
            border-radius: 10px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            text-align: center;
        }

        .btn-view:hover {
            background: linear-gradient(135deg, #ffcc00, #b8860b);
            color: #002147;
        }

        .btn-contact {
            padding: 12px 15px;
            background: #ffffff;
            color: #002147;
            border: 2px solid #e0e0e0;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .btn-contact:hover {
            border-color: #ffcc00;
            background: #f8f9fa;
        }

        /* List View */
        .instructors-list {
            display: none;
        }

        .instructors-list.active {
            display: block;
        }

        .instructor-list-item {
            background: #ffffff;
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            padding: 30px;
            margin-bottom: 20px;
            display: flex;
            gap: 30px;
            align-items: center;
            transition: all 0.3s ease;
        }

        .instructor-list-item:hover {
            transform: translateX(10px);
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
        }

        .list-instructor-image {
            width: 120px;
            height: 120px;
            border-radius: 20px;
            overflow: hidden;
            flex-shrink: 0;
        }

        .list-instructor-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;        /* ✅ ADDED: Center the image */
    transform: scale(0.9);          /* ✅ ADDED: Zoom out to 90% */
    transition: transform 0.3s ease;
}

        .list-instructor-content {
            flex: 1;
        }

        .list-instructor-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 15px;
        }

        .list-instructor-info h3 {
            font-size: 24px;
            font-weight: 700;
            color: #002147;
            margin-bottom: 5px;
        }

        .list-instructor-info .title {
            color: #ffcc00;
            font-weight: 600;
            margin-bottom: 5px;
        }

        .list-instructor-info .designation {
            color: #666;
            font-size: 14px;
        }

        .list-rating {
            background: #f8f9fa;
            padding: 10px 15px;
            border-radius: 15px;
            text-align: center;
        }

        .rating-stars {
            color: #ffcc00;
            font-size: 14px;
            margin-bottom: 5px;
        }

        .rating-number {
            font-size: 16px;
            font-weight: 700;
            color: #002147;
        }

        .list-expertise {
            margin-bottom: 20px;
        }

        .list-stats {
            display: flex;
            gap: 30px;
            margin-bottom: 20px;
        }

        .list-stat {
            color: #666;
            font-size: 14px;
        }

        .list-stat strong {
            color: #002147;
            font-weight: 600;
        }

        .list-actions {
            display: flex;
            gap: 15px;
        }

        /* Pagination */
        .pagination {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-top: 60px;
        }

        .page-btn {
            padding: 12px 18px;
            border: 2px solid #e0e0e0;
            background: #ffffff;
            color: #002147;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
        }

        .page-btn:hover,
        .page-btn.active {
            border-color: #ffcc00;
            background: #ffcc00;
            color: #002147;
        }

        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 80px 20px;
            color: #666;
        }

        .empty-state i {
            font-size: 64px;
            color: #e0e0e0;
            margin-bottom: 20px;
        }

        .empty-state h3 {
            font-size: 24px;
            color: #002147;
            margin-bottom: 15px;
        }

        .empty-state p {
            font-size: 16px;
            margin-bottom: 30px;
        }

        /* ✅ NEW: Debug styles for development */
        .debug-info {
            background: #fff3cd;
            border: 1px solid #ffeaa7;
            padding: 10px;
            margin: 10px 0;
            border-radius: 5px;
            font-size: 12px;
            color: #856404;
            display: none; /* Hidden by default */
        }

        /* Responsive Design */
        @media (max-width: 1200px) {
            .instructors-grid {
                grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            }

            .filters-grid {
                grid-template-columns: 1fr;
                gap: 15px;
            }
        }

        @media (max-width: 768px) {
            .hero h1 {
                font-size: 36px;
            }

            .hero p {
                font-size: 16px;
            }

            .hero-stats {
                flex-direction: column;
                gap: 20px;
            }

            .instructors-grid {
                grid-template-columns: 1fr;
            }

            .instructor-list-item {
                flex-direction: column;
                text-align: center;
            }

            .list-instructor-header {
                flex-direction: column;
                gap: 15px;
            }

            .list-stats {
                justify-content: center;
                flex-wrap: wrap;
            }

            .results-header {
                flex-direction: column;
                gap: 20px;
            }
        }

        /* Animation */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .fade-in {
            animation: fadeInUp 0.6s ease-out;
        }

        /* Search Suggestions */
        .search-suggestions {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: #ffffff;
            border: 2px solid #ffcc00;
            border-top: none;
            border-radius: 0 0 10px 10px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            z-index: 100;
            display: none;
        }

        .suggestion-item {
            padding: 15px 20px;
            cursor: pointer;
            border-bottom: 1px solid #f0f0f0;
            display: flex;
            align-items: center;
            gap: 15px;
            transition: background-color 0.3s ease;
        }

        .suggestion-item:hover {
            background-color: #f8f9fa;
        }

        .suggestion-item:last-child {
            border-bottom: none;
        }

        .suggestion-image {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            object-fit: cover;
        }

        .suggestion-info h4 {
            font-size: 14px;
            font-weight: 600;
            color: #002147;
            margin-bottom: 3px;
        }

        .suggestion-info p {
            font-size: 12px;
            color: #666;
            margin: 0;
        }
    </style>
</head>
<body>
    <%- include('partials/header') %>

   

    <!-- Breadcrumb -->
    <nav class="breadcrumb">
        <div class="breadcrumb-container">
            <a href="/">Home</a> > <a href="/training-programs">Training Programs</a> > <span>Our Instructors</span>
        </div>
    </nav>

    <!-- Hero Section -->
    <section class="hero">
        <div class="hero-content">
            <h1>Meet Our Expert Instructors</h1>
            <p>Learn from world-renowned aesthetic medicine professionals who bring decades of experience and cutting-edge knowledge to every training session.</p>
            <div class="hero-stats">
                <div class="hero-stat">
                    <span class="number"><%= totalInstructors %></span>
                    <span class="label">Expert Instructors</span>
                </div>
                <div class="hero-stat">
                    <span class="number">25+</span>
                    <span class="label">Specializations</span>
                </div>
                <div class="hero-stat">
                    <span class="number">5000+</span>
                    <span class="label">Students Trained</span>
                </div>
                <div class="hero-stat">
                    <span class="number">15+</span>
                    <span class="label">Countries</span>
                </div>
            </div>
        </div>
    </section>

    <!-- Main Content -->
    <main class="main-content">
        <!-- Search and Filters -->
        <section class="search-filters fade-in">
            <div class="search-header">
                <h2>Find Your Perfect Instructor</h2>
                <p>Search by name, expertise, or specialization to find the right instructor for your learning goals</p>
            </div>
            
            <form action="/our-instructors" method="GET" id="searchForm">
                <div class="filters-grid">
                    <div class="filter-group">
                        <label for="search">Search Instructors</label>
                        <div style="position: relative;">
                            <input type="text" id="search" name="search" placeholder="Search by name, expertise, or specialization..." value="<%= filters.search %>" autocomplete="off">
                            <div class="search-suggestions" id="searchSuggestions"></div>
                        </div>
                    </div>
                    
                    <div class="filter-group">
                        <label for="expertise">Expertise</label>
                        <select id="expertise" name="expertise">
                            <option value="">All Expertise</option>
                            <% filterOptions.expertise.forEach(exp => { %>
                                <option value="<%= exp %>" <%= filters.expertise === exp ? 'selected' : '' %>><%= exp %></option>
                            <% }) %>
                        </select>
                    </div>
                    
                    <div class="filter-group">
                        <label for="specialization">Specialization</label>
                        <select id="specialization" name="specialization">
                            <option value="">All Specializations</option>
                            <% filterOptions.specializations.forEach(spec => { %>
                                <option value="<%= spec %>" <%= filters.specialization === spec ? 'selected' : '' %>><%= spec %></option>
                            <% }) %>
                        </select>
                    </div>
                    
                    <div class="filter-group">
                        <label for="courseType">Course Type</label>
                        <select id="courseType" name="courseType">
                            <option value="">All Course Types</option>
                            <% filterOptions.courseTypes.forEach(type => { %>
                                <option value="<%= type %>" <%= filters.courseType === type ? 'selected' : '' %>><%= type.replace(/([A-Z])/g, ' $1').trim() %></option>
                            <% }) %>
                        </select>
                    </div>
                    
                    <div class="filter-group">
                        <label for="sortBy">Sort By</label>
                        <select id="sortBy" name="sortBy">
                            <option value="lastName" <%= filters.sortBy === 'lastName' ? 'selected' : '' %>>Last Name</option>
                            <option value="firstName" <%= filters.sortBy === 'firstName' ? 'selected' : '' %>>First Name</option>
                            <option value="experience" <%= filters.sortBy === 'experience' ? 'selected' : '' %>>Experience</option>
                            <option value="ratings.overall" <%= filters.sortBy === 'ratings.overall' ? 'selected' : '' %>>Rating</option>
                        </select>
                    </div>
                </div>
                
                <div class="search-actions">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-search"></i> Search Instructors
                    </button>
                    <a href="/our-instructors" class="btn btn-secondary">
                        <i class="fas fa-refresh"></i> Clear Filters
                    </a>
                </div>
            </form>
        </section>

        <!-- Results Header -->
        <div class="results-header">
            <div class="results-count">
                <i class="fas fa-users"></i> 
                <!-- ✅ UPDATED: Added safety check and filtering count -->
                <% 
                let visibleInstructors = instructors ? instructors.filter(instructor => 
                    instructor.showOnPublicPage !== false && 
                    instructor.status === 'Active' && 
                    !instructor.isDeleted
                ) : [];
                %>
                <%= visibleInstructors.length %> instructor<%= visibleInstructors.length !== 1 ? 's' : '' %> found
            </div>
            <div class="view-toggle">
                <button class="view-btn active" data-view="grid">
                    <i class="fas fa-th-large"></i> Grid
                </button>
                <button class="view-btn" data-view="list">
                    <i class="fas fa-list"></i> List
                </button>
            </div>
        </div>

        <!-- Instructors Grid View -->
        <section class="instructors-grid active" id="gridView">
            <!-- ✅ UPDATED: Added visibility filtering and safety checks -->
            <% if (instructors && instructors.length > 0) { %>
                <% instructors.forEach(instructor => { %>
                    <!-- ✅ NEW: Double-check visibility before rendering -->
                    <% if (instructor.showOnPublicPage !== false && instructor.status === 'Active' && !instructor.isDeleted) { %>
                        <div class="instructor-card fade-in" data-instructor-id="<%= instructor._id %>">
                            <!-- ✅ NEW: Add data attribute for debugging -->
                            <% if (process.env.NODE_ENV === 'development') { %>
                                <div class="debug-info" style="display: none;">
                                    Visibility: <%= instructor.showOnPublicPage !== false ? 'Visible' : 'Hidden' %> | 
                                    Status: <%= instructor.status %> | 
                                    Deleted: <%= instructor.isDeleted ? 'Yes' : 'No' %>
                                </div>
                            <% } %>
                            
                            <div class="instructor-image">
                                <img src="<%= instructor.profileImage || '/images/default-instructor.jpg' %>" alt="<%= instructor.firstName %> <%= instructor.lastName %>">
                                <div class="instructor-status">
                                    <i class="fas fa-circle"></i> <%= instructor.status %>
                                </div>
                                <% if (instructor.averageRating > 0) { %>
                                    <div class="instructor-rating">
                                        <i class="fas fa-star"></i> <%= instructor.averageRating %>
                                    </div>
                                <% } %>
                            </div>
                            
                            <div class="instructor-content">
                                <div class="instructor-header">
                                    <h3 class="instructor-name">
                                        <%= instructor.title ? instructor.title + ' ' : '' %><%= instructor.firstName %> <%= instructor.lastName %>
                                    </h3>
                                    <div class="instructor-designation"><%= instructor.designation || 'Aesthetic Medicine Expert' %></div>
                                </div>
                                
                                <div class="instructor-expertise">
                                    <div class="expertise-tags">
                                        <% if (instructor.expertise && instructor.expertise.length > 0) { %>
                                            <% instructor.expertise.slice(0, 3).forEach(exp => { %>
                                                <span class="expertise-tag"><%= exp %></span>
                                            <% }) %>
                                            <% if (instructor.expertise.length > 3) { %>
                                                <span class="expertise-tag">+<%= instructor.expertise.length - 3 %> more</span>
                                            <% } %>
                                        <% } %>
                                    </div>
                                </div>
                                
                                <div class="instructor-stats">
                                    <div class="stat-item">
                                        <span class="stat-number"><%= instructor.experience || '5+' %></span>
                                        <span class="stat-label">Years Exp.</span>
                                    </div>
                                    <div class="stat-item">
                                        <span class="stat-number"><%= instructor.totalCourses %></span>
                                        <span class="stat-label">Courses</span>
                                    </div>
                                    <div class="stat-item">
                                        <span class="stat-number"><%= instructor.upcomingCourses %></span>
                                        <span class="stat-label">Upcoming</span>
                                    </div>
                                </div>
                                
                                <div class="instructor-actions">
                                    <a href="/our-instructors/<%= instructor._id %>" class="btn-view">
                                        <i class="fas fa-user"></i> View Profile
                                    </a>
                                    <button class="btn-contact" onclick="contactInstructor('<%= instructor._id %>')">
                                        <i class="fas fa-envelope"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    <% } %>
                <% }) %>
            <% } %>
        </section>

        <!-- Instructors List View -->
        <section class="instructors-list" id="listView">
            <!-- ✅ UPDATED: Added visibility filtering and safety checks -->
            <% if (instructors && instructors.length > 0) { %>
                <% instructors.forEach(instructor => { %>
                    <!-- ✅ NEW: Double-check visibility before rendering -->
                    <% if (instructor.showOnPublicPage !== false && instructor.status === 'Active' && !instructor.isDeleted) { %>
                        <div class="instructor-list-item fade-in" data-instructor-id="<%= instructor._id %>">
                            <!-- ✅ NEW: Add data attribute for debugging -->
                            <% if (process.env.NODE_ENV === 'development') { %>
                                <div class="debug-info" style="display: none;">
                                    Visibility: <%= instructor.showOnPublicPage !== false ? 'Visible' : 'Hidden' %> | 
                                    Status: <%= instructor.status %> | 
                                    Deleted: <%= instructor.isDeleted ? 'Yes' : 'No' %>
                                </div>
                            <% } %>
                            
                            <div class="list-instructor-image">
                                <img src="<%= instructor.profileImage || '/images/default-instructor.jpg' %>" alt="<%= instructor.firstName %> <%= instructor.lastName %>">
                            </div>
                            
                            <div class="list-instructor-content">
                                <div class="list-instructor-header">
                                    <div class="list-instructor-info">
                                        <h3><%= instructor.title ? instructor.title + ' ' : '' %><%= instructor.firstName %> <%= instructor.lastName %></h3>
                                        <div class="title"><%= instructor.designation || 'Aesthetic Medicine Expert' %></div>
                                        <div class="designation"><%= instructor.expertise?.[0] || 'General Practice' %></div>
                                    </div>
                                    <% if (instructor.averageRating > 0) { %>
                                        <div class="list-rating">
                                            <div class="rating-stars">
                                                <% for(let i = 1; i <= 5; i++) { %>
                                                    <i class="fas fa-star <%= i <= Math.floor(instructor.averageRating) ? '' : 'far' %>"></i>
                                                <% } %>
                                            </div>
                                            <div class="rating-number"><%= instructor.averageRating %></div>
                                        </div>
                                    <% } %>
                                </div>
                                
                                <div class="list-expertise">
                                    <div class="expertise-tags">
                                        <% if (instructor.expertise && instructor.expertise.length > 0) { %>
                                            <% instructor.expertise.forEach(exp => { %>
                                                <span class="expertise-tag"><%= exp %></span>
                                            <% }) %>
                                        <% } %>
                                    </div>
                                </div>
                                
                                <div class="list-stats">
                                    <div class="list-stat">
                                        <strong><%= instructor.experience || '5+' %></strong> years experience
                                    </div>
                                    <div class="list-stat">
                                        <strong><%= instructor.totalCourses %></strong> courses taught
                                    </div>
                                    <div class="list-stat">
                                        <strong><%= instructor.upcomingCourses %></strong> upcoming sessions
                                    </div>
                                    <% if (instructor.languages && instructor.languages.length > 0) { %>
                                        <div class="list-stat">
                                            <strong>Languages:</strong> <%= instructor.languages.join(', ') %>
                                        </div>
                                    <% } %>
                                </div>
                                
                                <div class="list-actions">
                                    <a href="/our-instructors/<%= instructor._id %>" class="btn-view">
                                        <i class="fas fa-user"></i> View Full Profile
                                    </a>
                                    <button class="btn-contact" onclick="contactInstructor('<%= instructor._id %>')">
                                        <i class="fas fa-envelope"></i> Contact
                                    </button>
                                </div>
                            </div>
                        </div>
                    <% } %>
                <% }) %>
            <% } %>
        </section>

        <!-- Empty State -->
        <!-- ✅ UPDATED: Show empty state if no visible instructors -->
        <% if (!instructors || instructors.length === 0 || visibleInstructors.length === 0) { %>
            <div class="empty-state">
                <i class="fas fa-search"></i>
                <h3>No Instructors Found</h3>
                <p>Try adjusting your search criteria or clearing the filters to see all available instructors.</p>
                <a href="/our-instructors" class="btn btn-primary">
                    <i class="fas fa-refresh"></i> Show All Instructors
                </a>
            </div>
        <% } %>
    </main>

    <%- include('partials/footer') %>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // ✅ NEW: Debug logging for client-side troubleshooting
            console.log('🔍 CLIENT DEBUG: Instructors loaded on page:', document.querySelectorAll('.instructor-card, .instructor-list-item').length);
            
            // ✅ NEW: Check for any hidden instructors that might have slipped through
            const allInstructorElements = document.querySelectorAll('[data-instructor-id]');
            console.log('🔍 CLIENT DEBUG: Total instructor elements found:', allInstructorElements.length);
            
            // View toggle functionality
            const viewButtons = document.querySelectorAll('.view-btn');
            const gridView = document.getElementById('gridView');
            const listView = document.getElementById('listView');

            viewButtons.forEach(btn => {
                btn.addEventListener('click', function() {
                    const view = this.dataset.view;
                    
                    // Update active button
                    viewButtons.forEach(b => b.classList.remove('active'));
                    this.classList.add('active');
                    
                    // Toggle views
                    if (view === 'grid') {
                        gridView.style.display = 'grid';
                        listView.style.display = 'none';
                    } else {
                        gridView.style.display = 'none';
                        listView.style.display = 'block';
                    }
                    
                    // Save preference
                    localStorage.setItem('instructorsViewPreference', view);
                });
            });

            // Load saved view preference
            const savedView = localStorage.getItem('instructorsViewPreference');
            if (savedView) {
                const targetBtn = document.querySelector(`[data-view="${savedView}"]`);
                if (targetBtn) {
                    targetBtn.click();
                }
            }

            // Search suggestions
            const searchInput = document.getElementById('search');
            const suggestionsContainer = document.getElementById('searchSuggestions');
            let searchTimeout;

            searchInput.addEventListener('input', function() {
                const term = this.value.trim();
                
                clearTimeout(searchTimeout);
                
                if (term.length < 2) {
                    suggestionsContainer.style.display = 'none';
                    return;
                }
                
                searchTimeout = setTimeout(() => {
                    fetchSearchSuggestions(term);
                }, 300);
            });

            // Hide suggestions when clicking outside
            document.addEventListener('click', function(e) {
                if (!searchInput.contains(e.target) && !suggestionsContainer.contains(e.target)) {
                    suggestionsContainer.style.display = 'none';
                }
            });

            async function fetchSearchSuggestions(term) {
                try {
                    const response = await fetch(`/api/our-instructors/search?term=${encodeURIComponent(term)}`);
                    const suggestions = await response.json();
                    
                    // ✅ NEW: Debug log search suggestions
                    console.log('🔍 CLIENT DEBUG: Search suggestions received:', suggestions.length);
                    
                    displaySuggestions(suggestions);
                } catch (error) {
                    console.error('Search suggestions error:', error);
                }
            }

            function displaySuggestions(suggestions) {
                if (suggestions.length === 0) {
                    suggestionsContainer.style.display = 'none';
                    return;
                }
                
                const html = suggestions.map(suggestion => `
                    <div class="suggestion-item" onclick="selectSuggestion('${suggestion.url}')">
                        <img src="${suggestion.image || '/images/default-instructor.jpg'}" alt="${suggestion.name}" class="suggestion-image">
                        <div class="suggestion-info">
                            <h4>${suggestion.name}</h4>
                            <p>${suggestion.expertise}</p>
                        </div>
                    </div>
                `).join('');
                
                suggestionsContainer.innerHTML = html;
                suggestionsContainer.style.display = 'block';
            }

            // Auto-submit form on filter change
            const filterSelects = document.querySelectorAll('#expertise, #specialization, #courseType, #sortBy');
            filterSelects.forEach(select => {
                select.addEventListener('change', function() {
                    document.getElementById('searchForm').submit();
                });
            });

            // Animation on scroll
            const observerOptions = {
                threshold: 0.1,
                rootMargin: '0px 0px -50px 0px'
            };

            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('fade-in');
                    }
                });
            }, observerOptions);

            document.querySelectorAll('.instructor-card, .instructor-list-item').forEach(el => {
                observer.observe(el);
            });

            // ✅ NEW: Development debug helper
            if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
                window.debugInstructors = function() {
                    const cards = document.querySelectorAll('[data-instructor-id]');
                    console.log('='.repeat(50));
                    console.log('FRONTEND DEBUG: Instructor cards on page');
                    console.log('='.repeat(50));
                    cards.forEach((card, index) => {
                        const name = card.querySelector('.instructor-name, h3')?.textContent?.trim();
                        const instructorId = card.dataset.instructorId;
                        console.log(`${index + 1}. ${name} (ID: ${instructorId})`);
                    });
                    console.log(`Total cards: ${cards.length}`);
                    console.log('Run debugInstructors() in console anytime to check');
                };
                console.log('🔧 Debug helper loaded. Run debugInstructors() to see all instructors on page');
            }
        });

        // Global functions
        function selectSuggestion(url) {
            window.location.href = url;
        }

        function contactInstructor(instructorId) {
            // Implement contact functionality
            alert('Contact functionality will be implemented soon!');
        }
    </script>
</body>
</html>