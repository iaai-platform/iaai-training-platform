<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout - International Aesthetic Academic Institution (IAAI)</title>
    <link rel="stylesheet" href="/css/checkoutstyle.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Montserrat:wght@300;500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  </head>
  
  <body>
    <%- include('partials/header') %>

    <!-- ✅ Enhanced Checkout Section -->
    <section id="checkout">
      <div class="checkout-container">
        <h1><i class="fas fa-shopping-cart"></i> Your Cart</h1>
        
        <!-- Progress Indicator -->
        <div class="checkout-progress">
          <div class="progress-step active">
            <span class="step-number">1</span>
            <span class="step-label">Shopping Cart</span>
          </div>
          <div class="progress-line"></div>
          <div class="progress-step">
            <span class="step-number">2</span>
            <span class="step-label">Payment</span>
          </div>
          <div class="progress-line"></div>
          <div class="progress-step">
            <span class="step-number">3</span>
            <span class="step-label">Confirmation</span>
          </div>
        </div>

        <!-- 🆕 Early Bird Savings Banner (only show if there are savings) -->
        <% if (hasEarlyBirdDiscounts) { %>
          <div class="savings-banner">
            <i class="fas fa-tag"></i>
            <div>
              <div class="savings-text">🎉 Early Bird Savings Applied!</div>
              <div class="savings-amount">You're saving €<%= totalSavings %> total</div>
            </div>
          </div>
        <% } %>
       
        <% if (coursesInCart && coursesInCart.length > 0) { %>
          <!-- Course Table -->
          <div class="table-container">
            <table class="checkout-table">
              <thead>
                <tr>
                  <th>Course Code</th>
                  <th>Course Title</th>
                  <th>Type</th>
                  <th>Start Date</th>
                  <th>Price</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
 <!-- Update the table body section in checkout.ejs -->
<tbody>
  <% coursesInCart.forEach((course, index) => { %>
    <tr data-course-id="<%= course.courseId %>" data-course-type="<%= course.courseType %>">
      <td><strong><%= course.courseCode %></strong></td>
      <td>
        <div class="course-title-cell">
          <%= course.title %>
          
          <!-- ⭐ NEW: Linked Course Badge -->
          <% if (course.isLinkedCourseFree) { %>
            <span class="course-badge linked-free">
              <i class="fas fa-link"></i> Included Free
            </span>
          <% } %>
          
          <!-- 🆕 Early Bird Badge -->
          <% if (course.isEarlyBird) { %>
            <span class="early-bird-badge">
              <i class="fas fa-clock"></i> Early Bird
            </span>
          <% } %>
          
          <!-- Course Type Badges -->
          <% if (course.courseType === 'SelfPacedOnlineTraining' || course.displayType === 'Self-Paced') { %>
            <span class="course-badge self-paced">Self-Paced</span>
          <% } else if (course.courseType === 'OnlineLiveTraining' || course.displayType === 'Online Live') { %>
            <span class="course-badge online-live">
              <% if (course.isLinkedCourseFree) { %>
                Live Online (Included)
              <% } else { %>
                Live Online
              <% } %>
            </span>
          <% } else { %>
            <span class="course-badge in-person">In-Person</span>
          <% } %>
        </div>
      </td>
      <td><%= course.displayType || course.courseType %></td>
      <td>
        <% if (course.startDate) { %>
          <%= new Date(course.startDate).toLocaleDateString('en-US', { 
            month: 'short', 
            day: 'numeric', 
            year: 'numeric' 
          }) %>
        <% } else { %>
          <span class="text-muted">Anytime</span>
        <% } %>
      </td>
      <td class="price-cell">
        <!-- 🆕 Enhanced Price Display with Linked Course Free -->
        <div class="checkout-price-display">
          <% if (course.isLinkedCourseFree) { %>
            <span class="original-price">€<%= course.originalPrice.toFixed(2) %></span>
            <strong class="current-price free-price">FREE</strong>
            <div class="savings-amount-item">
              <i class="fas fa-gift"></i> Included with In-Person Course
            </div>
          <% } else if (course.isEarlyBird && course.originalPrice) { %>
            <span class="original-price">€<%= course.originalPrice.toFixed(2) %></span>
            <strong class="current-price">€<%= course.price.toFixed(2) %></strong>
            <div class="savings-amount-item">
              <i class="fas fa-tag"></i> Save €<%= course.earlyBirdSavings.toFixed(2) %>
            </div>
          <% } else { %>
            <strong class="current-price">€<%= course.price.toFixed(2) %></strong>
          <% } %>
        </div>
      </td>
      <td>
        <div class="action-buttons">
          <!-- ⭐ Disable actions for linked free courses -->
          <% if (!course.isLinkedCourseFree) { %>
            <button class="btn-icon btn-wishlist" 
                    onclick="moveToWishlist('<%= course.courseId %>', '<%= course.courseType %>')"
                    title="Move to Wishlist">
              <i class="fas fa-heart"></i>
            </button>
            <button class="btn-icon btn-remove" 
                    onclick="removeFromCart('<%= course.courseId %>', '<%= course.courseType %>')"
                    title="Remove from Cart">
              <i class="fas fa-trash"></i>
            </button>
          <% } else { %>
            <span class="text-muted small">
              <i class="fas fa-info-circle"></i> Linked Course
            </span>
          <% } %>
        </div>
      </td>
    </tr>
  <% }) %>
</tbody>
              </tbody>
            </table>
          </div>

          <!-- 🆕 Enhanced Price Summary with Early Bird Breakdown -->
          <div class="price-summary">
            <% if (parseFloat(totalSavings) > 0) { %>
              <div class="price-row">
                <span>Subtotal (Original Price):</span>
                <span class="price-value">€<%= totalOriginalPrice %></span>
              </div>
              <div class="price-row promo-applied">
                <span>Early Bird Discount:</span>
                <span class="price-value discount">-€<%= totalSavings %></span>
              </div>
            <% } else { %>
              <div class="price-row">
                <span>Subtotal (<%= coursesInCart.length %> items):</span>
                <span class="price-value">€<span id="originalPrice"><%= totalOriginalPrice || totalPrice.toFixed(2) %></span></span>
              </div>
            <% } %>
            
            <div class="price-row promo-applied" id="discountRow" style="display: none;">
              <span>Promo Discount (<span id="discountPercent">0</span>%):</span>
              <span class="price-value discount">-€<span id="discountAmount">0.00</span></span>
            </div>
            
            <div class="price-row" id="taxRow" style="display: none;">
              <span>Tax:</span>
              <span class="price-value">€<span id="taxAmount">0.00</span></span>
            </div>
            
            <div class="price-row total">
              <span>Total:</span>
              <span class="price-value total-price">€<span id="discountedPrice"><%= totalPrice.toFixed(2) %></span></span>
            </div>
            
            <div class="price-row total-aed">
              <span>Total (AED):</span>
              <span class="price-value total-price-aed">AED <span id="discountedPriceAED"><%= (totalPrice * 4.0).toFixed(2) %></span></span>
            </div>
            
            <!-- Enhanced Savings Message -->
            <% if (parseFloat(totalSavings) > 0) { %>
              <div class="savings-message" style="display: block;">
                <i class="fas fa-piggy-bank"></i>
                You're saving €<%= totalSavings %> with Early Bird pricing!
              </div>
            <% } %>
            <div id="savingsMessage" class="savings-message" style="display: none;">
              <i class="fas fa-piggy-bank"></i>
              You're saving €<span id="savingsAmount">0.00</span>!
            </div>
          </div>
         
          <!-- ✅ Promo Code Section -->
          <div class="promo-section">
            <h3><i class="fas fa-tag"></i> Have a Promo Code?</h3>
            <div class="promo-input-group">
              <input type="text" id="promoCode" placeholder="Enter Promo Code" class="promo-input">
              <button type="button" id="applyPromoBtn" class="btn-apply-promo">
                <i class="fas fa-tag"></i> Apply
              </button>
            </div>
            <div id="promoMessage" class="promo-message"></div>
            
            <!-- Active Promo Display -->
            <div id="activePromo" class="active-promo" style="display: none;">
              <i class="fas fa-check-circle"></i>
              Active: <span id="activePromoCode"></span>
              <button class="remove-promo" onclick="removePromoCode()">
                <i class="fas fa-times"></i>
              </button>
            </div>
          </div>

          <!-- ✅ Additional Options -->
          <div class="additional-options">
            <h3><i class="fas fa-cog"></i> Additional Options</h3>
            
            <!-- Gift Option -->
            <label class="checkbox-container">
              <input type="checkbox" id="giftOption" onchange="toggleGiftOptions()">
              <span class="checkmark"></span>
              <span>This is a gift</span>
            </label>
            
            <div id="giftDetails" class="gift-details" style="display: none;">
              <input type="email" id="giftRecipientEmail" placeholder="Recipient's Email" class="form-input">
              <textarea id="giftMessage" placeholder="Gift message (optional)" class="form-textarea"></textarea>
            </div>
            
            <!-- Add Notes -->
            <label class="checkbox-container">
              <input type="checkbox" id="addNotes" onchange="toggleNotes()">
              <span class="checkmark"></span>
              <span>Add order notes</span>
            </label>
            
            <div id="orderNotes" style="display: none;">
              <textarea id="notesText" placeholder="Add any special instructions or notes" class="form-textarea"></textarea>
            </div>
          </div>

          <!-- ✅ Terms and Conditions -->
          <div class="terms-container">
            <label class="checkbox-container">
              <input type="checkbox" id="agreeTerms" required onchange="validateCheckout()">
              <span class="checkmark"></span>
              <span class="terms-text">
                I agree to the 
                <a href="/policies#terms" target="_blank">Terms and Conditions</a>,
                <a href="/policies#privacy" target="_blank">Privacy Policy</a>, and
                <a href="/policies#refund" target="_blank">Refund Policy</a>
              </span>
            </label>
          </div>

          <!-- ✅ Action Buttons -->
          <div class="checkout-actions">
            <button type="button" class="btn-secondary" onclick="window.location.href='/training-programs'">
              <i class="fas fa-arrow-left"></i> Continue Shopping
            </button>
            <button type="button" class="btn-primary" id="proceedBtn" onclick="handleCheckout()" disabled>
              <i class="fas fa-credit-card"></i> Proceed to Payment
            </button>
          </div>
          
          <!-- Security Badge -->
          <div class="security-badge">
            <i class="fas fa-lock"></i>
            <span>Secure Checkout - SSL Encrypted</span>
          </div>

        <% } else { %>
          <!-- Empty Cart -->
          <div class="empty-cart">
            <i class="fas fa-shopping-cart empty-cart-icon"></i>
            <h3>Your cart is empty!</h3>
            <p>Looks like you haven't added any courses yet.</p>
            
            <!-- Quick Links -->
            <div class="quick-links">
              <a href="/training-programs" class="btn-primary">
                <i class="fas fa-graduation-cap"></i> Browse All Courses
              </a>
              <a href="/wishlist" class="btn-secondary">
                <i class="fas fa-heart"></i> View Wishlist
              </a>
            </div>
            
            <!-- Recommendations -->
            <div class="recommendations">
              <h4>Popular Courses</h4>
              <p>Check out our most popular training programs</p>
            </div>
          </div>
        <% } %>
      </div>
    </section>

    <%- include('partials/footer') %>

    <!-- Loading Overlay -->
    <div id="loadingOverlay" class="loading-overlay" style="display: none;">
      <div class="spinner">
        <i class="fas fa-spinner fa-spin"></i>
        <p>Processing...</p>
      </div>
    </div>

    <script>
      // 🔧 Initialize price variables from server data
      let currentDiscountedPrice = <%= totalPrice.toFixed(2) %>;  // Final price after early bird
      let originalPrice = <%= totalOriginalPrice || totalPrice.toFixed(2) %>;  // Original price before early bird
      let eurToAedRate = <%= eurToAedRate || 4.0 %>; // Conversion rate from server
      let promoApplied = false;
      let promoDiscount = 0;

      // ✅ Initialize on page load
      document.addEventListener('DOMContentLoaded', function() {
        validateCheckout();
        console.log('💰 Checkout initialized:', {
          originalPrice: originalPrice,
          currentPrice: currentDiscountedPrice,
          originalPriceAED: (originalPrice * eurToAedRate).toFixed(2),
          currentPriceAED: (currentDiscountedPrice * eurToAedRate).toFixed(2),
          eurToAedRate: eurToAedRate,
          cartItems: <%= coursesInCart ? coursesInCart.length : 0 %>
        });
      });

      // ✅ Validate checkout button state
      function validateCheckout() {
        const agreeTerms = document.getElementById('agreeTerms').checked;
        const proceedBtn = document.getElementById('proceedBtn');
        proceedBtn.disabled = !agreeTerms;
      }

      // ✅ Remove from Cart
      async function removeFromCart(courseId, courseType) {
        if (!confirm('Are you sure you want to remove this course from your cart?')) {
          return;
        }

        showLoading(true);

        try {
          const response = await fetch('/remove-from-cart', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ courseIds: [courseId] })
          });

          const result = await response.json();

          if (result.success) {
            // Animate row removal
            const row = document.querySelector(`tr[data-course-id="${courseId}"]`);
            if (row) {
              row.style.animation = 'fadeOut 0.5s';
              setTimeout(() => {
                window.location.reload();
              }, 500);
            } else {
              window.location.reload();
            }
          } else {
            showMessage(result.message || 'Error removing course from cart', 'error');
          }
        } catch (error) {
          console.error('Error:', error);
          showMessage('Error removing course from cart', 'error');
        } finally {
          showLoading(false);
        }
      }

      // ✅ Move to Wishlist
      async function moveToWishlist(courseId, courseType) {
        showLoading(true);

        try {
          // First add to wishlist
          const wishlistResponse = await fetch('/add-to-wishlist', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ courseId, courseType })
          });

          const wishlistResult = await wishlistResponse.json();

          if (wishlistResult.success) {
            // Then remove from cart
            const removeResponse = await fetch('/remove-from-cart', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ courseIds: [courseId] })
            });

            const removeResult = await removeResponse.json();

            if (removeResult.success) {
              showMessage('Course moved to wishlist!', 'success');
              setTimeout(() => window.location.reload(), 1000);
            }
          } else {
            showMessage(wishlistResult.message || 'Error moving to wishlist', 'error');
          }
        } catch (error) {
          console.error('Error:', error);
          showMessage('Error moving course to wishlist', 'error');
        } finally {
          showLoading(false);
        }
      }

      // ✅ Apply Promo Code
      document.getElementById('applyPromoBtn').addEventListener('click', async () => {
        const promoCode = document.getElementById('promoCode').value.trim();
        const button = document.getElementById('applyPromoBtn');
        
        if (!promoCode) {
          showMessage('Please enter a promo code.', 'error');
          return;
        }

        // Disable button during processing
        button.disabled = true;
        button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Applying...';

        try {
          const response = await fetch('/apply-promo-code', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ promoCode })
          });

          const result = await response.json();
          
          if (result.success) {
            currentDiscountedPrice = parseFloat(result.newTotalPrice);
            const discountAmount = originalPrice - currentDiscountedPrice;
            promoDiscount = ((discountAmount / originalPrice) * 100).toFixed(0);
            
            // Update UI with EUR and AED values
            document.getElementById('discountedPrice').innerText = result.newTotalPrice;
            document.getElementById('discountedPriceAED').innerText = (parseFloat(result.newTotalPrice) * eurToAedRate).toFixed(2);
            document.getElementById('discountAmount').innerText = discountAmount.toFixed(2);
            document.getElementById('discountPercent').innerText = promoDiscount;
            document.getElementById('discountRow').style.display = 'flex';
            document.getElementById('savingsAmount').innerText = discountAmount.toFixed(2);
            document.getElementById('savingsMessage').style.display = 'block';
            
            // Show active promo
            document.getElementById('activePromoCode').innerText = promoCode.toUpperCase();
            document.getElementById('activePromo').style.display = 'flex';
            
            // Disable promo input
            document.getElementById('promoCode').disabled = true;
            button.style.display = 'none';
            
            promoApplied = true;
            
            if (result.completeRegistration) {
              // ✅ 100% discount - Change button to "Complete Registration"
              const proceedBtn = document.getElementById('proceedBtn');
              proceedBtn.innerHTML = '<i class="fas fa-check-circle"></i> Complete Registration (FREE)';
              proceedBtn.classList.add('btn-success');
              showMessage('🎉 Promo code applied! Your courses are now FREE!', 'success');
            } else {
              // ✅ Partial discount
              showMessage('✅ Promo code applied successfully!', 'success');
            }
          } else {
            showMessage(result.message, 'error');
            button.disabled = false;
            button.innerHTML = '<i class="fas fa-tag"></i> Apply';
          }
        } catch (error) {
          console.error('Error applying promo code:', error);
          showMessage('Error applying promo code. Please try again.', 'error');
          button.disabled = false;
          button.innerHTML = '<i class="fas fa-tag"></i> Apply';
        }
      });

      // ✅ Remove Promo Code
      function removePromoCode() {
        if (confirm('Remove promo code?')) {
          // Reset prices to original values
          currentDiscountedPrice = originalPrice;
          document.getElementById('discountedPrice').innerText = originalPrice.toFixed(2);
          document.getElementById('discountedPriceAED').innerText = (originalPrice * eurToAedRate).toFixed(2);
          document.getElementById('discountRow').style.display = 'none';
          document.getElementById('savingsMessage').style.display = 'none';
          document.getElementById('activePromo').style.display = 'none';
          
          // Re-enable promo input
          document.getElementById('promoCode').disabled = false;
          document.getElementById('promoCode').value = '';
          document.getElementById('applyPromoBtn').style.display = 'inline-flex';
          
          // Reset button
          const proceedBtn = document.getElementById('proceedBtn');
          proceedBtn.innerHTML = '<i class="fas fa-credit-card"></i> Proceed to Payment';
          proceedBtn.classList.remove('btn-success');
          
          promoApplied = false;
          showMessage('Promo code removed', 'info');
        }
      }

      // ✅ Toggle Gift Options
      function toggleGiftOptions() {
        const giftDetails = document.getElementById('giftDetails');
        giftDetails.style.display = document.getElementById('giftOption').checked ? 'block' : 'none';
      }

      // ✅ Toggle Notes
      function toggleNotes() {
        const orderNotes = document.getElementById('orderNotes');
        orderNotes.style.display = document.getElementById('addNotes').checked ? 'block' : 'none';
      }

      // ✅ Show message
      function showMessage(message, type) {
        const messageDiv = document.getElementById('promoMessage');
        messageDiv.className = `promo-message ${type}`;
        messageDiv.innerHTML = `
          <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-circle' : 'info-circle'}"></i>
          ${message}
        `;
        messageDiv.style.display = 'block';
        
        // Auto-hide after 5 seconds
        setTimeout(() => {
          messageDiv.style.display = 'none';
        }, 5000);
      }

      // ✅ Show/Hide Loading
      function showLoading(show) {
        document.getElementById('loadingOverlay').style.display = show ? 'flex' : 'none';
      }

    // Replace the existing beforeunload code in checkout.ejs with this:

// Track if user is proceeding to payment
let proceedingToPayment = false;

// ✅ Updated: Only prevent navigation if NOT proceeding to payment
window.addEventListener('beforeunload', function (e) {
  // Don't show warning if user is proceeding to payment
  if (proceedingToPayment) {
    return;
  }
  
  // Only show warning if there are items in cart
  if (document.querySelectorAll('.checkout-table tbody tr').length > 0) {
    e.preventDefault();
    e.returnValue = 'You have items in your cart. Are you sure you want to leave?';
  }
});

// ✅ Update handleCheckout function to set the flag
async function handleCheckout() {
  const agreeTerms = document.getElementById('agreeTerms').checked;
  const proceedBtn = document.getElementById('proceedBtn');
  
  if (!agreeTerms) {
    alert('⚠️ Please agree to the Terms and Conditions to proceed.');
    return;
  }

  // ✅ SET FLAG: User is proceeding to payment
  proceedingToPayment = true;

  // Collect additional data
  const checkoutData = {
    isGift: document.getElementById('giftOption').checked,
    giftRecipientEmail: document.getElementById('giftRecipientEmail')?.value,
    giftMessage: document.getElementById('giftMessage')?.value,
    orderNotes: document.getElementById('notesText')?.value
  };

  // Disable button during processing
  proceedBtn.disabled = true;
  proceedBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processing...';
  showLoading(true);

  try {
    console.log(`💰 Current price check: €${currentDiscountedPrice}`);
    
    if (currentDiscountedPrice <= 0 || currentDiscountedPrice === 0) {
      // FREE registration
      console.log('🎯 Processing free registration - price is €0');
      
      const response = await fetch('/complete-registration', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(checkoutData)
      });

      const result = await response.json();
      
      if (result.success) {
        console.log('✅ Free registration successful, redirecting to success page');
        window.location.href = `/payment/success?order_id=FREE&amount=0.00&ref=${result.referenceNumber}`;
      } else {
        // ✅ RESET FLAG on error
        proceedingToPayment = false;
        alert('❌ Error completing registration: ' + (result.message || 'Please try again.'));
        proceedBtn.disabled = false;
        proceedBtn.innerHTML = '<i class="fas fa-check-circle"></i> Complete Registration (FREE)';
      }
    } else {
      // Payment required
      console.log('💳 Processing payment with CCAvenue...');
      
      // ✅ SHOW USER-FRIENDLY MESSAGE before redirect
      const confirmPayment = confirm(
        '🔒 You will now be redirected to CCAvenue secure payment gateway to complete your payment.\n\n' +
        '✅ Your cart data is saved safely.\n' +
        '💳 Payment will be processed in AED currency.\n\n' +
        'Click OK to proceed to payment gateway.'
      );
      
      if (!confirmPayment) {
        // ✅ RESET FLAG if user cancels
        proceedingToPayment = false;
        proceedBtn.disabled = false;
        proceedBtn.innerHTML = '<i class="fas fa-credit-card"></i> Proceed to Payment';
        showLoading(false);
        return;
      }
      
      // Create a form and submit to initiate payment
      const form = document.createElement('form');
      form.method = 'POST';
      form.action = '/payment/initiate';
      
      // Add checkout data as hidden inputs
      Object.keys(checkoutData).forEach(key => {
        const input = document.createElement('input');
        input.type = 'hidden';
        input.name = key;
        input.value = checkoutData[key];
        form.appendChild(input);
      });
      
      document.body.appendChild(form);
      
      // ✅ SHOW REDIRECT MESSAGE
      showLoading(false);
     // ✅ ADD: Set a maximum timeout of 10 seconds
let redirectTimeout;
let formSubmitted = false;

document.body.innerHTML = `
  <div style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.8); display: flex; justify-content: center; align-items: center; z-index: 10000;">
    <div style="background: white; padding: 40px; border-radius: 15px; text-align: center; max-width: 500px;">
      <div style="font-size: 48px; margin-bottom: 20px;">🔒</div>
      <h3 id="redirectTitle">Redirecting to Secure Payment Gateway</h3>
      <p id="redirectMessage">Please wait while we redirect you to CCAvenue...</p>
      <div style="margin: 20px 0;">
        <div style="display: inline-block; width: 40px; height: 40px; border: 4px solid #f3f3f3; border-top: 4px solid #007bff; border-radius: 50%; animation: spin 1s linear infinite;"></div>
      </div>
      <p style="color: #666; font-size: 14px;">
        ✅ Your data is secure<br>
        💳 Payment in AED currency<br>
        🔄 This may take a few seconds
      </p>
      
      <!-- ✅ ADD: Manual retry button (hidden initially) -->
      <div id="retrySection" style="display: none; margin-top: 20px;">
        <p style="color: #e74c3c; margin-bottom: 15px;">⚠️ Taking longer than expected...</p>
        <button onclick="retryPayment()" style="background: #007bff; color: white; border: none; padding: 10px 20px; border-radius: 5px; cursor: pointer;">
          🔄 Try Again
        </button>
        <button onclick="goBackToCheckout()" style="background: #6c757d; color: white; border: none; padding: 10px 20px; border-radius: 5px; cursor: pointer; margin-left: 10px;">
          ← Back to Checkout
        </button>
      </div>
    </div>
  </div>
  <style>
    @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
  </style>
`;

// ✅ ADD: Timeout handler
redirectTimeout = setTimeout(() => {
  if (!formSubmitted) {
    console.error('❌ Payment redirect timeout - showing retry options');
    document.getElementById('redirectTitle').innerText = 'Connection Issue';
    document.getElementById('redirectMessage').innerText = 'Unable to connect to payment gateway. Please try again.';
    document.getElementById('retrySection').style.display = 'block';
  }
}, 10000); // 10 second timeout

// ✅ ADD: Retry functions
window.retryPayment = function() {
  document.getElementById('redirectTitle').innerText = 'Redirecting to Secure Payment Gateway';
  document.getElementById('redirectMessage').innerText = 'Please wait while we redirect you to CCAvenue...';
  document.getElementById('retrySection').style.display = 'none';
  
  // Clear existing timeout
  if (redirectTimeout) clearTimeout(redirectTimeout);
  
  // Try submitting again
  setTimeout(() => {
    try {
      form.submit();
      formSubmitted = true;
      console.log('🔄 Retrying payment form submission');
    } catch (error) {
      console.error('❌ Retry failed:', error);
      document.getElementById('redirectTitle').innerText = 'Submission Failed';
      document.getElementById('redirectMessage').innerText = 'Unable to process payment. Please return to checkout.';
      document.getElementById('retrySection').style.display = 'block';
    }
  }, 2000);
  
  // Set timeout again
  redirectTimeout = setTimeout(() => {
    if (!formSubmitted) {
      document.getElementById('redirectTitle').innerText = 'Still Having Issues';
      document.getElementById('redirectMessage').innerText = 'Please return to checkout and try again.';
      document.getElementById('retrySection').style.display = 'block';
    }
  }, 10000);
};

window.goBackToCheckout = function() {
  proceedingToPayment = false; // Reset flag
  window.location.href = '/checkout';
};
      // Submit form after short delay
      setTimeout(() => {
        form.submit();
      }, 2000);
    }
  } catch (error) {
    console.error('Error during checkout:', error);
    // ✅ RESET FLAG on error
    proceedingToPayment = false;
    alert('❌ Error processing checkout. Please try again.');
    proceedBtn.disabled = false;
    proceedBtn.innerHTML = currentDiscountedPrice <= 0 ? 
      '<i class="fas fa-check-circle"></i> Complete Registration (FREE)' : 
      '<i class="fas fa-credit-card"></i> Proceed to Payment';
  } finally {
    showLoading(false);
  }
}

      // ✅ Add CSS animations
      const style = document.createElement('style');
      style.textContent = `
        @keyframes fadeOut {
          from { opacity: 1; transform: translateX(0); }
          to { opacity: 0; transform: translateX(-100px); }
        }
        
        .loading-overlay {
          position: fixed;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background: rgba(0, 0, 0, 0.7);
          display: flex;
          justify-content: center;
          align-items: center;
          z-index: 9999;
        }
        
        .spinner {
          text-align: center;
          color: white;
        }
        
        .spinner i {
          font-size: 48px;
          margin-bottom: 20px;
        }
        
        .promo-message {
          padding: 10px 15px;
          border-radius: 5px;
          margin: 10px 0;
          display: none;
          align-items: center;
          gap: 10px;
        }
        
        .promo-message.success {
          background: #d4edda;
          color: #155724;
          border: 1px solid #c3e6cb;
        }
        
        .promo-message.error {
          background: #f8d7da;
          color: #721c24;
          border: 1px solid #f5c6cb;
        }
        
        .promo-message.info {
          background: #d1ecf1;
          color: #0c5460;
          border: 1px solid #bee5eb;
        }
        
        .btn-success {
          background: linear-gradient(135deg, #28a745, #20c997) !important;
        }
        
        .total-aed {
          color: #666;
          font-size: 0.95em;
        }
        
        .total-price-aed {
          color: #666 !important;
          font-weight: 500;
        }
      `;
      document.head.appendChild(style);

      // ✅ Debug information with dual currency
      console.log('💰 Checkout Debug Info:', {
        finalTotalPrice: '<%= totalPrice.toFixed(2) %> EUR',
        finalTotalPriceAED: '<%= (totalPrice * (eurToAedRate || 4.0)).toFixed(2) %> AED',
        originalTotalPrice: '<%= totalOriginalPrice || totalPrice.toFixed(2) %> EUR',
        originalTotalPriceAED: '<%= ((totalOriginalPrice || totalPrice) * (eurToAedRate || 4.0)).toFixed(2) %> AED',
        coursesInCart: <%= coursesInCart ? coursesInCart.length : 0 %>,
        <% if (parseFloat(totalSavings) > 0) { %>
        earlyBirdSavings: '<%= totalSavings %> EUR (<%= totalSavingsAED %> AED)',
        <% } %>
        hasEarlyBirdDiscounts: <%= hasEarlyBirdDiscounts ? 'true' : 'false' %>,
        eurToAedRate: eurToAedRate
      });
    </script>
  </body>
</html>