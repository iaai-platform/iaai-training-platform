<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - IAAI Admin</title>
    
    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <!-- Icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    
    <!-- DataTables CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/responsive/2.5.0/css/responsive.bootstrap5.min.css">
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <!-- Custom Styles -->
    <style>
        :root {
            --primary-color: #2563eb;
            --primary-dark: #1e40af;
            --success-color: #10b981;
            --danger-color: #ef4444;
            --warning-color: #f59e0b;
            --info-color: #06b6d4;
            --dark-color: #1f2937;
            --light-bg: #f9fafb;
            --border-color: #e5e7eb;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .main-container {
            max-width: 1400px;
            margin: 0 auto;
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.1);
            overflow: hidden;
        }

        /* Header Section */
        .header-section {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
            color: white;
            padding: 40px;
            position: relative;
            overflow: hidden;
        }

        .header-section::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -10%;
            width: 500px;
            height: 500px;
            background: rgba(255,255,255,0.1);
            border-radius: 50%;
        }

        .header-content {
            position: relative;
            z-index: 1;
        }

        .header-title {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 10px;
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .header-subtitle {
            font-size: 1.1rem;
            opacity: 0.9;
        }

        /* Statistics Cards */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            padding: 30px;
            background: var(--light-bg);
            border-bottom: 1px solid var(--border-color);
        }

        .stat-card {
            background: white;
            padding: 20px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            gap: 15px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
            transition: transform 0.2s, box-shadow 0.2s;
        }

        .stat-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        }

        .stat-icon {
            width: 50px;
            height: 50px;
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
        }

        .stat-icon.users { background: #e0f2fe; color: #0ea5e9; }
        .stat-icon.confirmed { background: #d1fae5; color: #10b981; }
        .stat-icon.pending { background: #fed7aa; color: #f97316; }
        .stat-icon.revenue { background: #ddd6fe; color: #8b5cf6; }

        .stat-content h3 {
            font-size: 1.8rem;
            font-weight: 700;
            margin: 0;
        }

        .stat-content p {
            margin: 0;
            color: #6b7280;
            font-size: 0.9rem;
        }

        /* Filters Section */
        .filters-section {
            padding: 30px;
            background: white;
            border-bottom: 1px solid var(--border-color);
        }

        .filter-row {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
            align-items: end;
        }

        .filter-group {
            flex: 1;
            min-width: 200px;
        }

        .filter-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
            color: var(--dark-color);
            font-size: 0.9rem;
        }

        .filter-group input,
        .filter-group select {
            width: 100%;
            padding: 10px 15px;
            border: 1px solid var(--border-color);
            border-radius: 8px;
            font-size: 0.95rem;
            transition: all 0.3s;
        }

        .filter-group input:focus,
        .filter-group select:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
        }

        .btn-filter {
            padding: 10px 25px;
            background: var(--primary-color);
            color: white;
            border: none;
            border-radius: 8px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s;
        }

        .btn-filter:hover {
            background: var(--primary-dark);
            transform: translateY(-1px);
        }

        .btn-reset {
            padding: 10px 25px;
            background: white;
            color: var(--dark-color);
            border: 1px solid var(--border-color);
            border-radius: 8px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s;
        }

        .btn-reset:hover {
            background: var(--light-bg);
        }

        .btn-export {
            padding: 10px 25px;
            background: var(--success-color);
            color: white;
            border: none;
            border-radius: 8px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

        .btn-export:hover {
            background: #0ea471;
            transform: translateY(-1px);
        }

        /* Table Section */
        .table-section {
            padding: 30px;
        }

        .table-responsive {
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }

        .user-table {
            width: 100%;
            background: white;
        }

        .user-table thead {
            background: var(--light-bg);
        }

        .user-table thead th {
            padding: 15px;
            font-weight: 600;
            color: var(--dark-color);
            border-bottom: 2px solid var(--border-color);
            white-space: nowrap;
        }

        .user-table tbody tr {
            transition: background 0.2s;
        }

        .user-table tbody tr:hover {
            background: #f9fafb;
        }

        .user-table tbody td {
            padding: 15px;
            border-bottom: 1px solid var(--border-color);
            vertical-align: middle;
        }

        /* User Cell */
        .user-cell {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            font-size: 1.1rem;
        }

        .user-info {
            flex: 1;
        }

        .user-name {
            font-weight: 600;
            color: var(--dark-color);
            margin-bottom: 2px;
        }

        .user-email {
            font-size: 0.85rem;
            color: #6b7280;
        }

        /* Status Badges */
        .status-badge {
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
            gap: 5px;
        }

        .status-badge.confirmed {
            background: #d1fae5;
            color: #065f46;
        }

        .status-badge.pending {
            background: #fed7aa;
            color: #92400e;
        }

        .status-badge.locked {
            background: #fee2e2;
            color: #991b1b;
        }

        .status-badge.active {
            background: #dbeafe;
            color: #1e40af;
        }

        .status-indicator {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            display: inline-block;
        }

        .status-indicator.confirmed { background: #10b981; }
        .status-indicator.pending { background: #f59e0b; }
        .status-indicator.locked { background: #ef4444; }
        .status-indicator.active { background: #3b82f6; }

        /* Role Badge */
        .role-badge {
            padding: 4px 10px;
            border-radius: 6px;
            font-size: 0.85rem;
            font-weight: 500;
        }

        .role-badge.admin {
            background: #fef3c7;
            color: #92400e;
        }

        .role-badge.instructor {
            background: #e0e7ff;
            color: #3730a3;
        }

        .role-badge.support {
            background: #f3e8ff;
            color: #6b21a8;
        }

        .role-badge.user {
            background: #f3f4f6;
            color: #4b5563;
        }

        /* Location Cell */
        .location-cell {
            display: flex;
            align-items: center;
            gap: 5px;
            color: #6b7280;
            font-size: 0.9rem;
        }

        /* Course Info */
        .course-info {
            display: flex;
            flex-direction: column;
            gap: 3px;
        }

        .course-count {
            font-weight: 600;
            color: var(--dark-color);
        }

        .course-types {
            font-size: 0.85rem;
            color: #6b7280;
        }

        /* Spent Amount */
        .spent-amount {
            font-weight: 600;
            color: var(--dark-color);
            font-size: 1.1rem;
        }

        /* Action Buttons */
        .action-buttons {
            display: flex;
            gap: 8px;
        }

        .btn-action {
            padding: 8px;
            border: none;
            background: transparent;
            cursor: pointer;
            border-radius: 6px;
            transition: all 0.3s;
            width: 36px;
            height: 36px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .btn-action:hover {
            background: var(--light-bg);
        }

        .btn-action.details {
            color: var(--info-color);
        }

        .btn-action.details:hover {
            background: #ecfeff;
        }

        .btn-action.approve {
            color: var(--success-color);
        }

        .btn-action.approve:hover {
            background: #d1fae5;
        }

        .btn-action.reject {
            color: var(--warning-color);
        }

        .btn-action.reject:hover {
            background: #fef3c7;
        }

        .btn-action.delete {
            color: var(--danger-color);
        }

        .btn-action.delete:hover {
            background: #fee2e2;
        }

        /* Pagination */
        .pagination-section {
            padding: 20px 30px;
            background: var(--light-bg);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .pagination-info {
            color: #6b7280;
        }

        .pagination-controls {
            display: flex;
            gap: 5px;
        }

        .page-btn {
            padding: 8px 12px;
            border: 1px solid var(--border-color);
            background: white;
            color: var(--dark-color);
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.3s;
            font-weight: 500;
        }

        .page-btn:hover:not(:disabled) {
            background: var(--primary-color);
            color: white;
            border-color: var(--primary-color);
        }

        .page-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .page-btn.active {
            background: var(--primary-color);
            color: white;
            border-color: var(--primary-color);
        }

        /* Loading Overlay */
        .loading-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0,0,0,0.5);
            z-index: 9999;
            justify-content: center;
            align-items: center;
        }

        .loading-overlay.active {
            display: flex;
        }

        .loading-spinner {
            width: 50px;
            height: 50px;
            border: 5px solid #f3f4f6;
            border-top-color: var(--primary-color);
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        /* Responsive */
        @media (max-width: 768px) {
            .header-title {
                font-size: 1.8rem;
            }
            
            .stats-grid {
                grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
                gap: 15px;
                padding: 20px;
            }
            
            .filter-row {
                flex-direction: column;
            }
            
            .filter-group {
                width: 100%;
            }
            
            .table-section {
                padding: 15px;
            }
        }
    </style>
</head>

<body>
    <%- include('partials/header') %>
    
    <div class="main-container">
        <!-- Header Section -->
        <div class="header-section">
            <div class="header-content">
                <h1 class="header-title">
                    <i class="fas fa-users"></i>
                    User Management
                </h1>
                <p class="header-subtitle">Manage all registered users and their activities</p>
            </div>
        </div>

        <!-- Statistics Cards -->
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-icon users">
                    <i class="fas fa-users"></i>
                </div>
                <div class="stat-content">
                    <h3><%= pagination.totalUsers %></h3>
                    <p>Total Users</p>
                </div>
            </div>
            
            <div class="stat-card">
                <div class="stat-icon confirmed">
                    <i class="fas fa-check-circle"></i>
                </div>
                <div class="stat-content">
                    <h3><%= users.filter(u => u.isConfirmed).length %></h3>
                    <p>Confirmed</p>
                </div>
            </div>
            
            <div class="stat-card">
                <div class="stat-icon pending">
                    <i class="fas fa-clock"></i>
                </div>
                <div class="stat-content">
                    <h3><%= users.filter(u => !u.isConfirmed).length %></h3>
                    <p>Pending</p>
                </div>
            </div>
            
            <div class="stat-card">
                <div class="stat-icon revenue">
                    <i class="fas fa-euro-sign"></i>
                </div>
                <div class="stat-content">
                    <h3>€<%= users.reduce((sum, u) => sum + parseFloat(u.totalSpent || 0), 0).toFixed(2) %></h3>
                    <p>Total Revenue</p>
                </div>
            </div>
        </div>

        <!-- Filters Section -->
        <div class="filters-section">
            <form method="GET" action="/admin-users-manage" id="filterForm">
                <div class="filter-row">
                    <div class="filter-group">
                        <label for="search">Search</label>
                        <input type="text" 
                               id="search" 
                               name="search" 
                               placeholder="Name, email, phone..." 
                               value="<%= filters.search || '' %>">
                    </div>
                    
                    <div class="filter-group">
                        <label for="status">Status</label>
                        <select id="status" name="status">
                            <option value="">All Status</option>
                            <option value="confirmed" <%= filters.status === 'confirmed' ? 'selected' : '' %>>Confirmed</option>
                            <option value="pending" <%= filters.status === 'pending' ? 'selected' : '' %>>Pending</option>
                            <option value="active" <%= filters.status === 'active' ? 'selected' : '' %>>Active</option>
                            <option value="locked" <%= filters.status === 'locked' ? 'selected' : '' %>>Locked</option>
                        </select>
                    </div>
                    
                    <div class="filter-group">
                        <label for="role">Role</label>
                        <select id="role" name="role">
                            <option value="all">All Roles</option>
                            <option value="user" <%= filters.role === 'user' ? 'selected' : '' %>>User</option>
                            <option value="instructor" <%= filters.role === 'instructor' ? 'selected' : '' %>>Instructor</option>
                            <option value="admin" <%= filters.role === 'admin' ? 'selected' : '' %>>Admin</option>
                            <option value="support" <%= filters.role === 'support' ? 'selected' : '' %>>Support</option>
                        </select>
                    </div>
                    
                    <div class="filter-group">
                        <label for="country">Country</label>
                        <select id="country" name="country">
                            <option value="all">All Countries</option>
                            <% countries.forEach(country => { %>
                                <option value="<%= country %>" <%= filters.country === country ? 'selected' : '' %>>
                                    <%= country %>
                                </option>
                            <% }); %>
                        </select>
                    </div>
                    
                    <div class="filter-group">
                        <label for="sortBy">Sort By</label>
                        <select id="sortBy" name="sortBy">
                            <option value="createdAt" <%= filters.sortBy === 'createdAt' ? 'selected' : '' %>>Registration Date</option>
                            <option value="firstName" <%= filters.sortBy === 'firstName' ? 'selected' : '' %>>Name</option>
                            <option value="email" <%= filters.sortBy === 'email' ? 'selected' : '' %>>Email</option>
                            <option value="updatedAt" <%= filters.sortBy === 'updatedAt' ? 'selected' : '' %>>Last Activity</option>
                        </select>
                    </div>
                    
                    <button type="submit" class="btn-filter">
                        <i class="fas fa-filter"></i> Apply
                    </button>
                    
                    <a href="/admin-users-manage" class="btn-reset">
                        <i class="fas fa-redo"></i> Reset
                    </a>
                    
                    <button type="button" class="btn-export" onclick="exportUsers()">
                        <i class="fas fa-download"></i> Export
                    </button>
                </div>
            </form>
        </div>

        <!-- Table Section -->
        <div class="table-section">
            <div class="table-responsive">
                <table class="user-table">
                    <thead>
                        <tr>
                            <th>User</th>
                            <th>Contact</th>
                            <th>Location</th>
                            <th>Role</th>
                            <th>Courses</th>
                            <th>Total Spent</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% users.forEach(user => { %>
                        <tr data-user-id="<%= user._id %>">
                            <td>
                                <div class="user-cell">
                                    <div class="user-avatar">
                                        <%= user.firstName[0] %><%= user.lastName[0] %>
                                    </div>
                                    <div class="user-info">
                                        <div class="user-name"><%= user.fullName %></div>
                                        <div class="user-email"><%= user.email %></div>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div>
                                    <% if (user.phoneNumber) { %>
                                        <div><i class="fas fa-phone"></i> <%= user.phoneNumber %></div>
                                    <% } %>
                                    <div style="font-size: 0.85rem; color: #6b7280;">
                                        Joined: <%= new Date(user.createdAt).toLocaleDateString() %>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="location-cell">
                                    <i class="fas fa-map-marker-alt"></i>
                                    <%= user.location %>
                                </div>
                            </td>
                            <td>
                                <span class="role-badge <%= user.role %>">
                                    <%= user.role.charAt(0).toUpperCase() + user.role.slice(1) %>
                                </span>
                            </td>
                            <td>
                                <div class="course-info">
                                    <span class="course-count"><%= user.enrolledCourses %> Courses</span>
                                    <% if (user.enrolledCourses > 0) { %>
                                        <span class="course-types">Various Types</span>
                                    <% } %>
                                </div>
                            </td>
                            <td>
                                <span class="spent-amount">€<%= user.totalSpent %></span>
                            </td>
                            <td>
                                <% if (user.isConfirmed) { %>
                                    <% if (user.accountStatus?.isLocked) { %>
                                        <span class="status-badge locked">
                                            <span class="status-indicator locked"></span>
                                            Locked
                                        </span>
                                    <% } else { %>
                                        <span class="status-badge confirmed">
                                            <span class="status-indicator confirmed"></span>
                                            Confirmed
                                        </span>
                                    <% } %>
                                <% } else { %>
                                    <span class="status-badge pending">
                                        <span class="status-indicator pending"></span>
                                        Pending
                                    </span>
                                <% } %>
                            </td>
                            <td>
                                <div class="action-buttons">
                                    <button class="btn-action details" 
                                            onclick="viewDetails('<%= user._id %>')"
                                            title="View Details">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    
                                    <% if (!user.isConfirmed) { %>
                                        <button class="btn-action approve" 
                                                onclick="approveUser('<%= user._id %>')"
                                                title="Approve User">
                                            <i class="fas fa-check"></i>
                                        </button>
                                        
                                        <button class="btn-action reject" 
                                                onclick="rejectUser('<%= user._id %>')"
                                                title="Reject User">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    <% } %>
                                    
                                    <button class="btn-action delete" 
                                            onclick="deleteUser('<%= user._id %>')"
                                            title="Delete User">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Pagination -->
        <div class="pagination-section">
            <div class="pagination-info">
                Showing <%= ((pagination.currentPage - 1) * pagination.limit) + 1 %> to 
                <%= Math.min(pagination.currentPage * pagination.limit, pagination.totalUsers) %> 
                of <%= pagination.totalUsers %> users
            </div>
            
            <div class="pagination-controls">
                <button class="page-btn" 
                        onclick="changePage(1)"
                        <%= pagination.currentPage === 1 ? 'disabled' : '' %>>
                    <i class="fas fa-angle-double-left"></i>
                </button>
                
                <button class="page-btn" 
                        onclick="changePage(<%= pagination.currentPage - 1 %>)"
                        <%= !pagination.hasPrev ? 'disabled' : '' %>>
                    <i class="fas fa-angle-left"></i>
                </button>
                
                <% for(let i = Math.max(1, pagination.currentPage - 2); i <= Math.min(pagination.totalPages, pagination.currentPage + 2); i++) { %>
                    <button class="page-btn <%= i === pagination.currentPage ? 'active' : '' %>" 
                            onclick="changePage(<%= i %>)">
                        <%= i %>
                    </button>
                <% } %>
                
                <button class="page-btn" 
                        onclick="changePage(<%= pagination.currentPage + 1 %>)"
                        <%= !pagination.hasNext ? 'disabled' : '' %>>
                    <i class="fas fa-angle-right"></i>
                </button>
                
                <button class="page-btn" 
                        onclick="changePage(<%= pagination.totalPages %>)"
                        <%= pagination.currentPage === pagination.totalPages ? 'disabled' : '' %>>
                    <i class="fas fa-angle-double-right"></i>
                </button>
            </div>
        </div>
    </div>

    <!-- Loading Overlay -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-spinner"></div>
    </div>

    <%- include('partials/footer') %>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        // View User Details
        function viewDetails(userId) {
            window.location.href = `/admin-users/${userId}/details`;
        }

        // Change Page
        function changePage(page) {
            const urlParams = new URLSearchParams(window.location.search);
            urlParams.set('page', page);
            window.location.search = urlParams.toString();
        }

        // Approve User
        async function approveUser(userId) {
            const result = await Swal.fire({
                title: 'Approve User',
                text: 'Are you sure you want to approve this user?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#10b981',
                cancelButtonColor: '#6b7280',
                confirmButtonText: 'Yes, approve'
            });

            if (result.isConfirmed) {
                showLoading();
                try {
                    const response = await fetch('/admin-users/approve', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ userId })
                    });

                    const data = await response.json();
                    
                    if (data.success) {
                        await Swal.fire('Approved!', data.message, 'success');
                        location.reload();
                    } else {
                        throw new Error(data.message);
                    }
                } catch (error) {
                    Swal.fire('Error', error.message || 'Failed to approve user', 'error');
                } finally {
                    hideLoading();
                }
            }
        }

        // Reject User
        async function rejectUser(userId) {
            const { value: reason } = await Swal.fire({
                title: 'Reject User',
                input: 'textarea',
                inputLabel: 'Rejection reason (optional)',
                inputPlaceholder: 'Enter the reason for rejection...',
                showCancelButton: true,
                confirmButtonColor: '#ef4444',
                confirmButtonText: 'Reject'
            });

            if (reason !== undefined) {
                showLoading();
                try {
                    const response = await fetch('/admin-users/reject', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ userId, reason })
                    });

                    const data = await response.json();
                    
                    if (data.success) {
                        await Swal.fire('Rejected!', data.message, 'success');
                        location.reload();
                    } else {
                        throw new Error(data.message);
                    }
                } catch (error) {
                    Swal.fire('Error', error.message || 'Failed to reject user', 'error');
                } finally {
                    hideLoading();
                }
            }
        }

        // Delete User
        async function deleteUser(userId) {
            const result = await Swal.fire({
                title: 'Delete User',
                text: 'This will move the user to the recycle bin. Are you sure?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#ef4444',
                cancelButtonColor: '#6b7280',
                confirmButtonText: 'Yes, delete'
            });

            if (result.isConfirmed) {
                showLoading();
                try {
                    const response = await fetch(`/admin-users/${userId}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ reason: 'Manual deletion by admin' })
                    });

                    const data = await response.json();
                    
                    if (data.success) {
                        await Swal.fire('Deleted!', data.message, 'success');
                        location.reload();
                    } else {
                        throw new Error(data.message);
                    }
                } catch (error) {
                    Swal.fire('Error', error.message || 'Failed to delete user', 'error');
                } finally {
                    hideLoading();
                }
            }
        }

        // Export Users
        function exportUsers() {
            Swal.fire({
                title: 'Export Users',
                text: 'Select export format',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Excel',
                cancelButtonText: 'CSV',
                showDenyButton: true,
                denyButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '/admin/users/export?format=excel';
                } else if (result.dismiss === Swal.DismissReason.cancel) {
                    window.location.href = '/admin/users/export?format=csv';
                }
            });
        }

        // Show/Hide Loading
        function showLoading() {
            document.getElementById('loadingOverlay').classList.add('active');
        }

        function hideLoading() {
            document.getElementById('loadingOverlay').classList.remove('active');
        }

        // Initialize tooltips
        document.addEventListener('DOMContentLoaded', function() {
            // Add any additional initialization here
        });
    </script>
    <%- include('partials/footer') %>
</body>
</html>