<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Payment Analytics - IAAI Admin</title>
    <link rel="stylesheet" href="/css/admin.css">
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Montserrat', sans-serif;
            background: #f8f9fa;
            color: #333;
        }

        .analytics-header {
            background: linear-gradient(135deg, #28a745, #20c997);
            color: white;
            padding: 40px 0;
            margin-bottom: 40px;
            box-shadow: 0 5px 20px rgba(40, 167, 69, 0.2);
        }

        .analytics-header h1 {
            font-size: 2.5rem;
            margin: 0;
            text-align: center;
            font-weight: 700;
        }

        .analytics-header p {
            text-align: center;
            margin-top: 10px;
            opacity: 0.9;
            font-size: 1.1rem;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 20px;
        }

        /* Back Button */
        .back-btn {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            background: white;
            color: #333;
            padding: 10px 20px;
            border-radius: 8px;
            text-decoration: none;
            margin-bottom: 20px;
            transition: all 0.3s ease;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .back-btn:hover {
            background: #f8f9fa;
            transform: translateX(-5px);
            text-decoration: none;
            color: #333;
        }

        /* Revenue Cards */
        .revenue-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 40px;
        }

        .revenue-card {
            background: white;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            text-align: center;
            transition: transform 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .revenue-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }

        .revenue-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 5px;
            height: 100%;
            background: currentColor;
        }

        .revenue-icon {
            font-size: 3rem;
            margin-bottom: 15px;
            opacity: 0.8;
        }

        .revenue-card.today::before { background-color: #007bff; }
        .revenue-card.today .revenue-icon { color: #007bff; }

        .revenue-card.week::before { background-color: #28a745; }
        .revenue-card.week .revenue-icon { color: #28a745; }

        .revenue-card.month::before { background-color: #ffc107; }
        .revenue-card.month .revenue-icon { color: #ffc107; }

        .revenue-card.year::before { background-color: #dc3545; }
        .revenue-card.year .revenue-icon { color: #dc3545; }

        .revenue-card.total::before { background-color: #6f42c1; }
        .revenue-card.total .revenue-icon { color: #6f42c1; }

        .revenue-amount {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 10px;
            color: #333;
        }

        .revenue-label {
            color: #666;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .revenue-trend {
            font-size: 0.8rem;
            margin-top: 10px;
            color: #666;
        }

        .trend-up { color: #28a745; }
        .trend-down { color: #dc3545; }

        /* Filter Section */
        .filter-section {
            background: white;
            padding: 25px;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }

        .filter-section h3 {
            margin-bottom: 20px;
            color: #333;
            font-size: 1.2rem;
        }

        .filter-row {
            display: flex;
            gap: 15px;
            align-items: end;
            flex-wrap: wrap;
        }

        .filter-group {
            flex: 1;
            min-width: 200px;
        }

        .filter-group label {
            display: block;
            margin-bottom: 8px;
            color: #666;
            font-weight: 500;
        }

        .filter-group input,
        .filter-group select {
            width: 100%;
            padding: 10px 15px;
            border: 1px solid #ddd;
            border-radius: 8px;
            font-size: 14px;
            transition: border-color 0.3s;
        }

        .filter-group input:focus,
        .filter-group select:focus {
            outline: none;
            border-color: #007bff;
        }

        /* Chart Containers */
        .chart-container {
            background: white;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }

        .chart-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .chart-title {
            font-size: 1.3rem;
            font-weight: 600;
            color: #333;
        }

        .chart-actions {
            display: flex;
            gap: 10px;
        }

        /* Analytics Grid */
        .analytics-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
            gap: 30px;
            margin-bottom: 40px;
        }

        /* Data Tables */
        .data-table {
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }

        .data-table h3 {
            margin-bottom: 20px;
            color: #333;
            font-size: 1.2rem;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .data-table table {
            width: 100%;
            border-collapse: collapse;
        }

        .data-table th {
            background: #f8f9fa;
            padding: 12px;
            text-align: left;
            font-weight: 600;
            color: #666;
            border-bottom: 2px solid #e9ecef;
            cursor: pointer;
            user-select: none;
            white-space: nowrap;
        }

        .data-table th:hover {
            background: #e9ecef;
        }

        .data-table th i {
            margin-left: 5px;
            font-size: 0.8rem;
            opacity: 0.5;
        }

        .data-table td {
            padding: 12px;
            border-bottom: 1px solid #f0f0f0;
        }

        .data-table tr:hover {
            background: #f8f9fa;
        }

        /* Course Pills */
        .course-pill {
            display: inline-block;
            padding: 4px 10px;
            border-radius: 12px;
            font-size: 0.75rem;
            font-weight: 500;
            white-space: nowrap;
        }

        .course-pill.in-person {
            background: #e3f2fd;
            color: #1976d2;
        }

        .course-pill.online-live {
            background: #f3e5f5;
            color: #7b1fa2;
        }

        .course-pill.self-paced {
            background: #e8f5e9;
            color: #388e3c;
        }

        /* Payment Type Badges */
        .payment-badge {
            padding: 4px 10px;
            border-radius: 12px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
        }

        .payment-badge.early-bird {
            background: #ffc107;
            color: #856404;
        }

        .payment-badge.promo {
            background: #e3f2fd;
            color: #1976d2;
        }

        .payment-badge.full-price {
            background: #d4edda;
            color: #155724;
        }

        /* Export Controls */
        .export-controls {
            background: white;
            padding: 25px;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }

        .export-controls h3 {
            margin-bottom: 20px;
            color: #333;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .export-form {
            display: flex;
            gap: 15px;
            align-items: end;
            flex-wrap: wrap;
        }

        .form-group {
            flex: 1;
            min-width: 200px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #666;
            font-weight: 500;
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 10px 15px;
            border: 1px solid #ddd;
            border-radius: 8px;
            font-size: 14px;
        }

        /* Buttons */
        .btn {
            padding: 10px 24px;
            border: none;
            border-radius: 8px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            text-decoration: none;
        }

        .btn-sm {
            padding: 6px 12px;
            font-size: 12px;
        }

        .btn-primary {
            background: #007bff;
            color: white;
        }

        .btn-primary:hover {
            background: #0056b3;
            color: white;
        }

        .btn-success {
            background: #28a745;
            color: white;
        }

        .btn-success:hover {
            background: #218838;
            color: white;
        }

        .btn-secondary {
            background: #6c757d;
            color: white;
        }

        .btn-secondary:hover {
            background: #5a6268;
            color: white;
        }

        .btn-info {
            background: #17a2b8;
            color: white;
        }

        .btn-info:hover {
            background: #138496;
            color: white;
        }

        /* Advanced Analytics Section */
        .advanced-analytics {
            background: white;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }

        .advanced-analytics h3 {
            margin-bottom: 20px;
            color: #333;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .metrics-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .metric-card {
            text-align: center;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 10px;
            border: 1px solid #e9ecef;
            transition: all 0.3s ease;
        }

        .metric-card:hover {
            background: white;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            transform: translateY(-2px);
        }

        .metric-value {
            font-size: 2rem;
            font-weight: 700;
            color: #007bff;
            margin-bottom: 5px;
        }

        .metric-label {
            font-size: 0.9rem;
            color: #666;
        }

        /* Transaction Details Modal Styles */
        .transaction-details {
            max-height: 400px;
            overflow-y: auto;
        }

        .detail-row {
            display: flex;
            justify-content: space-between;
            padding: 10px 0;
            border-bottom: 1px solid #eee;
        }

        .detail-label {
            font-weight: 600;
            color: #666;
        }

        /* Loading Animation */
        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid #f3f3f3;
            border-top: 3px solid #007bff;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-left: 10px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Responsive */
        @media (max-width: 768px) {
            .analytics-grid {
                grid-template-columns: 1fr;
            }

            .export-form {
                flex-direction: column;
            }

            .form-group {
                width: 100%;
            }

            .revenue-cards {
                grid-template-columns: 1fr;
            }

            .filter-row {
                flex-direction: column;
            }

            .data-table {
                overflow-x: auto;
            }

            .data-table table {
                min-width: 600px;
            }
        }
    </style>
</head>

<%- include('partials/header') %>

<body>
    <div class="analytics-header">
        <h1><i class="fas fa-chart-line"></i> Payment Analytics Dashboard</h1>
        <p>Comprehensive financial insights and revenue analysis</p>
    </div>

    <div class="container">
        <!-- Back Button -->
        <a href="/dashboard" class="back-btn">
            <i class="fas fa-arrow-left"></i> Back to Dashboard
        </a>

        <!-- Filter Section -->
        <div class="filter-section">
            <h3><i class="fas fa-filter"></i> Filter Analytics</h3>
            <div class="filter-row">
                <div class="filter-group">
                    <label>Date Range</label>
                    <select id="dateRangeFilter" onchange="applyDateFilter()">
                        <option value="all">All Time</option>
                        <option value="today">Today</option>
                        <option value="week">This Week</option>
                        <option value="month">This Month</option>
                        <option value="quarter">This Quarter</option>
                        <option value="year">This Year</option>
                        <option value="custom">Custom Range</option>
                    </select>
                </div>
                <div class="filter-group" id="customStartDateGroup" style="display: none;">
                    <label>Start Date</label>
                    <input type="date" id="customStartDate">
                </div>
                <div class="filter-group" id="customEndDateGroup" style="display: none;">
                    <label>End Date</label>
                    <input type="date" id="customEndDate">
                </div>
                <div class="filter-group">
                    <label>Course Type</label>
                    <select id="courseTypeFilter" onchange="applyFilters()">
                        <option value="all">All Types</option>
                        <option value="In-Person">In-Person</option>
                        <option value="Online Live">Online Live</option>
                        <option value="Self-Paced">Self-Paced</option>
                    </select>
                </div>
                <div class="filter-group">
                    <label>Payment Type</label>
                    <select id="paymentTypeFilter" onchange="applyFilters()">
                        <option value="all">All Payments</option>
                        <option value="early-bird">Early Bird</option>
                        <option value="promo">Promo Code</option>
                        <option value="full-price">Full Price</option>
                    </select>
                </div>
                <button class="btn btn-primary" onclick="applyFilters()">
                    <i class="fas fa-sync"></i> Apply Filters
                </button>
            </div>
        </div>

        <!-- Revenue Overview Cards -->
        <div class="revenue-cards">
            <div class="revenue-card today">
                <i class="fas fa-calendar-day revenue-icon"></i>
                <div class="revenue-amount">$<%= revenueAnalytics.today.toFixed(2) %></div>
                <div class="revenue-label">Today's Revenue</div>
            </div>
            <div class="revenue-card week">
                <i class="fas fa-calendar-week revenue-icon"></i>
                <div class="revenue-amount">$<%= revenueAnalytics.thisWeek.toFixed(2) %></div>
                <div class="revenue-label">This Week</div>
            </div>
            <div class="revenue-card month">
                <i class="fas fa-calendar-alt revenue-icon"></i>
                <div class="revenue-amount">$<%= revenueAnalytics.thisMonth.toFixed(2) %></div>
                <div class="revenue-label">This Month</div>
            </div>
            <div class="revenue-card year">
                <i class="fas fa-calendar revenue-icon"></i>
                <div class="revenue-amount">$<%= revenueAnalytics.thisYear.toFixed(2) %></div>
                <div class="revenue-label">This Year</div>
            </div>
            <div class="revenue-card total">
                <i class="fas fa-dollar-sign revenue-icon"></i>
                <div class="revenue-amount">$<%= revenueAnalytics.total.toFixed(2) %></div>
                <div class="revenue-label">Total Revenue</div>
            </div>
        </div>

        <!-- Advanced Analytics -->
        <div class="advanced-analytics" id="earlybird">
            <h3><i class="fas fa-chart-pie"></i> Advanced Metrics</h3>
            <div class="metrics-grid">
                <div class="metric-card">
                    <div class="metric-value">$<%= (revenueAnalytics.total / (topPayingUsers.length || 1)).toFixed(2) %></div>
                    <div class="metric-label">Average Revenue per User</div>
                </div>
                <div class="metric-card">
                    <div class="metric-value"><%= Object.keys(promoCodeAnalytics).length %></div>
                    <div class="metric-label">Active Promo Codes</div>
                </div>
                <div class="metric-card">
                    <div class="metric-value">$<%= Object.values(promoCodeAnalytics).reduce((sum, p) => sum + p.discountGiven, 0).toFixed(2) %></div>
                    <div class="metric-label">Total Discounts Given</div>
                </div>
                <div class="metric-card">
                    <div class="metric-value"><%= conversionAnalytics ? conversionAnalytics.registrationToPayment : '0' %>%</div>
                    <div class="metric-label">Conversion Rate</div>
                </div>
                <div class="metric-card">
                    <div class="metric-value">$<%= earlyBirdAnalytics ? earlyBirdAnalytics.totalRevenue.toFixed(2) : '0' %></div>
                    <div class="metric-label">Early Bird Revenue</div>
                </div>
                <div class="metric-card">
                    <div class="metric-value"><%= conversionAnalytics ? conversionAnalytics.repeatPurchaseRate : '0' %>%</div>
                    <div class="metric-label">Repeat Purchase Rate</div>
                </div>
            </div>
        </div>

        <!-- Monthly Revenue Chart -->
        <div class="chart-container">
            <div class="chart-header">
                <h3 class="chart-title">Monthly Revenue Trend</h3>
                <div class="chart-actions">
                    <button class="btn btn-secondary btn-sm" onclick="changeChartType('line')">
                        <i class="fas fa-chart-line"></i>
                    </button>
                    <button class="btn btn-secondary btn-sm" onclick="changeChartType('bar')">
                        <i class="fas fa-chart-bar"></i>
                    </button>
                </div>
            </div>
            <canvas id="monthlyRevenueChart" height="100"></canvas>
        </div>

        <div class="analytics-grid">
            <!-- Course Type Revenue -->
            <div class="chart-container">
                <div class="chart-header">
                    <h3 class="chart-title">Revenue by Course Type</h3>
                </div>
                <canvas id="courseTypeChart" height="200"></canvas>
            </div>

            <!-- Payment Method Distribution -->
            <div class="chart-container">
                <div class="chart-header">
                    <h3 class="chart-title">Payment Methods</h3>
                </div>
                <canvas id="paymentMethodChart" height="200"></canvas>
            </div>
        </div>

        <!-- Payment Type Breakdown -->
        <div class="data-table">
            <h3><i class="fas fa-money-check-alt"></i> Payment Type Breakdown</h3>
            <table>
                <thead>
                    <tr>
                        <th>Payment Type</th>
                        <th>Number of Transactions</th>
                        <th>Total Revenue</th>
                        <th>Percentage of Total</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (paymentTypeBreakdown) { %>
                        <tr>
                            <td><span class="payment-badge early-bird">Early Bird</span></td>
                            <td><%= paymentTypeBreakdown.earlyBird.count %></td>
                            <td style="font-weight: 600;">$<%= paymentTypeBreakdown.earlyBird.revenue.toFixed(2) %></td>
                            <td><%= ((paymentTypeBreakdown.earlyBird.revenue / revenueAnalytics.total) * 100).toFixed(1) %>%</td>
                        </tr>
                        <tr>
                            <td><span class="payment-badge promo">Promo Code</span></td>
                            <td><%= paymentTypeBreakdown.promo.count %></td>
                            <td style="font-weight: 600;">$<%= paymentTypeBreakdown.promo.revenue.toFixed(2) %></td>
                            <td><%= ((paymentTypeBreakdown.promo.revenue / revenueAnalytics.total) * 100).toFixed(1) %>%</td>
                        </tr>
                        <tr>
                            <td><span class="payment-badge full-price">Full Price</span></td>
                            <td><%= paymentTypeBreakdown.fullPrice.count %></td>
                            <td style="font-weight: 600;">$<%= paymentTypeBreakdown.fullPrice.revenue.toFixed(2) %></td>
                            <td><%= ((paymentTypeBreakdown.fullPrice.revenue / revenueAnalytics.total) * 100).toFixed(1) %>%</td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>

        <!-- Export Controls -->
        <div class="export-controls" id="export">
            <h3><i class="fas fa-download"></i> Export Financial Report</h3>
            <form class="export-form" onsubmit="exportReport(event)">
                <div class="form-group">
                    <label>Start Date</label>
                    <input type="date" id="exportStartDate" name="startDate">
                </div>
                <div class="form-group">
                    <label>End Date</label>
                    <input type="date" id="exportEndDate" name="endDate">
                </div>
                <div class="form-group">
                    <label>Format</label>
                    <select id="exportFormat" name="format">
                        <option value="csv">CSV (Excel Compatible)</option>
                        <option value="excel">Excel (.xlsx)</option>
                        <option value="pdf">PDF Report</option>
                        <option value="json">JSON (Raw Data)</option>
                    </select>
                </div>
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-download"></i> Export Report
                </button>
            </form>
        </div>

        <!-- Top Paying Users -->
        <div class="data-table">
            <h3><i class="fas fa-trophy"></i> Top Paying Users</h3>
            <table id="topUsersTable">
                <thead>
                    <tr>
                        <th onclick="sortTable('topUsersTable', 0)">Rank <i class="fas fa-sort"></i></th>
                        <th onclick="sortTable('topUsersTable', 1)">Name <i class="fas fa-sort"></i></th>
                        <th onclick="sortTable('topUsersTable', 2)">Email <i class="fas fa-sort"></i></th>
                        <th onclick="sortTable('topUsersTable', 3)">Total Spent <i class="fas fa-sort"></i></th>
                        <th onclick="sortTable('topUsersTable', 4)">Transactions <i class="fas fa-sort"></i></th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% topPayingUsers.forEach((user, index) => { %>
                    <tr>
                        <td>#<%= index + 1 %></td>
                        <td><%= user.firstName %> <%= user.lastName %></td>
                        <td><%= user.email %></td>
                        <td style="font-weight: 600; color: #28a745;">$<%= user.totalSpent.toFixed(2) %></td>
                        <td><%= user.transactionCount || 0 %></td>
                        <td>
                            <button class="btn btn-sm btn-info" onclick="viewUserDetails('<%= user._id %>')">
                                <i class="fas fa-eye"></i> View
                            </button>
                        </td>
                    </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>

        <div class="analytics-grid">
            <!-- Most Popular Courses -->
            <div class="data-table">
                <h3><i class="fas fa-star"></i> Most Popular Courses by Revenue</h3>
                <table id="popularCoursesTable">
                    <thead>
                        <tr>
                            <th onclick="sortTable('popularCoursesTable', 0)">Course <i class="fas fa-sort"></i></th>
                            <th onclick="sortTable('popularCoursesTable', 1)">Type <i class="fas fa-sort"></i></th>
                            <th onclick="sortTable('popularCoursesTable', 2)">Enrollments <i class="fas fa-sort"></i></th>
                            <th onclick="sortTable('popularCoursesTable', 3)">Revenue <i class="fas fa-sort"></i></th>
                        </tr>
                    </thead>
                    <tbody>
                        <% popularCourses.forEach(course => { %>
                        <tr>
                            <td>
                                <strong><%= course.courseTitle %></strong><br>
                                <small style="color: #666;"><%= course.courseCode %></small>
                            </td>
                            <td>
                                <span class="course-pill <%= course.courseType.toLowerCase().replace(' ', '-') %>">
                                    <%= course.courseType %>
                                </span>
                            </td>
                            <td>
                                <%= course.enrollments %>
                                <% if (course.earlyBirdEnrollments > 0) { %>
                                    <br><small style="color: #ffc107;">Early Bird: <%= course.earlyBirdEnrollments %></small>
                                <% } %>
                            </td>
                            <td style="font-weight: 600; color: #28a745;">
                                $<%= course.revenue.toFixed(2) %>
                                <br><small style="color: #666;">Avg: $<%= course.averagePrice %></small>
                            </td>
                        </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>

            <!-- Promo Code Analytics -->
            <div class="data-table" id="promo">
                <h3><i class="fas fa-tag"></i> Promo Code Usage</h3>
                <table id="promoCodeTable">
                    <thead>
                        <tr>
                            <th onclick="sortTable('promoCodeTable', 0)">Code <i class="fas fa-sort"></i></th>
                            <th onclick="sortTable('promoCodeTable', 1)">Uses <i class="fas fa-sort"></i></th>
                            <th onclick="sortTable('promoCodeTable', 2)">Discount % <i class="fas fa-sort"></i></th>
                            <th onclick="sortTable('promoCodeTable', 3)">Discount Given <i class="fas fa-sort"></i></th>
                            <th onclick="sortTable('promoCodeTable', 4)">Revenue <i class="fas fa-sort"></i></th>
                        </tr>
                    </thead>
                    <tbody>
                        <% Object.entries(promoCodeAnalytics).forEach(([code, data]) => { %>
                        <tr>
                            <td><strong><%= code %></strong></td>
                            <td><%= data.uses %></td>
                            <td><%= data.discountPercentage || 'N/A' %>%</td>
                            <td style="color: #dc3545;">-$<%= data.discountGiven.toFixed(2) %></td>
                            <td style="color: #28a745;">$<%= data.revenue.toFixed(2) %></td>
                        </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Early Bird Analytics -->
        <% if (earlyBirdAnalytics && earlyBirdAnalytics.courseBreakdown) { %>
        <div class="data-table">
            <h3><i class="fas fa-clock"></i> Early Bird Analytics by Course</h3>
            <table>
                <thead>
                    <tr>
                        <th>Course</th>
                        <th>Early Bird Sales</th>
                        <th>Revenue</th>
                        <th>Discounts Given</th>
                    </tr>
                </thead>
                <tbody>
                    <% Object.entries(earlyBirdAnalytics.courseBreakdown).forEach(([code, data]) => { %>
                    <tr>
                        <td>
                            <strong><%= data.title %></strong><br>
                            <small style="color: #666;"><%= code %></small>
                        </td>
                        <td><%= data.count %></td>
                        <td style="font-weight: 600; color: #28a745;">$<%= data.revenue.toFixed(2) %></td>
                        <td style="color: #dc3545;">-$<%= (earlyBirdAnalytics.totalDiscounts / earlyBirdAnalytics.totalUsers * data.count).toFixed(2) %></td>
                    </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>
        <% } %>
    </div>

    <script>
        // Chart instances
        let monthlyRevenueChart;
        let courseTypeChart;
        let paymentMethodChart;

        // Handle hash navigation on page load
        document.addEventListener('DOMContentLoaded', function() {
            initializeCharts();
            
            // Scroll to section if hash is present
            if (window.location.hash) {
                const element = document.querySelector(window.location.hash);
                if (element) {
                    setTimeout(() => {
                        element.scrollIntoView({ behavior: 'smooth', block: 'start' });
                        // Highlight the section briefly
                        element.style.boxShadow = '0 0 20px rgba(0,123,255,0.5)';
                        setTimeout(() => {
                            element.style.boxShadow = '';
                        }, 2000);
                    }, 500);
                }
            }
        });

        function initializeCharts() {
            // Monthly Revenue Chart
            const monthlyCtx = document.getElementById('monthlyRevenueChart').getContext('2d');
            monthlyRevenueChart = new Chart(monthlyCtx, {
                type: 'line',
                data: {
                    labels: <%= JSON.stringify(Object.keys(monthlyRevenue)) %>,
                    datasets: [{
                        label: 'Revenue',
                        data: <%= JSON.stringify(Object.values(monthlyRevenue)) %>,
                        borderColor: '#28a745',
                        backgroundColor: 'rgba(40, 167, 69, 0.1)',
                        tension: 0.4,
                        fill: true,
                        pointRadius: 6,
                        pointHoverRadius: 8,
                        pointBackgroundColor: '#28a745',
                        pointBorderColor: '#fff',
                        pointBorderWidth: 2
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return 'Revenue: $' + context.parsed.y.toFixed(2);
                                }
                            }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function(value) {
                                    return '$' + value.toLocaleString();
                                }
                            }
                        }
                    }
                }
            });

            // Course Type Chart
            const courseTypeCtx = document.getElementById('courseTypeChart').getContext('2d');
            const courseTypeData = <%= JSON.stringify(courseTypeAnalytics) %>;
            
            courseTypeChart = new Chart(courseTypeCtx, {
                type: 'doughnut',
                data: {
                    labels: Object.keys(courseTypeData),
                    datasets: [{
                        data: Object.values(courseTypeData).map(c => c.revenue),
                        backgroundColor: ['#007bff', '#28a745', '#ffc107'],
                        borderWidth: 2,
                        borderColor: '#fff'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    const label = context.label || '';
                                    const value = '$' + context.parsed.toFixed(2);
                                    const count = courseTypeData[label].count;
                                    return [`${label}: ${value}`, `Enrollments: ${count}`];
                                }
                            }
                        }
                    }
                }
            });

            // Payment Method Chart
            const paymentMethodCtx = document.getElementById('paymentMethodChart').getContext('2d');
            const paymentMethodData = <%= JSON.stringify(paymentMethodAnalytics) %>;
            
            paymentMethodChart = new Chart(paymentMethodCtx, {
                type: 'bar',
                data: {
                    labels: Object.keys(paymentMethodData),
                    datasets: [{
                        label: 'Revenue',
                        data: Object.values(paymentMethodData).map(p => p.revenue),
                        backgroundColor: '#007bff',
                        borderRadius: 5
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    const method = context.label;
                                    const revenue = '$' + context.parsed.y.toFixed(2);
                                    const count = paymentMethodData[method].count;
                                    return [`Revenue: ${revenue}`, `Transactions: ${count}`];
                                }
                            }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function(value) {
                                    return '$' + value.toLocaleString();
                                }
                            }
                        }
                    }
                }
            });
        }

        // Change chart type
        function changeChartType(type) {
            monthlyRevenueChart.config.type = type;
            monthlyRevenueChart.update();
        }

        // Date filter functionality
        function applyDateFilter() {
            const filterValue = document.getElementById('dateRangeFilter').value;
            const customStartGroup = document.getElementById('customStartDateGroup');
            const customEndGroup = document.getElementById('customEndDateGroup');
            
            if (filterValue === 'custom') {
                customStartGroup.style.display = 'block';
                customEndGroup.style.display = 'block';
            } else {
                customStartGroup.style.display = 'none';
                customEndGroup.style.display = 'none';
                // Apply filter logic here
                applyFilters();
            }
        }

        // Apply all filters
        async function applyFilters() {
            const dateRange = document.getElementById('dateRangeFilter').value;
            const courseType = document.getElementById('courseTypeFilter').value;
            const paymentType = document.getElementById('paymentTypeFilter').value;
            
            // Show loading state
            Swal.fire({
                title: 'Applying Filters',
                html: 'Updating analytics data...',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            try {
                // Build query parameters
                const params = new URLSearchParams({
                    dateRange,
                    courseType,
                    paymentType
                });

                if (dateRange === 'custom') {
                    params.append('startDate', document.getElementById('customStartDate').value);
                    params.append('endDate', document.getElementById('customEndDate').value);
                }

                // Make API call to get filtered data
                const response = await fetch(`/admin/api/filtered-analytics?${params}`);
                const data = await response.json();

                // Update charts with new data
                // This is a placeholder - implement actual chart update logic
                
                Swal.fire({
                    icon: 'success',
                    title: 'Filters Applied',
                    text: 'Analytics data has been updated.',
                    timer: 2000
                });
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Failed to apply filters. Please try again.'
                });
            }
        }

        // Sort table functionality
        function sortTable(tableId, columnIndex) {
            const table = document.getElementById(tableId);
            const tbody = table.querySelector('tbody');
            const rows = Array.from(tbody.querySelectorAll('tr'));
            
            const isNumeric = columnIndex >= 2;
            const currentOrder = table.dataset.sortOrder || 'asc';
            const newOrder = currentOrder === 'asc' ? 'desc' : 'asc';
            
            rows.sort((a, b) => {
                let aVal = a.cells[columnIndex].textContent.trim();
                let bVal = b.cells[columnIndex].textContent.trim();
                
                if (isNumeric) {
                    aVal = parseFloat(aVal.replace(/[$,#%]/g, ''));
                    bVal = parseFloat(bVal.replace(/[$,#%]/g, ''));
                }
                
                if (newOrder === 'asc') {
                    return aVal > bVal ? 1 : -1;
                } else {
                    return aVal < bVal ? 1 : -1;
                }
            });
            
            tbody.innerHTML = '';
            rows.forEach(row => tbody.appendChild(row));
            table.dataset.sortOrder = newOrder;
        }

        // View user details
        function viewUserDetails(userId) {
            window.location.href = `/admin-users/${userId}`;
        }

        // Export report
        async function exportReport(event) {
            event.preventDefault();
            
            const startDate = document.getElementById('exportStartDate').value;
            const endDate = document.getElementById('exportEndDate').value;
            const format = document.getElementById('exportFormat').value;
            
            const params = new URLSearchParams({
                startDate,
                endDate,
                format
            });
            
            window.location.href = `/admin/financial-report?${params.toString()}`;
        }
    </script>

    <%- include('partials/footer') %>
</body>
</html>