<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Support Dashboard - Case Management</title>
  <link rel="stylesheet" href="/css/dashboard.css">
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Montserrat:wght@300;500;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <style>
    .support-workspace {
      padding: 20px;
      max-width: 1600px;
      margin: 0 auto;
      background: #f8f9fa;
      min-height: 100vh;
    }

    .support-header {
      background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
      color: white;
      padding: 25px 30px;
      border-radius: 10px;
      margin-bottom: 25px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .header-info h1 {
      margin: 0 0 5px 0;
      font-size: 2rem;
    }

    .header-info p {
      margin: 0;
      opacity: 0.9;
    }

    .header-stats {
      display: flex;
      gap: 30px;
      text-align: center;
    }

    .header-stat {
      background: rgba(255, 255, 255, 0.2);
      padding: 15px 20px;
      border-radius: 8px;
      backdrop-filter: blur(10px);
    }

    .header-stat-value {
      font-size: 1.8rem;
      font-weight: bold;
      margin-bottom: 5px;
    }

    .header-stat-label {
      font-size: 0.9rem;
      opacity: 0.9;
    }

    .workspace-layout {
      display: grid;
      grid-template-columns: 300px 1fr;
      gap: 25px;
      height: calc(100vh - 200px);
    }

    .sidebar {
      background: white;
      border-radius: 10px;
      padding: 20px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      overflow-y: auto;
    }

    .sidebar-section {
      margin-bottom: 25px;
    }

    .sidebar-title {
      font-size: 1.1rem;
      font-weight: 600;
      color: #333;
      margin-bottom: 15px;
      padding-bottom: 8px;
      border-bottom: 2px solid #e9ecef;
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .case-filter-btn {
      display: block;
      width: 100%;
      padding: 12px 15px;
      margin-bottom: 8px;
      background: #f8f9fa;
      border: 1px solid #e9ecef;
      border-radius: 6px;
      text-decoration: none;
      color: #495057;
      transition: all 0.3s ease;
      cursor: pointer;
      font-size: 0.9rem;
      text-align: left;
    }

    .case-filter-btn:hover {
      background: #e9ecef;
      text-decoration: none;
      color: #495057;
    }

    .case-filter-btn.active {
      background: #28a745;
      color: white;
      border-color: #28a745;
    }

    .case-count {
      float: right;
      background: #6c757d;
      color: white;
      padding: 2px 8px;
      border-radius: 10px;
      font-size: 0.8rem;
    }

    .case-filter-btn.active .case-count {
      background: rgba(255, 255, 255, 0.3);
    }

    .main-content {
      background: white;
      border-radius: 10px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      display: flex;
      flex-direction: column;
      overflow: hidden;
    }

    .content-header {
      padding: 20px 25px;
      border-bottom: 1px solid #e9ecef;
      display: flex;
      justify-content: between;
      align-items: center;
      background: #f8f9fa;
    }

    .content-title {
      font-size: 1.3rem;
      font-weight: 600;
      color: #333;
      margin: 0;
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .content-actions {
      display: flex;
      gap: 10px;
      margin-left: auto;
    }

    .btn {
      padding: 8px 16px;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      font-size: 0.9rem;
      font-weight: 500;
      text-decoration: none;
      display: inline-flex;
      align-items: center;
      gap: 6px;
      transition: all 0.3s ease;
    }

    .btn-primary {
      background: #007bff;
      color: white;
    }

    .btn-success {
      background: #28a745;
      color: white;
    }

    .btn-warning {
      background: #ffc107;
      color: #212529;
    }

    .btn-danger {
      background: #dc3545;
      color: white;
    }

    .btn-secondary {
      background: #6c757d;
      color: white;
    }

    .btn:hover {
      transform: translateY(-1px);
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
      text-decoration: none;
      color: inherit;
    }

    .cases-container {
      flex: 1;
      overflow-y: auto;
      padding: 0;
    }

    .case-list {
      list-style: none;
      padding: 0;
      margin: 0;
    }

    .case-item {
      border-bottom: 1px solid #e9ecef;
      padding: 20px 25px;
      cursor: pointer;
      transition: background-color 0.3s ease;
      position: relative;
    }

    .case-item:hover {
      background: #f8f9fa;
    }

    .case-item.active {
      background: #e7f3ff;
      border-left: 4px solid #007bff;
    }

    .case-header {
      display: flex;
      justify-content: space-between;
      align-items: flex-start;
      margin-bottom: 10px;
    }

    .case-title {
      font-weight: 600;
      color: #333;
      font-size: 1.1rem;
      margin: 0;
    }

    .case-id {
      font-size: 0.8rem;
      color: #6c757d;
      background: #f8f9fa;
      padding: 2px 8px;
      border-radius: 4px;
    }

    .case-details {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 15px;
      margin-bottom: 15px;
    }

    .case-detail {
      font-size: 0.9rem;
    }

    .case-detail-label {
      color: #6c757d;
      font-weight: 500;
      display: block;
      margin-bottom: 2px;
    }

    .case-detail-value {
      color: #333;
    }

    .case-status {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .status-badge {
      padding: 4px 12px;
      border-radius: 20px;
      font-size: 0.8rem;
      font-weight: 500;
      text-transform: uppercase;
    }

    .status-not-started {
      background: #e9ecef;
      color: #495057;
    }

    .status-under-contact {
      background: #fff3cd;
      color: #856404;
    }

    .status-interested {
      background: #d1ecf1;
      color: #0c5460;
    }

    .status-payment-pending {
      background: #f8d7da;
      color: #721c24;
    }

    .status-registered {
      background: #d4edda;
      color: #155724;
    }

    .priority-indicator {
      width: 8px;
      height: 8px;
      border-radius: 50%;
      display: inline-block;
      margin-right: 8px;
    }

    .priority-low { background: #28a745; }
    .priority-medium { background: #ffc107; }
    .priority-high { background: #fd7e14; }
    .priority-urgent { background: #dc3545; }

    .case-actions {
      display: flex;
      gap: 8px;
      margin-top: 15px;
    }

    .case-detail-panel {
      display: none;
      padding: 25px;
      border-left: 1px solid #e9ecef;
      background: #f8f9fa;
      overflow-y: auto;
      width: 400px;
      position: fixed;
      right: 0;
      top: 0;
      height: 100vh;
      z-index: 1000;
      box-shadow: -4px 0 6px rgba(0, 0, 0, 0.1);
    }

    .case-detail-panel.active {
      display: block;
    }

    .panel-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 25px;
      padding-bottom: 15px;
      border-bottom: 2px solid #e9ecef;
    }

    .panel-title {
      font-size: 1.2rem;
      font-weight: 600;
      margin: 0;
    }

    .close-panel {
      background: none;
      border: none;
      font-size: 1.5rem;
      cursor: pointer;
      color: #6c757d;
      padding: 5px;
    }

    .close-panel:hover {
      color: #333;
    }

    .detail-section {
      margin-bottom: 25px;
    }

    .detail-section-title {
      font-size: 1rem;
      font-weight: 600;
      color: #333;
      margin-bottom: 15px;
      padding-bottom: 8px;
      border-bottom: 1px solid #e9ecef;
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .detail-grid {
      display: grid;
      grid-template-columns: 1fr;
      gap: 12px;
    }

    .detail-item {
      display: flex;
      justify-content: space-between;
      padding: 8px 0;
      border-bottom: 1px solid #f1f3f4;
    }

    .detail-label {
      font-weight: 500;
      color: #6c757d;
      flex: 0 0 120px;
    }

    .detail-value {
      color: #333;
      flex: 1;
      text-align: right;
    }

    .form-group {
      margin-bottom: 20px;
    }

    .form-label {
      display: block;
      margin-bottom: 8px;
      font-weight: 500;
      color: #333;
    }

    .form-control {
      width: 100%;
      padding: 10px;
      border: 1px solid #ced4da;
      border-radius: 6px;
      font-size: 0.9rem;
    }

    .form-control:focus {
      outline: none;
      border-color: #007bff;
      box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
    }

    .textarea {
      resize: vertical;
      min-height: 80px;
    }

    .action-buttons {
      position: sticky;
      bottom: 0;
      background: white;
      padding: 20px 0;
      border-top: 1px solid #e9ecef;
      margin-top: 20px;
    }

    .loading {
      text-align: center;
      padding: 40px;
      color: #6c757d;
    }

    .loading i {
      font-size: 2rem;
      animation: spin 1s linear infinite;
      margin-bottom: 15px;
      display: block;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    .alert {
      padding: 12px 15px;
      border-radius: 6px;
      margin-bottom: 20px;
      border: 1px solid transparent;
    }

    .alert-success {
      background: #d4edda;
      color: #155724;
      border-color: #c3e6cb;
    }

    .alert-danger {
      background: #f8d7da;
      color: #721c24;
      border-color: #f5c6cb;
    }

    .alert-info {
      background: #d1ecf1;
      color: #0c5460;
      border-color: #bee5eb;
    }

    .modal {
      display: none;
      position: fixed;
      z-index: 2000;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
      background: white;
      margin: 5% auto;
      padding: 30px;
      border-radius: 10px;
      width: 90%;
      max-width: 600px;
      max-height: 80vh;
      overflow-y: auto;
    }

    .breadcrumb {
      background: transparent;
      padding: 15px 0;
      margin-bottom: 20px;
    }

    .breadcrumb a {
      color: #28a745;
      text-decoration: none;
    }

    .breadcrumb a:hover {
      text-decoration: underline;
    }

    @media (max-width: 1200px) {
      .workspace-layout {
        grid-template-columns: 250px 1fr;
      }
      
      .case-detail-panel {
        width: 350px;
      }
    }

    @media (max-width: 768px) {
      .workspace-layout {
        grid-template-columns: 1fr;
        height: auto;
      }
      
      .sidebar {
        order: 2;
        margin-top: 20px;
      }
      
      .main-content {
        order: 1;
        min-height: 60vh;
      }
      
      .case-detail-panel {
        width: 100%;
        left: 0;
      }
      
      .header-stats {
        display: none;
      }
    }
  </style>
</head>

<body class="dashboard-body">
  <!-- Include your header partial here -->
  <!-- <%- include('partials/header') %> -->
  
  <nav class="breadcrumb">
    <a href="/">Home</a> > <a href="/dashboard">Dashboard</a> > Support Cases
  </nav>

  <div class="support-workspace">
    
    <!-- Header Section -->
    <div class="support-header">
      <div class="header-info">
        <h1><i class="fas fa-headset"></i> Support Dashboard</h1>
        <p>Welcome back, <strong id="supportStaffName">Support Agent</strong> | Manage your assigned cases</p>
      </div>
      <div class="header-stats">
        <div class="header-stat">
          <div class="header-stat-value" id="myCasesCount">-</div>
          <div class="header-stat-label">My Cases</div>
        </div>
        <div class="header-stat">
          <div class="header-stat-value" id="pendingCount">-</div>
          <div class="header-stat-label">Pending</div>
        </div>
        <div class="header-stat">
          <div class="header-stat-value" id="todayFollowUps">-</div>
          <div class="header-stat-label">Today's Follow-ups</div>
        </div>
      </div>
    </div>

    <div class="workspace-layout">
      
      <!-- Sidebar - Case Filters -->
      <div class="sidebar">
        
        <div class="sidebar-section">
          <div class="sidebar-title">
            <i class="fas fa-filter"></i>
            Case Filters
          </div>
          
          <button class="case-filter-btn active" data-filter="all">
            <i class="fas fa-list"></i>
            All Cases
            <span class="case-count" id="allCasesCount">0</span>
          </button>
          
          <button class="case-filter-btn" data-filter="not-started">
            <i class="fas fa-play"></i>
            Not Started
            <span class="case-count" id="notStartedCount">0</span>
          </button>
          
          <button class="case-filter-btn" data-filter="under-contact">
            <i class="fas fa-phone"></i>
            Under Contact
            <span class="case-count" id="underContactCount">0</span>
          </button>
          
          <button class="case-filter-btn" data-filter="interested">
            <i class="fas fa-heart"></i>
            Interested
            <span class="case-count" id="interestedCount">0</span>
          </button>
          
          <button class="case-filter-btn" data-filter="payment-pending">
            <i class="fas fa-credit-card"></i>
            Payment Pending
            <span class="case-count" id="paymentPendingCount">0</span>
          </button>
          
          <button class="case-filter-btn" data-filter="registered">
            <i class="fas fa-check-circle"></i>
            Registered
            <span class="case-count" id="registeredCount">0</span>
          </button>
        </div>

        <div class="sidebar-section">
          <div class="sidebar-title">
            <i class="fas fa-exclamation-triangle"></i>
            Priority
          </div>
          
          <button class="case-filter-btn" data-filter="high-priority">
            <i class="fas fa-fire"></i>
            High Priority
            <span class="case-count" id="highPriorityCount">0</span>
          </button>
          
          <button class="case-filter-btn" data-filter="overdue">
            <i class="fas fa-clock"></i>
            Overdue Follow-ups
            <span class="case-count" id="overdueCount">0</span>
          </button>
        </div>

        <div class="sidebar-section">
          <div class="sidebar-title">
            <i class="fas fa-tools"></i>
            Quick Actions
          </div>
          
          <button class="case-filter-btn" onclick="addNewCase()">
            <i class="fas fa-plus"></i>
            Add New Case
          </button>
          
          <button class="case-filter-btn" onclick="bulkActions()">
            <i class="fas fa-tasks"></i>
            Bulk Actions
          </button>
          
          <button class="case-filter-btn" onclick="exportCases()">
            <i class="fas fa-download"></i>
            Export Cases
          </button>
        </div>
      </div>

      <!-- Main Content - Case List -->
      <div class="main-content">
        <div class="content-header">
          <h2 class="content-title">
            <i class="fas fa-folder-open"></i>
            <span id="currentFilterTitle">All Cases</span>
          </h2>
          <div class="content-actions">
            <button class="btn btn-secondary" onclick="refreshCases()">
              <i class="fas fa-sync-alt"></i>
              Refresh
            </button>
            <button class="btn btn-primary" onclick="addNewCase()">
              <i class="fas fa-plus"></i>
              New Case
            </button>
          </div>
        </div>

        <div class="cases-container">
          <ul class="case-list" id="casesList">
            <div class="loading">
              <i class="fas fa-spinner"></i>
              <p>Loading your cases...</p>
            </div>
          </ul>
        </div>
      </div>
    </div>

    <!-- Case Detail Panel -->
    <div class="case-detail-panel" id="caseDetailPanel">
      <div class="panel-header">
        <h3 class="panel-title">Case Details</h3>
        <button class="close-panel" onclick="closeCasePanel()">
          <i class="fas fa-times"></i>
        </button>
      </div>

      <div id="caseDetailContent">
        <!-- Dynamic content will be loaded here -->
      </div>
    </div>

  </div>

  <!-- Add Follow-up Modal -->
  <div id="followUpModal" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <h3>Add Follow-up Record</h3>
        <button class="close" onclick="closeFollowUpModal()">&times;</button>
      </div>
      
      <form id="followUpForm">
        <div class="form-group">
          <label class="form-label">Follow-up Type *</label>
          <select class="form-control" id="followUpType" required>
            <option value="">Select Type</option>
            <option value="call">Phone Call</option>
            <option value="email">Email</option>
            <option value="whatsapp">WhatsApp</option>
            <option value="meeting">Meeting</option>
            <option value="video-call">Video Call</option>
          </select>
        </div>

        <div class="form-group">
          <label class="form-label">Follow-up Name *</label>
          <input type="text" class="form-control" id="followUpName" required placeholder="e.g., Initial Contact, Price Discussion">
        </div>

        <div class="form-group">
          <label class="form-label">Duration (minutes)</label>
          <input type="number" class="form-control" id="followUpDuration" min="1">
        </div>

        <div class="form-group">
          <label class="form-label">Outcome</label>
          <select class="form-control" id="followUpOutcome">
            <option value="">Select Outcome</option>
            <option value="positive">Positive</option>
            <option value="negative">Negative</option>
            <option value="neutral">Neutral</option>
            <option value="no-response">No Response</option>
          </select>
        </div>

        <div class="form-group">
          <label class="form-label">Feedback & Notes *</label>
          <textarea class="form-control textarea" id="followUpFeedback" required placeholder="Describe what happened, next steps, etc."></textarea>
        </div>

        <div class="form-group">
          <label class="form-label">Next Action Required</label>
          <input type="text" class="form-control" id="nextAction" placeholder="What needs to be done next?">
        </div>

        <div class="form-group">
          <label class="form-label">Next Action Date</label>
          <input type="datetime-local" class="form-control" id="nextActionDate">
        </div>

        <div style="display: flex; gap: 15px; justify-content: flex-end; margin-top: 30px;">
          <button type="button" class="btn btn-secondary" onclick="closeFollowUpModal()">Cancel</button>
          <button type="submit" class="btn btn-success">Add Follow-up</button>
        </div>
      </form>
    </div>
  </div>

  <!-- Include your footer partial here -->
  <!-- <%- include('partials/footer') %> -->

  <script>
    // Global variables
    let currentSupportStaff = null;
    let allCases = [];
    let filteredCases = [];
    let currentFilter = 'all';
    let selectedCaseId = null;

    // Initialize dashboard
    document.addEventListener('DOMContentLoaded', function() {
      loadSupportData();
    });

    // Load support staff data and cases
    async function loadSupportData() {
      try {
        // This would need to be implemented to get current user's support data
        // For now, we'll use mock data
        await loadMyCases();
        updateStatistics();
      } catch (error) {
        console.error('Error loading support data:', error);
        showAlert('Error loading dashboard data', 'danger');
      }
    }

    // Load cases assigned to current support staff
    async function loadMyCases() {
      try {
        // In a real implementation, this would fetch cases for the logged-in support staff
        // For demo purposes, we'll create mock data
        allCases = [
          {
            caseId: 'CASE-2024-001',
            applicantName: 'Dr. Sarah Johnson',
            email: 'sarah.johnson@example.com',
            phone: '+1-555-0123',
            medicalSpecialty: 'Doctor (MD, DO, OB/GYN)',
            status: 'not-started',
            priority: 'high',
            dateCreated: new Date('2024-01-15'),
            lastContact: null,
            nextFollowUp: new Date('2024-01-16'),
            courseInterest: 'Botox & Dermal Fillers',
            estimatedValue: 2500
          },
          {
            caseId: 'CASE-2024-002',
            applicantName: 'Dr. Michael Chen',
            email: 'michael.chen@example.com',
            phone: '+1-555-0124',
            medicalSpecialty: 'Dentist (DDS, DMD, BDS)',
            status: 'under-contact',
            priority: 'medium',
            dateCreated: new Date('2024-01-14'),
            lastContact: new Date('2024-01-15'),
            nextFollowUp: new Date('2024-01-17'),
            courseInterest: 'Aesthetic Dentistry',
            estimatedValue: 1800
          },
          {
            caseId: 'CASE-2024-003',
            applicantName: 'Dr. Emily Rodriguez',
            email: 'emily.rodriguez@example.com',
            phone: '+1-555-0125',
            medicalSpecialty: 'Nurse Practitioner (NP)',
            status: 'interested',
            priority: 'high',
            dateCreated: new Date('2024-01-13'),
            lastContact: new Date('2024-01-14'),
            nextFollowUp: new Date('2024-01-18'),
            courseInterest: 'Injectable Training',
            estimatedValue: 2200
          }
        ];

        filterCases(currentFilter);
        renderCases();
      } catch (error) {
        console.error('Error loading cases:', error);
        document.getElementById('casesList').innerHTML = 
          '<div class="alert alert-danger">Error loading cases</div>';
      }
    }

    // Filter cases based on selected filter
    function filterCases(filter) {
      currentFilter = filter;
      
      switch (filter) {
        case 'all':
          filteredCases = allCases;
          break;
        case 'not-started':
          filteredCases = allCases.filter(c => c.status === 'not-started');
          break;
        case 'under-contact':
          filteredCases = allCases.filter(c => c.status === 'under-contact');
          break;
        case 'interested':
          filteredCases = allCases.filter(c => c.status === 'interested');
          break;
        case 'payment-pending':
          filteredCases = allCases.filter(c => c.status === 'payment-pending');
          break;
        case 'registered':
          filteredCases = allCases.filter(c => c.status === 'registered');
          break;
        case 'high-priority':
          filteredCases = allCases.filter(c => c.priority === 'high' || c.priority === 'urgent');
          break;
        case 'overdue':
          const now = new Date();
          filteredCases = allCases.filter(c => c.nextFollowUp && c.nextFollowUp < now);
          break;
        default:
          filteredCases = allCases;
      }

      updateFilterTitle(filter);
      updateFilterCounts();
    }

    // Update filter title
    function updateFilterTitle(filter) {
      const titles = {
        'all': 'All Cases',
        'not-started': 'Not Started Cases',
        'under-contact': 'Under Contact',
        'interested': 'Interested Applicants',
        'payment-pending': 'Payment Pending',
        'registered': 'Registered Students',
        'high-priority': 'High Priority Cases',
        'overdue': 'Overdue Follow-ups'
      };
      
      document.getElementById('currentFilterTitle').textContent = titles[filter] || 'Cases';
    }

    // Update filter counts
    function updateFilterCounts() {
      const counts = {
        all: allCases.length,
        'not-started': allCases.filter(c => c.status === 'not-started').length,
        'under-contact': allCases.filter(c => c.status === 'under-contact').length,
        interested: allCases.filter(c => c.status === 'interested').length,
        'payment-pending': allCases.filter(c => c.status === 'payment-pending').length,
        registered: allCases.filter(c => c.status === 'registered').length,
        'high-priority': allCases.filter(c => c.priority === 'high' || c.priority === 'urgent').length,
        overdue: allCases.filter(c => c.nextFollowUp && c.nextFollowUp < new Date()).length
      };

      Object.keys(counts).forEach(key => {
        const element = document.getElementById(key + 'Count') || 
                       document.getElementById(key.replace('-', '') + 'Count');
        if (element) {
          element.textContent = counts[key];
        }
      });

      // Update header stats
      document.getElementById('myCasesCount').textContent = allCases.length;
      document.getElementById('pendingCount').textContent = 
        allCases.filter(c => ['not-started', 'under-contact'].includes(c.status)).length;
      document.getElementById('todayFollowUps').textContent = 
        allCases.filter(c => {
          if (!c.nextFollowUp) return false;
          const today = new Date();
          const followUpDate = new Date(c.nextFollowUp);
          return followUpDate.toDateString() === today.toDateString();
        }).length;
    }

    // Update statistics
    function updateStatistics() {
      updateFilterCounts();
    }

    // Render cases list
    function renderCases() {
      const container = document.getElementById('casesList');
      
      if (filteredCases.length === 0) {
        container.innerHTML = `
          <div class="alert alert-info" style="margin: 20px;">
            <i class="fas fa-info-circle"></i>
            No cases found for the selected filter.
          </div>
        `;
        return;
      }

      let casesHTML = '';
      
      filteredCases.forEach(case_ => {
        const statusClass = `status-${case_.status.replace(/-/g, '-')}`;
        const priorityClass = `priority-${case_.priority}`;
        const isOverdue = case_.nextFollowUp && case_.nextFollowUp < new Date();
        
        casesHTML += `
          <li class="case-item" onclick="selectCase('${case_.caseId}')">
            <div class="case-header">
              <h4 class="case-title">
                <span class="priority-indicator ${priorityClass}"></span>
                ${case_.applicantName}
              </h4>
              <span class="case-id">${case_.caseId}</span>
            </div>
            
            <div class="case-details">
              <div class="case-detail">
                <span class="case-detail-label">Course Interest:</span>
                <span class="case-detail-value">${case_.courseInterest}</span>
              </div>
              <div class="case-detail">
                <span class="case-detail-label">Est. Value:</span>
                <span class="case-detail-value">€${case_.estimatedValue}</span>
              </div>
            </div>
            
            <div class="case-status">
              <span class="status-badge ${statusClass}">${case_.status.replace(/-/g, ' ')}</span>
              <div>
                ${case_.nextFollowUp ? `
                  <small style="color: ${isOverdue ? '#dc3545' : '#6c757d'};">
                    <i class="fas fa-clock"></i>
                    Follow-up: ${case_.nextFollowUp.toLocaleDateString()}
                    ${isOverdue ? ' (Overdue)' : ''}
                  </small>
                ` : ''}
              </div>
            </div>
            
            <div class="case-actions">
              <button class="btn btn-primary btn-sm" onclick="event.stopPropagation(); openCaseDetails('${case_.caseId}')">
                <i class="fas fa-eye"></i> View
              </button>
              <button class="btn btn-success btn-sm" onclick="event.stopPropagation(); addFollowUp('${case_.caseId}')">
                <i class="fas fa-phone"></i> Follow-up
              </button>
              <button class="btn btn-warning btn-sm" onclick="event.stopPropagation(); updateStatus('${case_.caseId}')">
                <i class="fas fa-edit"></i> Update
              </button>
            </div>
          </li>
        `;
      });
      
      container.innerHTML = casesHTML;
    }

    // Filter button handlers
    document.addEventListener('click', function(e) {
      if (e.target.classList.contains('case-filter-btn') || e.target.closest('.case-filter-btn')) {
        const btn = e.target.classList.contains('case-filter-btn') ? e.target : e.target.closest('.case-filter-btn');
        const filter = btn.getAttribute('data-filter');
        
        if (filter) {
          // Update active button
          document.querySelectorAll('.case-filter-btn').forEach(b => b.classList.remove('active'));
          btn.classList.add('active');
          
          // Filter and render cases
          filterCases(filter);
          renderCases();
        }
      }
    });

    // Case selection
    function selectCase(caseId) {
      selectedCaseId = caseId;
      
      // Update visual selection
      document.querySelectorAll('.case-item').forEach(item => item.classList.remove('active'));
      event.currentTarget.classList.add('active');
    }

    // Open case details panel
    function openCaseDetails(caseId) {
      const case_ = allCases.find(c => c.caseId === caseId);
      if (!case_) return;

      const panel = document.getElementById('caseDetailPanel');
      const content = document.getElementById('caseDetailContent');
      
      content.innerHTML = `
        <div class="detail-section">
          <div class="detail-section-title">
            <i class="fas fa-user"></i>
            Applicant Information
          </div>
          <div class="detail-grid">
            <div class="detail-item">
              <span class="detail-label">Name:</span>
              <span class="detail-value">${case_.applicantName}</span>
            </div>
            <div class="detail-item">
              <span class="detail-label">Email:</span>
              <span class="detail-value">${case_.email}</span>
            </div>
            <div class="detail-item">
              <span class="detail-label">Phone:</span>
              <span class="detail-value">${case_.phone}</span>
            </div>
            <div class="detail-item">
              <span class="detail-label">Specialty:</span>
              <span class="detail-value">${case_.medicalSpecialty}</span>
            </div>
            <div class="detail-item">
              <span class="detail-label">Course Interest:</span>
              <span class="detail-value">${case_.courseInterest}</span>
            </div>
          </div>
        </div>

        <div class="detail-section">
          <div class="detail-section-title">
            <i class="fas fa-chart-line"></i>
            Case Status
          </div>
          <div class="detail-grid">
            <div class="detail-item">
              <span class="detail-label">Status:</span>
              <span class="detail-value">
                <span class="status-badge status-${case_.status.replace(/-/g, '-')}">${case_.status.replace(/-/g, ' ')}</span>
              </span>
            </div>
            <div class="detail-item">
              <span class="detail-label">Priority:</span>
              <span class="detail-value">
                <span class="priority-indicator priority-${case_.priority}"></span>
                ${case_.priority.charAt(0).toUpperCase() + case_.priority.slice(1)}
              </span>
            </div>
            <div class="detail-item">
              <span class="detail-label">Created:</span>
              <span class="detail-value">${case_.dateCreated.toLocaleDateString()}</span>
            </div>
            <div class="detail-item">
              <span class="detail-label">Last Contact:</span>
              <span class="detail-value">${case_.lastContact ? case_.lastContact.toLocaleDateString() : 'Never'}</span>
            </div>
            <div class="detail-item">
              <span class="detail-label">Next Follow-up:</span>
              <span class="detail-value">${case_.nextFollowUp ? case_.nextFollowUp.toLocaleDateString() : 'Not scheduled'}</span>
            </div>
            <div class="detail-item">
              <span class="detail-label">Est. Value:</span>
              <span class="detail-value">€${case_.estimatedValue}</span>
            </div>
          </div>
        </div>

        <div class="detail-section">
          <div class="detail-section-title">
            <i class="fas fa-clipboard-list"></i>
            Follow-up Records
          </div>
          <div class="alert alert-info">
            <i class="fas fa-info-circle"></i>
            No follow-up records yet. Click "Add Follow-up" to record your first interaction.
          </div>
        </div>

        <div class="detail-section">
          <div class="detail-section-title">
            <i class="fas fa-graduation-cap"></i>
            Course Information
          </div>
          <div class="alert alert-info">
            <i class="fas fa-info-circle"></i>
            Course details will be populated when applicant shows interest in specific courses.
          </div>
        </div>

        <div class="detail-section">
          <div class="detail-section-title">
            <i class="fas fa-file-alt"></i>
            Documents
          </div>
          <div class="alert alert-info">
            <i class="fas fa-info-circle"></i>
            No documents uploaded yet.
          </div>
        </div>

        <div class="action-buttons">
          <button class="btn btn-success" onclick="addFollowUp('${case_.caseId}')">
            <i class="fas fa-phone"></i>
            Add Follow-up
          </button>
          <button class="btn btn-primary" onclick="updateCaseStatus('${case_.caseId}')">
            <i class="fas fa-edit"></i>
            Update Status
          </button>
          <button class="btn btn-warning" onclick="addCourseInterest('${case_.caseId}')">
            <i class="fas fa-graduation-cap"></i>
            Add Course
          </button>
          <button class="btn btn-info" onclick="sendEmail('${case_.caseId}')">
            <i class="fas fa-envelope"></i>
            Send Email
          </button>
          <button class="btn btn-danger" onclick="transferToUser('${case_.caseId}')">
            <i class="fas fa-arrow-right"></i>
            Transfer to User
          </button>
        </div>
      `;
      
      panel.classList.add('active');
    }

    // Close case details panel
    function closeCasePanel() {
      document.getElementById('caseDetailPanel').classList.remove('active');
    }

    // Add follow-up modal
    function addFollowUp(caseId) {
      selectedCaseId = caseId;
      document.getElementById('followUpModal').style.display = 'block';
    }

    function closeFollowUpModal() {
      document.getElementById('followUpModal').style.display = 'none';
      document.getElementById('followUpForm').reset();
    }

    // Follow-up form submission
    document.getElementById('followUpForm').addEventListener('submit', function(e) {
      e.preventDefault();
      
      const followUpData = {
        caseId: selectedCaseId,
        type: document.getElementById('followUpType').value,
        name: document.getElementById('followUpName').value,
        duration: document.getElementById('followUpDuration').value,
        outcome: document.getElementById('followUpOutcome').value,
        feedback: document.getElementById('followUpFeedback').value,
        nextAction: document.getElementById('nextAction').value,
        nextActionDate: document.getElementById('nextActionDate').value
      };

      // Here you would send this data to your API
      console.log('Adding follow-up:', followUpData);
      
      // Mock success
      showAlert('Follow-up record added successfully!', 'success');
      closeFollowUpModal();
      
      // Update the case's last contact date
      const case_ = allCases.find(c => c.caseId === selectedCaseId);
      if (case_) {
        case_.lastContact = new Date();
        if (followUpData.nextActionDate) {
          case_.nextActionDate = new Date(followUpData.nextActionDate);
        }
        renderCases();
      }
    });

    // Action functions
    function updateCaseStatus(caseId) {
      showAlert('Feature coming soon: Update Case Status', 'info');
    }

    function addCourseInterest(caseId) {
      showAlert('Feature coming soon: Add Course Interest', 'info');
    }

    function sendEmail(caseId) {
      showAlert('Feature coming soon: Email Templates', 'info');
    }

    function transferToUser(caseId) {
      if (confirm('Are you sure you want to transfer this case to create a user account? This action cannot be undone.')) {
        showAlert('Feature coming soon: Transfer to User Model', 'info');
      }
    }

    function addNewCase() {
      showAlert('Feature coming soon: Add New Case Form', 'info');
    }

    function bulkActions() {
      showAlert('Feature coming soon: Bulk Case Actions', 'info');
    }

    function exportCases() {
      showAlert('Feature coming soon: Export Cases to CSV', 'info');
    }

    function refreshCases() {
      showAlert('Refreshing cases...', 'info');
      loadMyCases();
    }

    // Utility functions
    function showAlert(message, type) {
      const alertDiv = document.createElement('div');
      alertDiv.className = `alert alert-${type}`;
      alertDiv.innerHTML = `
        <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'danger' ? 'exclamation-triangle' : 'info-circle'}"></i>
        ${message}
      `;
      
      document.querySelector('.support-workspace').insertBefore(alertDiv, document.querySelector('.workspace-layout'));
      
      setTimeout(() => {
        alertDiv.remove();
      }, 5000);
    }

    // Close modals when clicking outside
    window.onclick = function(event) {
      const modals = document.querySelectorAll('.modal');
      modals.forEach(modal => {
        if (event.target === modal) {
          modal.style.display = 'none';
        }
      });
    }
  </script>
</body>

</html>detail-label">Email:</span>
                <span class="case-detail-value">${case_.email}</span>
              </div>
              <div class="case-detail">
                <span class="case-detail-label">Specialty:</span>
                <span class="case-detail-value">${case_.medicalSpecialty}</span>
              </div>
              <div class="case-detail">
                <span class="case-