<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Online Live Training - Luxury Medical Training</title>
  <link rel="stylesheet" href="/css/online-course-details.css">
  <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Montserrat:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  
  <style>
    /* Reset and Base Styles */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: 'Montserrat', sans-serif;
      background-color: #f9f9f9;
      color: #333;
    }
    
    /* Breadcrumb Styling */
    .breadcrumb {
      margin: 0;
      padding: 20px 5%;
      background: linear-gradient(to right, rgba(0, 33, 71, 0.05), rgba(184, 134, 11, 0.05));
      font-size: 14px;
      backdrop-filter: blur(10px);
    }
    
    .breadcrumb a {
      color: #002147;
      text-decoration: none;
      font-weight: 500;
      transition: all 0.3s ease;
      position: relative;
    }
    
    .breadcrumb a::after {
      content: '';
      position: absolute;
      bottom: -2px;
      left: 0;
      width: 0;
      height: 2px;
      background-color: #b8860b;
      transition: width 0.3s ease;
    }
    
    .breadcrumb a:hover::after {
      width: 100%;
    }
    
    .breadcrumb span {
      color: #b8860b;
      font-weight: 600;
    }
    
    /* Hero Section */
    #hero {
      background: linear-gradient(135deg, #002147 0%, #001633 100%);
      position: relative;
      overflow: hidden;
      padding: 80px 0;
    }
    
    #hero::before {
      content: '';
      position: absolute;
      top: -50%;
      right: -10%;
      width: 600px;
      height: 600px;
      background: radial-gradient(circle, rgba(184, 134, 11, 0.1) 0%, transparent 70%);
      border-radius: 50%;
    }
    
    #hero::after {
      content: '';
      position: absolute;
      bottom: -30%;
      left: -5%;
      width: 400px;
      height: 400px;
      background: radial-gradient(circle, rgba(184, 134, 11, 0.08) 0%, transparent 70%);
      border-radius: 50%;
    }
    
    .hero-content {
      position: relative;
      z-index: 2;
      text-align: center;
      max-width: 1000px;
      margin: 0 auto;
      padding: 0 20px;
    }
    
    .hero-content h1 {
      font-family: 'Montserrat', sans-serif;
      font-size: 48px;
      font-weight: 700;
      color: white;
      margin-bottom: 20px;
      animation: fadeInUp 0.8s ease-out;
    }
    
    .hero-content p {
      font-size: 18px;
      color: rgba(255, 255, 255, 0.9);
      line-height: 1.8;
      max-width: 800px;
      margin: 0 auto;
      animation: fadeInUp 0.8s ease-out 0.2s both;
    }
    
    /* Search and Filter Bar */
    .filter-bar {
      background: white;
      padding: 25px;
      margin: -40px auto 40px;
      max-width: 1200px;
      border-radius: 10px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      position: relative;
      z-index: 10;
      display: flex;
      gap: 20px;
      flex-wrap: wrap;
      align-items: center;
    }
    
    .search-box {
      flex: 1;
      min-width: 250px;
      position: relative;
    }
    
    .search-box input {
      width: 100%;
      padding: 12px 45px 12px 20px;
      border: 2px solid #e0e0e0;
      border-radius: 50px;
      font-size: 14px;
      transition: all 0.3s ease;
    }
    
    .search-box input:focus {
      outline: none;
      border-color: #b8860b;
    }
    
    .search-box i {
      position: absolute;
      right: 20px;
      top: 50%;
      transform: translateY(-50%);
      color: #999;
    }
    
    .filter-dropdown {
      min-width: 180px;
    }
    
    .filter-dropdown select {
      width: 100%;
      padding: 12px 20px;
      border: 2px solid #e0e0e0;
      border-radius: 50px;
      font-size: 14px;
      background: white;
      cursor: pointer;
      transition: all 0.3s ease;
    }
    
    .filter-dropdown select:focus {
      outline: none;
      border-color: #b8860b;
    }
    
    /* View Toggle Buttons */
    .view-toggle {
      max-width: 1400px;
      margin: 20px auto;
      padding: 0 20px;
      display: flex;
      justify-content: center;
      gap: 10px;
    }
    
    .view-btn {
      padding: 12px 30px;
      background: white;
      border: 2px solid #e0e0e0;
      border-radius: 50px;
      font-size: 15px;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      gap: 10px;
      color: #666;
    }
    
    .view-btn:hover {
      border-color: #b8860b;
      color: #b8860b;
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }
    
    .view-btn.active {
      background: linear-gradient(135deg, #b8860b 0%, #9a7209 100%);
      color: white;
      border-color: #b8860b;
    }
    
    /* Table Container */
    .table-container {
      max-width: 1400px;
      margin: 0 auto 60px;
      padding: 0 20px;
      overflow-x: auto;
    }
    
    /* Modern Table Styling */
    .courses-table {
      width: 100%;
      background: white;
      border-radius: 12px;
      overflow: hidden;
      box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
    }
    
    .courses-table thead {
      background: linear-gradient(135deg, #002147 0%, #003366 100%);
    }
    
    .courses-table th {
      padding: 20px 15px;
      text-align: left;
      color: white;
      font-weight: 600;
      font-size: 14px;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      position: relative;
    }
    
    .courses-table th::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      height: 3px;
      background: linear-gradient(to right, transparent, #b8860b, transparent);
    }
    
    .courses-table tbody tr {
      transition: all 0.3s ease;
      border-bottom: 1px solid #f0f0f0;
    }
    
    .courses-table tbody tr:hover {
      background-color: #fefdfb;
      transform: scale(1.01);
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
    }
    
    .courses-table td {
      padding: 20px 15px;
      font-size: 14px;
    }
    
    /* Course Title Cell */
    .course-title {
      font-weight: 600;
      color: #002147;
    }
    
    /* Date Badge */
    .date-badge {
      display: inline-block;
      padding: 6px 12px;
      background: #f0f7ff;
      color: #002147;
      border-radius: 20px;
      font-size: 13px;
      font-weight: 500;
    }
    
    /* Price Badge */
    .price-badge {
      font-weight: 700;
      color: #b8860b;
      font-size: 16px;
    }
    
    /* Status Badges */
    .status-badge {
      padding: 6px 16px;
      border-radius: 20px;
      font-size: 12px;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      display: inline-block;
    }
    
    .status-open {
      background: #d4f4dd;
      color: #2e7d3e;
    }
    
    .status-limited {
      background: #fff3cd;
      color: #856404;
    }
    
    .status-closed {
      background: #f8d7da;
      color: #721c24;
    }
    
    /* Platform Badge */
    .platform-badge {
      display: inline-flex;
      align-items: center;
      gap: 6px;
      padding: 4px 12px;
      background: #e8f4ff;
      color: #002147;
      border-radius: 15px;
      font-size: 13px;
    }
    
    /* Seats Count Badge */
    .seats-count {
      font-weight: 600;
      padding: 4px 8px;
      border-radius: 12px;
      font-size: 14px;
    }
    
    .seats-good {
      color: #2e7d3e;
      background: #d4f4dd;
    }
    
    .seats-warning {
      color: #856404;
      background: #fff3cd;
    }
    
    .seats-danger {
      color: #721c24;
      background: #f8d7da;
    }
    
    /* Action Buttons */
    .action-buttons {
      display: flex;
      gap: 8px;
      align-items: center;
    }
    
    .btn-icon {
      width: 38px;
      height: 38px;
      border: none;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
    }
    
    .btn-icon::before {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 0;
      height: 0;
      border-radius: 50%;
      background: rgba(255, 255, 255, 0.3);
      transform: translate(-50%, -50%);
      transition: width 0.6s, height 0.6s;
    }
    
    .btn-icon:hover::before {
      width: 50px;
      height: 50px;
    }
    
    .btn-details {
      background: #002147;
      color: white;
    }
    
    .btn-details:hover {
      background: #003366;
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(0, 33, 71, 0.3);
    }
    
    .btn-wishlist {
      background: #fff;
      color: #e74c3c;
      border: 2px solid #e74c3c;
    }
    
    .btn-wishlist:hover {
      background: #e74c3c;
      color: white;
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(231, 76, 60, 0.3);
    }
    
    .btn-cart {
      background: #b8860b;
      color: white;
    }
    
    .btn-cart:hover {
      background: #9a7209;
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(184, 134, 11, 0.3);
    }
    
    /* Tooltips */
    .tooltip {
      position: relative;
    }
    
    .tooltip::after {
      content: attr(data-tooltip);
      position: absolute;
      bottom: 100%;
      left: 50%;
      transform: translateX(-50%);
      background: #333;
      color: white;
      padding: 5px 10px;
      border-radius: 4px;
      font-size: 12px;
      white-space: nowrap;
      opacity: 0;
      pointer-events: none;
      transition: opacity 0.3s ease;
      margin-bottom: 5px;
    }
    
    .tooltip:hover::after {
      opacity: 1;
    }
    
    /* Grid View */
    .grid-container {
      max-width: 1400px;
      margin: 0 auto 60px;
      padding: 0 20px;
      display: none;
    }
    
    .courses-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
      gap: 30px;
    }
    
    .course-card {
      background: white;
      border-radius: 12px;
      overflow: hidden;
      box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
      transition: all 0.3s ease;
      position: relative;
    }
    
    .course-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
    }
    
    .course-image {
      width: 100%;
      height: 200px;
      background: linear-gradient(135deg, #002147 0%, #003366 100%);
      position: relative;
      overflow: hidden;
    }
    
    .course-image img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    
    .course-badge-overlay {
      position: absolute;
      top: 15px;
      right: 15px;
      display: flex;
      flex-direction: column;
      gap: 8px;
    }
    
    .live-indicator {
      background: #dc3545;
      color: white;
      padding: 5px 15px;
      border-radius: 20px;
      font-size: 12px;
      font-weight: 600;
      display: flex;
      align-items: center;
      gap: 5px;
      animation: pulse 2s infinite;
    }
    
    @keyframes pulse {
      0% { opacity: 1; }
      50% { opacity: 0.7; }
      100% { opacity: 1; }
    }
    
    .course-card-body {
      padding: 25px;
    }
    
    .course-card-title {
      font-size: 18px;
      font-weight: 600;
      color: #002147;
      margin-bottom: 10px;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
    
    .course-card-instructor {
      color: #666;
      font-size: 14px;
      margin-bottom: 15px;
      display: flex;
      align-items: center;
      gap: 5px;
    }
    
    .course-card-meta {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
      flex-wrap: wrap;
      gap: 10px;
    }
    
    .course-card-date {
      display: flex;
      align-items: center;
      gap: 5px;
      color: #666;
      font-size: 14px;
    }
    
    .course-card-platform {
      display: flex;
      align-items: center;
      gap: 5px;
      padding: 4px 12px;
      background: #f0f7ff;
      color: #002147;
      border-radius: 15px;
      font-size: 13px;
    }
    
    .course-card-footer {
      border-top: 1px solid #f0f0f0;
      padding-top: 20px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    
    .course-card-price {
      font-size: 24px;
      font-weight: 700;
      color: #b8860b;
    }
    
    .course-card-actions {
      display: flex;
      gap: 8px;
    }
    
    /* Notification Styles */
    .notification {
      position: fixed;
      top: 20px;
      right: -400px;
      max-width: 400px;
      padding: 20px 25px;
      background: white;
      border-radius: 8px;
      box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15);
      display: flex;
      align-items: center;
      gap: 15px;
      transition: right 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
      z-index: 1000;
    }
    
    .notification.show {
      right: 20px;
    }
    
    .notification-icon {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-shrink: 0;
    }
    
    .notification.success .notification-icon {
      background: #d4f4dd;
      color: #2e7d3e;
    }
    
    .notification.error .notification-icon {
      background: #f8d7da;
      color: #721c24;
    }
    
    .notification.warning .notification-icon {
      background: #fff3cd;
      color: #856404;
    }
    
    .notification-content h4 {
      margin: 0 0 5px;
      font-size: 16px;
      font-weight: 600;
    }
    
    .notification-content p {
      margin: 0;
      font-size: 14px;
      color: #666;
    }
    
    /* Loading State */
    .btn-loading {
      pointer-events: none;
      opacity: 0.7;
    }
    
    .btn-loading i {
      animation: spin 1s linear infinite;
    }
    
    /* Animations */
    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
    
    @keyframes spin {
      from { transform: rotate(0deg); }
      to { transform: rotate(360deg); }
    }
    
    /* Empty State */
    .empty-state {
      text-align: center;
      padding: 60px 20px;
      background: white;
      border-radius: 12px;
      margin: 40px auto;
      max-width: 600px;
    }
    
    .empty-state i {
      font-size: 60px;
      color: #ddd;
      margin-bottom: 20px;
    }
    
    .empty-state h3 {
      font-size: 24px;
      color: #333;
      margin-bottom: 10px;
    }
    
    .empty-state p {
      color: #666;
      font-size: 16px;
    }
    
    /* Responsive Design */
    @media (max-width: 768px) {
      .hero-content h1 {
        font-size: 32px;
      }
      
      .filter-bar {
        flex-direction: column;
        gap: 15px;
      }
      
      .search-box, .filter-dropdown {
        width: 100%;
      }
      
      .table-container {
        padding: 0 10px;
      }
      
      .courses-table {
        font-size: 12px;
      }
      
      .courses-table th,
      .courses-table td {
        padding: 12px 8px;
      }
      
      .action-buttons {
        flex-direction: column;
        gap: 5px;
      }
      
      .btn-icon {
        width: 32px;
        height: 32px;
      }
      
      .courses-grid {
        grid-template-columns: 1fr;
      }
      
      .notification {
        left: 10px;
        right: 10px;
        max-width: none;
      }
      
      .notification.show {
        right: 10px;
      }
    }
  </style>
</head>

<body>
  <%- include('partials/header') %>


<!-- Add this style to your online-live-training.ejs -->
<style>
  /* Placeholder for missing images */
  .course-image-placeholder {
    width: 100%;
    height: 200px;
    background: linear-gradient(135deg, #002147 0%, #003366 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 48px;
  }
  
  /* Hide broken images */
  img.course-img {
    display: block;
  }
  
  img.course-img.error {
    display: none;
  }
</style>


  <!-- Enhanced Breadcrumb -->
  <nav class="breadcrumb">
    <a href="/"><i class="fas fa-home"></i> Home</a> 
    <i class="fas fa-chevron-right" style="margin: 0 10px; color: #999; font-size: 12px;"></i>
    <a href="/training-programs">Training Programs</a> 
    <i class="fas fa-chevron-right" style="margin: 0 10px; color: #999; font-size: 12px;"></i>
    <span>Online Live Training</span>
  </nav>

  <!-- Enhanced Hero Section -->
  <section id="hero">
    <div class="hero-content">
      <h1>Interactive Online Live Training</h1>
      <p>Join our expert-led live sessions from anywhere in the world. Experience real-time interaction, hands-on demonstrations, and immediate feedback in our premium virtual classroom environment.</p>
    </div>
  </section>

  <!-- Search and Filter Bar -->
  <div class="filter-bar">
    <div class="search-box">
      <input type="text" id="courseSearch" placeholder="Search courses by name, instructor, or topic...">
      <i class="fas fa-search"></i>
    </div>
    <div class="filter-dropdown">
      <select id="statusFilter">
        <option value="">All Status</option>
        <option value="Open to Register">Open</option>
        <option value="Full">Full</option>
        <option value="In Progress">In Progress</option>
      </select>
    </div>
    <div class="filter-dropdown">
      <select id="dateFilter">
        <option value="">All Dates</option>
        <option value="upcoming">Upcoming</option>
        <option value="this-week">This Week</option>
        <option value="this-month">This Month</option>
        <option value="next-month">Next Month</option>
      </select>
    </div>
    <div class="filter-dropdown">
      <select id="platformFilter">
        <option value="">All Platforms</option>
        <option value="zoom">Zoom</option>
        <option value="teams">Microsoft Teams</option>
        <option value="webex">Webex</option>
        <option value="custom">Custom Platform</option>
      </select>
    </div>
    <div class="filter-dropdown">
      <select id="sortBy">
        <option value="">Sort By</option>
        <option value="date-asc">Date (Earliest First)</option>
        <option value="date-desc">Date (Latest First)</option>
        <option value="price-asc">Price (Low to High)</option>
        <option value="price-desc">Price (High to Low)</option>
      </select>
    </div>
  </div>

  <!-- View Toggle Buttons -->
  <div class="view-toggle">
    <button class="view-btn active" id="tableViewBtn">
      <i class="fas fa-list"></i> List View
    </button>
    <button class="view-btn" id="gridViewBtn">
      <i class="fas fa-th"></i> Grid View
    </button>
  </div>

  <!-- Enhanced Courses Table -->
  <div class="table-container" id="tableView">
    <% if (courses && courses.length > 0) { %>
    <table class="courses-table" id="coursesTable">
      <thead>
        <tr>
          <th style="width: 5%">#</th>
          <th style="width: 10%">Code</th>
          <th style="width: 22%">Course Title</th>
          <th style="width: 12%">Start Date</th>
          <th style="width: 10%">Duration</th>
          <th style="width: 10%">Platform</th>
          <th style="width: 8%">Price</th>
          <th style="width: 8%">Seats</th>
          <th style="width: 8%">Status</th>
          <th style="width: 12%">Actions</th>
        </tr>
      </thead>
      <tbody>
        <% courses.forEach((course, index) => { %>
          <tr data-course-id="<%= course._id %>" 
              data-status="<%= course.displayStatus || course.status %>"
              data-date="<%= course.startDate %>"
              data-price="<%= course.price || 0 %>"
              data-platform="<%= course.platform?.toLowerCase() || 'zoom' %>">
            <td><%= index + 1 %></td>
            <td><strong><%= course.courseCode || 'N/A' %></strong></td>
            <td class="course-title">
              <%= course.title || 'Untitled Course' %>
              <% if (course.instructor) { %>
                <br><small style="color: #666;">
                  <i class="fas fa-user-tie"></i> <%= course.instructor %>
                  <% if (course.coInstructors && course.coInstructors.length > 0) { %>
                    & <%= course.coInstructors.length %> more
                  <% } %>
                </small>
              <% } %>
            </td>
            <td>
              <span class="date-badge">
                <i class="far fa-calendar"></i> 
                <%= course.startDate ? new Date(course.startDate).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' }) : 'TBD' %>
              </span>
              <% if (course.timeUntilStart && course.daysUntilStart > 0) { %>
                <br><small style="color: #666;">in <%= course.timeUntilStart %></small>
              <% } %>
            </td>
            <td>
              <%= course.duration || 'TBD' %>
              <% if (course.isMultiDay) { %>
                <br><small style="color: #666;">Multi-session</small>
              <% } %>
            </td>
            <td>
              <span class="platform-badge">
                <i class="fas <%= course.platformIcon || 'fa-video' %>"></i>
                <%= course.platform || 'Zoom' %>
              </span>
            </td>
            <td class="price-badge">
              <%= course.currency || 'EUR' %><%= course.price || 0 %>
              <% if (course.hasEarlyBird && course.earlyBirdPrice) { %>
                <br><small style="color: #28a745;">Early: <%= course.currency || 'EUR' %><%= course.earlyBirdPrice %></small>
              <% } %>
            </td>
            <td>
            <span class="seats-count <%= course.availableSeats > 5 ? 'seats-good' : course.availableSeats > 0 ? 'seats-warning' : 'seats-danger' %>">
                <%= course.availableSeats || 0 %>/<%= course.seatsAvailable || 20 %>
              </span>
            </td>
            <td>
              <% 
                let statusClass = 'status-closed';
                let statusText = course.displayStatus || course.status || 'Closed';
                
                if (statusText === 'Open to Register') {
                  statusClass = 'status-open';
                } else if (statusText === 'Full' || course.availableSeats <= 0) {
                  statusClass = 'status-closed';
                  statusText = 'Full';
                } else if (statusText === 'In Progress') {
                  statusClass = 'status-limited';
                }
              %>
              <span class="status-badge <%= statusClass %>"><%= statusText %></span>
            </td>
            <td>
              <div class="action-buttons">
                <button class="btn-icon btn-details tooltip" data-tooltip="View Details" 
                        onclick="window.location.href='/online-live-training/courses/<%= course._id %>'">
                  <i class="fas fa-info-circle"></i>
                </button>
                
                <% if (user) { %>
                  <button class="btn-icon btn-wishlist tooltip add-to-wishlist-btn" 
                          data-tooltip="Add to Wishlist"
                          data-course-id="<%= course._id %>" 
                          data-course-type="OnlineLiveTraining"
                          data-price="<%= course.price || 0 %>"
                          data-course-code="<%= course.courseCode || 'N/A' %>"
                          data-course-title="<%= course.title || 'Untitled Course' %>">
                    <i class="fas fa-heart"></i>
                  </button>
                  
                  <button class="btn-icon btn-cart tooltip add-to-cart-btn" 
                          data-tooltip="Add to Cart"
                          data-course-id="<%= course._id %>" 
                          data-course-type="OnlineLiveTraining"
                          data-price="<%= course.price || 0 %>"
                          data-course-code="<%= course.courseCode || 'N/A' %>"
                          data-course-title="<%= course.title || 'Untitled Course' %>"
                          <%= (course.availableSeats <= 0 || statusText !== 'Open to Register') ? 'disabled style="opacity: 0.5; cursor: not-allowed;"' : '' %>>
                    <i class="fas fa-shopping-cart"></i>
                  </button>
                <% } else { %>
                  <button class="btn-icon btn-wishlist tooltip" 
                          data-tooltip="Login to add to wishlist"
                          onclick="showLoginRequired()">
                    <i class="fas fa-heart"></i>
                  </button>
                  
                  <button class="btn-icon btn-cart tooltip" 
                          data-tooltip="Login to add to cart"
                          onclick="showLoginRequired()">
                    <i class="fas fa-shopping-cart"></i>
                  </button>
                <% } %>
              </div>
            </td>
          </tr>
        <% }) %>
      </tbody>
    </table>
    <% } else { %>
    <div class="empty-state">
      <i class="fas fa-video-slash"></i>
      <h3>No Online Live Courses Available</h3>
      <p>Check back soon for upcoming live training sessions!</p>
    </div>
    <% } %>
  </div>

  <!-- Grid View -->
  <div class="grid-container" id="gridView">
    <% if (courses && courses.length > 0) { %>
    <div class="courses-grid">
      <% courses.forEach((course) => { %>
      <div class="course-card" data-course-id="<%= course._id %>">
        <div class="course-image">
          <% if (course.mainImageUrl && !course.mainImageUrl.includes('default-online-course.jpg')) { %>
            <img src="<%= course.mainImageUrl %>" 
                 alt="<%= course.title %>" 
                 class="course-img"
                 onerror="this.classList.add('error'); this.nextElementSibling.style.display='flex';">
            <div class="course-image-placeholder" style="display:none;">
              <i class="fas fa-video"></i>
            </div>
          <% } else { %>
            <div class="course-image-placeholder">
              <i class="fas fa-video"></i>
            </div>
          <% } %>
          <div class="course-badge-overlay">
            <span class="live-indicator">
              <i class="fas fa-circle"></i> LIVE
            </span>
            <% if (course.availableSeats <= 5 && course.availableSeats > 0) { %>
            <span class="status-badge status-limited">Limited Seats</span>
            <% } %>
          </div>
        </div>
        
        <div class="course-card-body">
          <h3 class="course-card-title"><%= course.title %></h3>
          
          <% if (course.instructor) { %>
          <div class="course-card-instructor">
            <i class="fas fa-user-tie"></i>
            <%= course.instructor %>
          </div>
          <% } %>
          
          <div class="course-card-meta">
            <div class="course-card-date">
              <i class="far fa-calendar"></i>
              <%= course.startDate ? new Date(course.startDate).toLocaleDateString('en-US', { month: 'short', day: 'numeric' }) : 'TBD' %>
            </div>
            <div class="course-card-platform">
              <i class="fas <%= course.platformIcon || 'fa-video' %>"></i>
              <%= course.platform || 'Zoom' %>
            </div>
          </div>
          
          <div class="course-card-footer">
            <div class="course-card-price">
              <%= course.currency || 'EUR' %><%= course.price || 0 %>
            </div>
            <div class="course-card-actions">
              <button class="btn-icon btn-details tooltip" data-tooltip="View Details" 
                      onclick="window.location.href='/online-live-training/courses/<%= course._id %>'">
                <i class="fas fa-info-circle"></i>
              </button>
              
              <% if (user) { %>
                <button class="btn-icon btn-wishlist tooltip add-to-wishlist-btn" 
                        data-tooltip="Add to Wishlist"
                        data-course-id="<%= course._id %>" 
                        data-course-type="OnlineLiveTraining"
                        data-price="<%= course.price || 0 %>"
                        data-course-code="<%= course.courseCode || 'N/A' %>"
                        data-course-title="<%= course.title || 'Untitled Course' %>">
                  <i class="fas fa-heart"></i>
                </button>
                
                <button class="btn-icon btn-cart tooltip add-to-cart-btn" 
                        data-tooltip="Add to Cart"
                        data-course-id="<%= course._id %>" 
                        data-course-type="OnlineLiveTraining"
                        data-price="<%= course.price || 0 %>"
                        data-course-code="<%= course.courseCode || 'N/A' %>"
                        data-course-title="<%= course.title || 'Untitled Course' %>"
                        <%= (course.availableSeats <= 0) ? 'disabled style="opacity: 0.5; cursor: not-allowed;"' : '' %>>
                  <i class="fas fa-shopping-cart"></i>
                </button>
              <% } else { %>
                <button class="btn-icon btn-wishlist tooltip" 
                        data-tooltip="Login to add to wishlist"
                        onclick="showLoginRequired()">
                  <i class="fas fa-heart"></i>
                </button>
                
                <button class="btn-icon btn-cart tooltip" 
                        data-tooltip="Login to add to cart"
                        onclick="showLoginRequired()">
                  <i class="fas fa-shopping-cart"></i>
                </button>
              <% } %>
            </div>
          </div>
        </div>
      </div>
      <% }) %>
    </div>
    <% } else { %>
    <div class="empty-state">
      <i class="fas fa-video-slash"></i>
      <h3>No Online Live Courses Available</h3>
      <p>Check back soon for upcoming live training sessions!</p>
    </div>
    <% } %>
  </div>

  <!-- Notification Container -->
  <div id="notificationContainer"></div>
<!-- Replace ONLY the <script> section in your online-live-training.ejs with this simpler version -->

  <script>
    // Simple notification function
    function showNotification(title, message, type = 'success') {
      const container = document.getElementById('notificationContainer');
      const notification = document.createElement('div');
      notification.className = `notification ${type}`;
      
      const iconMap = {
        success: 'fa-check-circle',
        error: 'fa-times-circle',
        warning: 'fa-exclamation-triangle'
      };
      
      notification.innerHTML = `
        <div class="notification-icon">
          <i class="fas ${iconMap[type]}"></i>
        </div>
        <div class="notification-content">
          <h4>${title}</h4>
          <p>${message}</p>
        </div>
      `;
      
      container.appendChild(notification);
      
      // Show notification
      setTimeout(() => notification.classList.add('show'), 10);
      
      // Remove after 5 seconds
      setTimeout(() => {
        notification.classList.remove('show');
        setTimeout(() => notification.remove(), 500);
      }, 5000);
    }
    
    // Login required
    function showLoginRequired() {
      showNotification('Authentication Required', 'Please log in to continue', 'warning');
      setTimeout(() => window.location.href = '/login', 2000);
    }
    
    // Enhanced button loading state
    function setButtonLoading(button, loading) {
      if (loading) {
        button.classList.add('btn-loading');
        const icon = button.querySelector('i');
        if (icon) {
          icon.className = 'fas fa-spinner';
        }
      } else {
        button.classList.remove('btn-loading');
        const icon = button.querySelector('i');
        if (icon) {
          icon.className = button.classList.contains('btn-wishlist') ? 'fas fa-heart' : 'fas fa-shopping-cart';
        }
      }
    }

    // Add to Cart
    document.querySelectorAll('.add-to-cart-btn').forEach(button => {
      button.addEventListener('click', async function(e) {
        e.preventDefault();
        
        const courseId = this.getAttribute('data-course-id');
        const courseType = this.getAttribute('data-course-type');
        const courseTitle = this.getAttribute('data-course-title');
        
        setButtonLoading(this, true);
        
        try {
          const response = await fetch('/add-to-cart', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ courseId, courseType })
          });
          
          const result = await response.json();
          
          if (result.success) {
            showNotification('Added to Cart', `"${courseTitle}" has been added to your cart`, 'success');
            // ⭐ ADD ONLY THIS LINE:
  setTimeout(() => window.location.href = '/orders', 3000);
          } else {
            showNotification('Error', result.message, 'error');
          }
        } catch (error) {
          console.error('Error:', error);
          showNotification('Error', 'Failed to add to cart', 'error');
        } finally {
          setButtonLoading(this, false);
        }
      });
    });

    // Add to Wishlist
    document.querySelectorAll('.add-to-wishlist-btn').forEach(button => {
      button.addEventListener('click', async function(e) {
        e.preventDefault();
        
        const courseId = this.getAttribute('data-course-id');
        const courseType = this.getAttribute('data-course-type');
        const courseTitle = this.getAttribute('data-course-title');
        
        setButtonLoading(this, true);
        
        try {
          const response = await fetch('/add-to-wishlist', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ courseId, courseType })
          });
          
          const result = await response.json();
          
          if (result.success) {
            showNotification('Added to Wishlist', `"${courseTitle}" has been saved to your wishlist`, 'success');
            
            // Optional: Update button appearance
            this.style.color = '#e74c3c';
            this.querySelector('i').classList.add('fas');
            this.querySelector('i').classList.remove('far');
          } else {
            showNotification('Error', result.message, 'error');
          }
        } catch (error) {
          console.error('Error:', error);
          showNotification('Error', 'Failed to add to wishlist', 'error');
        } finally {
          setButtonLoading(this, false);
        }
      });
    });

    // Search functionality
    const searchInput = document.getElementById('courseSearch');
    searchInput.addEventListener('input', filterCourses);

    // Filter functionality
    document.getElementById('statusFilter').addEventListener('change', filterCourses);
    document.getElementById('dateFilter').addEventListener('change', filterCourses);
    document.getElementById('platformFilter').addEventListener('change', filterCourses);
    document.getElementById('sortBy').addEventListener('change', sortCourses);

    function filterCourses() {
      const searchTerm = searchInput.value.toLowerCase();
      const statusFilter = document.getElementById('statusFilter').value;
      const dateFilter = document.getElementById('dateFilter').value;
      const platformFilter = document.getElementById('platformFilter').value;
      const rows = document.querySelectorAll('#coursesTable tbody tr');
      
      rows.forEach(row => {
        const text = row.textContent.toLowerCase();
        const status = row.querySelector('.status-badge')?.textContent.trim();
        const courseDate = new Date(row.getAttribute('data-date'));
        const platform = row.getAttribute('data-platform');
        const today = new Date();
        
        let showRow = true;
        
        // Search filter
        if (searchTerm && !text.includes(searchTerm)) {
          showRow = false;
        }
        
        // Status filter
        if (statusFilter && status !== statusFilter) {
          showRow = false;
        }
        
        // Platform filter
        if (platformFilter && platform !== platformFilter) {
          showRow = false;
        }
        
        // Date filter
        if (dateFilter && !isNaN(courseDate)) {
          const monthStart = new Date(today.getFullYear(), today.getMonth(), 1);
          const monthEnd = new Date(today.getFullYear(), today.getMonth() + 1, 0);
          const nextMonthStart = new Date(today.getFullYear(), today.getMonth() + 1, 1);
          const nextMonthEnd = new Date(today.getFullYear(), today.getMonth() + 2, 0);
          
          switch(dateFilter) {
            case 'upcoming':
              if (courseDate < today) showRow = false;
              break;
            case 'this-week':
              const weekEnd = new Date(today);
              weekEnd.setDate(today.getDate() + 7);
              if (courseDate < today || courseDate > weekEnd) showRow = false;
              break;
            case 'this-month':
              if (courseDate < monthStart || courseDate > monthEnd) showRow = false;
              break;
            case 'next-month':
              if (courseDate < nextMonthStart || courseDate > nextMonthEnd) showRow = false;
              break;
          }
        }
        
        row.style.display = showRow ? '' : 'none';
      });
    }

    function sortCourses() {
      const sortBy = document.getElementById('sortBy').value;
      const tbody = document.querySelector('#coursesTable tbody');
      const rows = Array.from(tbody.querySelectorAll('tr'));
      
      rows.sort((a, b) => {
        switch(sortBy) {
          case 'date-asc':
            return new Date(a.getAttribute('data-date')) - new Date(b.getAttribute('data-date'));
          case 'date-desc':
            return new Date(b.getAttribute('data-date')) - new Date(a.getAttribute('data-date'));
          case 'price-asc':
            return parseFloat(a.getAttribute('data-price')) - parseFloat(b.getAttribute('data-price'));
          case 'price-desc':
            return parseFloat(b.getAttribute('data-price')) - parseFloat(a.getAttribute('data-price'));
          default:
            return 0;
        }
      });
      
      // Re-append sorted rows
      rows.forEach(row => tbody.appendChild(row));
      
      // Update row numbers
      rows.forEach((row, index) => {
        row.querySelector('td:first-child').textContent = index + 1;
      });
    }

    // View toggle
    document.getElementById('tableViewBtn').addEventListener('click', function() {
      document.getElementById('tableView').style.display = 'block';
      document.getElementById('gridView').style.display = 'none';
      this.classList.add('active');
      document.getElementById('gridViewBtn').classList.remove('active');
    });
    
    document.getElementById('gridViewBtn').addEventListener('click', function() {
      document.getElementById('tableView').style.display = 'none';
      document.getElementById('gridView').style.display = 'block';
      this.classList.add('active');
      document.getElementById('tableViewBtn').classList.remove('active');
    });

    // Initialize page
    console.log('📊 Page loaded with <%= courses.length %> courses');
    console.log('👤 User logged in:', <%= user ? 'true' : 'false' %>);
</script>

  <%- include('partials/footer') %>
</body>
</html>