<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Email Management Dashboard - IAAI Admin</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f3f4f6;
            color: #1f2937;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .header {
            background: white;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }
        
        .header h1 {
            color: #1a365d;
            font-size: 2rem;
            margin-bottom: 10px;
        }
        
        .header p {
            color: #6b7280;
        }
        
        .grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .card {
            background: white;
            padding: 25px;
            border-radius: 12px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }
        
        .card h2 {
            font-size: 1.25rem;
            color: #374151;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .card h2 i {
            color: #3b82f6;
        }
        
        .btn {
            background: #3b82f6;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 0.875rem;
            font-weight: 500;
            transition: background-color 0.2s;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }
        
        .btn:hover {
            background: #2563eb;
        }
        
        .btn-secondary {
            background: #6b7280;
        }
        
        .btn-secondary:hover {
            background: #4b5563;
        }
        
        .btn-success {
            background: #10b981;
        }
        
        .btn-success:hover {
            background: #059669;
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
            color: #374151;
        }
        
        .form-control {
            width: 100%;
            padding: 8px 12px;
            border: 1px solid #d1d5db;
            border-radius: 6px;
            font-size: 0.875rem;
        }
        
        .form-control:focus {
            outline: none;
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59,130,246,0.1);
        }
        
        select.form-control {
            cursor: pointer;
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 15px;
            margin-top: 20px;
        }
        
        .stat-card {
            background: #f9fafb;
            padding: 15px;
            border-radius: 8px;
            text-align: center;
        }
        
        .stat-number {
            font-size: 1.5rem;
            font-weight: 700;
            color: #1f2937;
        }
        
        .stat-label {
            font-size: 0.75rem;
            color: #6b7280;
            text-transform: uppercase;
            letter-spacing: 0.05em;
        }
        
        .template-list {
            display: flex;
            flex-direction: column;
            gap: 10px;
            margin-top: 15px;
        }
        
        .template-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 12px;
            background: #f9fafb;
            border-radius: 6px;
            border: 1px solid #e5e7eb;
        }
        
        .template-item:hover {
            background: #f3f4f6;
        }
        
        .iframe-container {
            width: 100%;
            height: 600px;
            border: 1px solid #d1d5db;
            border-radius: 8px;
            overflow: hidden;
            margin-top: 20px;
            display: none;
        }
        
        iframe {
            width: 100%;
            height: 100%;
            border: none;
        }
        
        .back-link {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            color: #3b82f6;
            text-decoration: none;
            margin-bottom: 20px;
            font-weight: 500;
        }
        
        .back-link:hover {
            color: #2563eb;
        }
        
        .test-section {
            margin-top: 20px;
            padding: 20px;
            background: #f9fafb;
            border-radius: 8px;
            border: 1px solid #e5e7eb;
        }
    </style>
</head>

<%- include('partials/header') %>

<body>
    <div class="container">
        <a href="/dashboard" class="back-link">
            <i class="fas fa-arrow-left"></i> Back to Dashboard
        </a>
        
        <div class="header">
            <h1><i class="fas fa-envelope"></i> Email Management Dashboard</h1>
            <p>Test and monitor email communications</p>
        </div>
        
        <!-- Email Statistics -->
        <div class="card">
            <h2><i class="fas fa-chart-line"></i> Email Statistics</h2>
            <div class="stats-grid" id="emailStats">
                <div class="stat-card">
                    <div class="stat-number">0</div>
                    <div class="stat-label">Sent Today</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number">0</div>
                    <div class="stat-label">This Week</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number">0</div>
                    <div class="stat-label">This Month</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number">0</div>
                    <div class="stat-label">Failed</div>
                </div>
            </div>
        </div>
        
        <div class="grid">
            <!-- Test Email Configuration -->
            <div class="card">
                <h2><i class="fas fa-cog"></i> Test Configuration</h2>
                <p style="margin-bottom: 15px; color: #6b7280;">Verify your email settings are working correctly</p>
                <button class="btn" onclick="testEmailConfig()">
                    <i class="fas fa-check-circle"></i> Test Email Config
                </button>
            </div>
            
            <!-- Send Test Email -->
            <div class="card">
                <h2><i class="fas fa-paper-plane"></i> Send Test Email</h2>
                <div class="form-group">
                    <label>Recipient Email</label>
                    <input type="email" id="testEmail" class="form-control" placeholder="test@example.com">
                </div>
                <div class="form-group">
                    <label>Email Type</label>
                    <select id="emailType" class="form-control">
                        <option value="test">Simple Test Email</option>
                        <option value="approval">User Approval</option>
                        <option value="course">Course Registration</option>
                        <option value="certificate">Certificate Earned</option>
                    </select>
                </div>
                <button class="btn" onclick="sendTestEmail()">
                    <i class="fas fa-send"></i> Send Test Email
                </button>
            </div>
            
            <!-- Trigger Actions -->
            <div class="card">
                <h2><i class="fas fa-clock"></i> Trigger Actions</h2>
                <p style="margin-bottom: 15px; color: #6b7280;">Manually trigger scheduled email tasks</p>
                <button class="btn btn-secondary" onclick="triggerCourseReminders()">
                    <i class="fas fa-bell"></i> Check Course Reminders
                </button>
            </div>
        </div>
        
        <!-- Email Templates Preview -->
        <div class="card">
            <h2><i class="fas fa-eye"></i> Preview Email Templates</h2>
            <div class="template-list">
                <div class="template-item">
                    <span><i class="fas fa-user-check"></i> User Approval</span>
                    <button class="btn btn-sm" onclick="previewTemplate('userApproval')">Preview</button>
                </div>
                <div class="template-item">
                    <span><i class="fas fa-user-times"></i> User Rejection</span>
                    <button class="btn btn-sm" onclick="previewTemplate('userRejection')">Preview</button>
                </div>
                <div class="template-item">
                    <span><i class="fas fa-graduation-cap"></i> Course Registration</span>
                    <button class="btn btn-sm" onclick="previewTemplate('courseRegistration')">Preview</button>
                </div>
                <div class="template-item">
                    <span><i class="fas fa-trophy"></i> Certificate Earned</span>
                    <button class="btn btn-sm" onclick="previewTemplate('certificateEarned')">Preview</button>
                </div>
                <div class="template-item">
                    <span><i class="fas fa-bell"></i> Course Reminder</span>
                    <button class="btn btn-sm" onclick="previewTemplate('courseReminder')">Preview</button>
                </div>
                <div class="template-item">
                    <span><i class="fas fa-key"></i> Password Reset</span>
                    <button class="btn btn-sm" onclick="previewTemplate('passwordReset')">Preview</button>
                </div>
                <div class="template-item">
                    <span><i class="fas fa-receipt"></i> Payment Receipt</span>
                    <button class="btn btn-sm" onclick="previewTemplate('paymentReceipt')">Preview</button>
                </div>
                <div class="template-item">
                    <span><i class="fas fa-bullhorn"></i> New Course Announcement</span>
                    <button class="btn btn-sm" onclick="previewTemplate('newCourseAnnouncement')">Preview</button>
                </div>
                <div class="template-item">
                    <span><i class="fas fa-newspaper"></i> Weekly Digest</span>
                    <button class="btn btn-sm" onclick="previewTemplate('weeklyDigest')">Preview</button>
                </div>
                <div class="template-item">
                    <span><i class="fas fa-check-square"></i> Course Completion</span>
                    <button class="btn btn-sm" onclick="previewTemplate('courseCompletion')">Preview</button>
                </div>
            </div>
            
            <div class="iframe-container" id="previewContainer">
                <iframe id="previewFrame"></iframe>
            </div>
        </div>
        
        <!-- Test Gmail Connection -->
        <div class="card test-section">
            <h2><i class="fas fa-at"></i> Gmail Configuration Status</h2>
            <p style="margin-bottom: 15px; color: #6b7280;">Current email settings from environment</p>
            <div style="background: #f3f4f6; padding: 15px; border-radius: 6px; font-family: monospace; font-size: 0.875rem;">
                <div>EMAIL_SERVICE: <%= process.env.EMAIL_SERVICE || 'Not set' %></div>
                <div>EMAIL_USER: <%= process.env.EMAIL_USER || 'Not set' %></div>
                <div>EMAIL_PASS: <%= process.env.EMAIL_PASS ? '****** (set)' : 'Not set' %></div>
                <div>EMAIL_FROM: <%= process.env.EMAIL_FROM || 'Not set' %></div>
                <div>SUPPORT_EMAIL: <%= process.env.SUPPORT_EMAIL || 'Not set' %></div>
            </div>
        </div>
    </div>
    
    <%- include('partials/footer') %>
    
    <script>
        // Load email statistics on page load
        async function loadEmailStats() {
            try {
                const response = await fetch('/email-stats');
                const data = await response.json();
                
                if (data.success) {
                    document.querySelector('.stats-grid').innerHTML = `
                        <div class="stat-card">
                            <div class="stat-number">${data.stats.today.sent}</div>
                            <div class="stat-label">Sent Today</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-number">${data.stats.thisWeek.sent}</div>
                            <div class="stat-label">This Week</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-number">${data.stats.thisMonth.sent}</div>
                            <div class="stat-label">This Month</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-number">${data.stats.today.failed}</div>
                            <div class="stat-label">Failed</div>
                        </div>
                    `;
                }
            } catch (error) {
                console.error('Error loading stats:', error);
            }
        }
        
        // Test email configuration
        async function testEmailConfig() {
            try {
                const response = await fetch('/test-email-config');
                const result = await response.json();
                
                if (result.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Configuration Valid!',
                        text: result.message
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Configuration Error',
                        text: result.message
                    });
                }
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Failed to test email configuration'
                });
            }
        }
        
        // Send test email
        async function sendTestEmail() {
            const email = document.getElementById('testEmail').value;
            const type = document.getElementById('emailType').value;
            
            if (!email) {
                Swal.fire('Error', 'Please enter a recipient email', 'error');
                return;
            }
            
            try {
                const response = await fetch('/test-email-send', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ to: email, type: type })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Email Sent!',
                        text: result.message
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: result.message
                    });
                }
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Failed to send test email'
                });
            }
        }
        
        // Preview email template
        async function previewTemplate(template) {
            try {
                const response = await fetch('/preview-email-template', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ template: template, data: {} })
                });
                
                if (response.ok) {
                    const html = await response.text();
                    const iframe = document.getElementById('previewFrame');
                    const container = document.getElementById('previewContainer');
                    
                    iframe.srcdoc = html;
                    container.style.display = 'block';
                    container.scrollIntoView({ behavior: 'smooth' });
                } else {
                    const error = await response.json();
                    Swal.fire('Error', error.message, 'error');
                }
            } catch (error) {
                Swal.fire('Error', 'Failed to preview template', 'error');
            }
        }
        
        // Trigger course reminders
        async function triggerCourseReminders() {
            try {
                const response = await fetch('/test-course-reminder', {
                    method: 'POST'
                });
                
                const result = await response.json();
                
                if (result.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Reminders Checked',
                        text: result.message
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: result.message
                    });
                }
            } catch (error) {
                Swal.fire('Error', 'Failed to check reminders', 'error');
            }
        }
        
        // Load stats on page load
        loadEmailStats();
        
        // Refresh stats every 30 seconds
        setInterval(loadEmailStats, 30000);
    </script>
</body>
</html>